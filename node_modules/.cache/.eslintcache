[{"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\index.tsx":"1","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\redux\\Store.ts":"2","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\App.tsx":"3","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\i18n\\Metronici18n.tsx":"4","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\index.ts":"5","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\redux\\RootReducer.ts":"6","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\i18n\\i18nProvider.tsx":"7","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\routing\\Routes.tsx":"8","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\redux\\AuthInit.tsx":"9","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\axios\\SetupAxios.ts":"10","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\index.ts":"11","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\redux\\AuthRedux.ts":"12","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts":"13","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\routing\\PrivateRoutes.tsx":"14","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\MasterInit.tsx":"15","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\MasterLayout.tsx":"16","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\errors\\ErrorsPage.tsx":"17","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\index.ts":"18","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\index.ts":"19","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\index.ts":"20","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\index.ts":"21","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\index.ts":"22","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\index.ts":"23","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\index.ts":"24","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\index.ts":"25","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\index.ts":"26","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\index.ts":"27","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\index.ts":"28","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\index.ts":"29","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\index.ts":"30","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\index.ts":"31","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\index.ts":"32","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\LayoutModels.ts":"33","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\LayoutSetup.ts":"34","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts":"35","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\LayoutProvider.tsx":"36","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\PageData.tsx":"37","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx":"38","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\utils\\AxiosConfig.ts":"39","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\AccountPage.tsx":"40","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\AccountPage.tsx":"41","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\AccountPage.tsx":"42","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\AccountPage.tsx":"43","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\VpsThreadList.tsx":"44","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\OrdersPage.tsx":"45","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\OrdersPage.tsx":"46","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\OrdersPage.tsx":"47","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrdersPage.tsx":"48","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\OrdersPage.tsx":"49","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\ComputerList.tsx":"50","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\OrdersPage.tsx":"51","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\OrdersPage.tsx":"52","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\OrdersPage.tsx":"53","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\ScrollTop.tsx":"54","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\Footer.tsx":"55","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\Content.tsx":"56","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx":"57","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx":"58","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx":"59","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\errors\\components\\Error500.tsx":"60","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\errors\\components\\Error404.tsx":"61","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\AuthPage.tsx":"62","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\Logout.tsx":"63","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts":"64","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\redux\\OrdersRedux.ts":"65","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\redux\\OrdersRedux.ts":"66","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts":"67","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\redux\\OrdersRedux.ts":"68","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\redux\\OrdersRedux.ts":"69","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\redux\\OrdersRedux.ts":"70","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\redux\\OrdersRedux.ts":"71","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\redux\\OrdersRedux.ts":"72","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\redux\\AccountRedux.ts":"73","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\redux\\AccountRedux.ts":"74","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\redux\\AccountRedux.ts":"75","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\redux\\OrdersRedux.ts":"76","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\redux\\AccountRedux.ts":"77","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\OrdersPage.tsx":"78","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\utils\\ApiHelper.ts":"79","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\index.ts":"80","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\index.ts":"81","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\index.ts":"82","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\UserList.tsx":"83","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\UserList.tsx":"84","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\UserList.tsx":"85","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\OrderList.tsx":"86","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\OrderList.tsx":"87","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\OrderList.tsx":"88","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrderList.tsx":"89","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\OrderList.tsx":"90","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\OrderList.tsx":"91","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\OrderList.tsx":"92","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\OrderList.tsx":"93","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\UserList.tsx":"94","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\header\\Topbar.tsx":"95","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx":"96","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx":"97","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts":"98","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\redux\\OrdersCRUD.ts":"99","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\redux\\OrdersCRUD.ts":"100","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\redux\\OrdersCRUD.ts":"101","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts":"102","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\redux\\OrdersCRUD.ts":"103","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\redux\\OrdersCRUD.ts":"104","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\redux\\OrdersCRUD.ts":"105","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\redux\\OrdersCRUD.ts":"106","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\redux\\AccountCRUD.ts":"107","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\redux\\AccountCRUD.ts":"108","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\redux\\AccountCRUD.ts":"109","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\redux\\AccountCRUD.ts":"110","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\redux\\OrdersCRUD.ts":"111","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\Video.tsx":"112","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\OrderList.tsx":"113","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts":"114","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts":"115","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts":"116","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts":"117","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts":"118","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\dataExamples.ts":"119","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\chat\\ChatInner.tsx":"120","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx":"121","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx":"122","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\modals\\EditModal\\index.tsx":"123","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\components\\KTSVG.tsx":"124","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\EditModal\\index.tsx":"125","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\EditModal\\index.tsx":"126","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx":"127","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\ChannelStaticItem\\index.tsx":"128","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\EditModal\\index.tsx":"129","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\EditModal\\index.tsx":"130","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\EditModal\\index.tsx":"131","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\modals\\EditModal\\index.tsx":"132","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\EditModal\\index.tsx":"133","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\modals\\EditModal\\index.tsx":"134","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx":"135","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\StaticList.tsx":"136","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx":"137","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts":"138","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\index.ts":"139","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\AssetHelpers.ts":"140","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\BhManualModal\\index.tsx":"141","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\CheckBhVideoIdManualModal\\index.tsx":"142","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\BhManualModal\\index.tsx":"143","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\BhManualModal\\index.tsx":"144","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\components\\UserItem\\index.tsx":"145","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\components\\UserItem\\index.tsx":"146","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\components\\UserItem\\index.tsx":"147","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx":"148","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx":"149","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx":"150","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts":"151","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts":"152","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts":"153","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts":"154","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts":"155","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts":"156","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts":"157","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts":"158","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts":"159","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx":"160","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\RouterHelpers.ts":"161","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts":"162","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts":"163","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts":"164","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts":"165","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts":"166","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts":"167","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx":"168","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts":"169","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts":"170","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx":"171","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx":"172","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\portal\\Portal.tsx":"173","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx":"174","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx":"175","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx":"176","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx":"177","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx":"178","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx":"179","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx":"180","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx":"181","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx":"182","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx":"183","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\AddModal\\index.tsx":"184","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\EditMulti\\index.tsx":"185","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\AddManualModal\\index.tsx":"186","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\AddModal\\index.tsx":"187","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\EditMulti\\index.tsx":"188","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\AddManualModal\\index.tsx":"189","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\CheckBhManualModal\\index.tsx":"190","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\BhManualModal\\index.tsx":"191","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\EditMulti\\index.tsx":"192","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\AddModal\\index.tsx":"193","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\EditMulti\\index.tsx":"194","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\AddManualModal\\index.tsx":"195","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\AddModal\\index.tsx":"196","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\AddManualModal\\index.tsx":"197","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\EditMulti\\index.tsx":"198","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\AddModal\\index.tsx":"199","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\AddManualModal\\index.tsx":"200","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\components\\OrderItem\\index.tsx":"201","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\components\\OrderItem\\index.tsx":"202","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\components\\OrderItem\\index.tsx":"203","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\components\\OrderItem\\index.tsx":"204","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditMulti\\index.tsx":"205","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\components\\OrderItem\\index.tsx":"206","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\AddManualModal\\index.tsx":"207","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\AddModal\\index.tsx":"208","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\components\\OrderItem\\index.tsx":"209","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\EditMulti\\index.tsx":"210","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\AddManualModal\\index.tsx":"211","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx":"212","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\AddModal\\index.tsx":"213","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx":"214","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\components\\OrderItem\\index.tsx":"215","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\components\\OrderItem\\index.tsx":"216","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx":"217","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx":"218","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx":"219","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item7.tsx":"220","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item8.tsx":"221","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item6.tsx":"222","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item5.tsx":"223","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item4.tsx":"224","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item1.tsx":"225","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item2.tsx":"226","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item3.tsx":"227","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\MenuModal.tsx":"228","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx":"229","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\InboxCompose.tsx":"230","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\SearchModal.tsx":"231","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx":"232","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\Login.tsx":"233","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\search\\Search.tsx":"234","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx":"235","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\Registration.tsx":"236","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\ComputerListSub.tsx":"237","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\index.ts":"238","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\redux\\OrdersRedux.ts":"239","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\OrdersPage.tsx":"240","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\redux\\OrdersCRUD.ts":"241","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\OrderList.tsx":"242","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\EditModal\\index.tsx":"243","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\AddModal\\index.tsx":"244","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\BhManualModal\\index.tsx":"245","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\EditMulti\\index.tsx":"246","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\AddManualModal\\index.tsx":"247","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\components\\OrderItem\\index.tsx":"248","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditModal\\index.tsx":"249","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrderListCmt.tsx":"250","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\components\\OrderItemCmt\\index.tsx":"251","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditModalCmt\\index.tsx":"252","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditMultiCmt\\index.tsx":"253","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\UserListLimit.tsx":"254","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\components\\UserItemLimit\\index.tsx":"255","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\modals\\EditLimitModal\\index.tsx":"256","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\OrdersPage.tsx":"257","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\index.ts":"258","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\redux\\OrdersRedux.ts":"259","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\OrderList.tsx":"260","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\redux\\OrdersCRUD.ts":"261","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\EditModal\\index.tsx":"262","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\AddManualModal\\index.tsx":"263","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\EditMulti\\index.tsx":"264","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\BhManualModal\\index.tsx":"265","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\components\\OrderItem\\index.tsx":"266","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\AddModal\\index.tsx":"267","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\index.ts":"268","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\OrdersPage.tsx":"269","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\redux\\OrdersRedux.ts":"270","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\redux\\OrdersCRUD.ts":"271","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\OrderList.tsx":"272","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\EditModal\\index.tsx":"273","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\AddManualModal\\index.tsx":"274","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\AddModal\\index.tsx":"275","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\EditMulti\\index.tsx":"276","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\components\\OrderItem\\index.tsx":"277","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\SockList.tsx":"278","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\AuthenList.tsx":"279","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\SockItem\\index.tsx":"280","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\ProxySettingList.tsx":"281","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\modals\\EditProxyModal\\index.tsx":"282","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\AuthenItem\\index.tsx":"283","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\components\\ProxySettingItem\\index.tsx":"284","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\AccountPage.tsx":"285","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\redux\\AccountRedux.ts":"286","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\UserList.tsx":"287","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\redux\\AccountCRUD.ts":"288","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\modals\\EditModal\\index.tsx":"289","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\modals\\EditMulti\\index.tsx":"290","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\modals\\RestartMulti\\index.tsx":"291","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\components\\UserItem\\index.tsx":"292","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\index.ts":"293","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\OrdersPage.tsx":"294","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\redux\\OrdersRedux.ts":"295","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\OrderList.tsx":"296","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\redux\\OrdersCRUD.ts":"297","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\EditModal\\index.tsx":"298","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\AddModal\\index.tsx":"299","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\AddManualModal\\index.tsx":"300","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\EditMulti\\index.tsx":"301","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\BhManualModal\\index.tsx":"302","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\components\\OrderItem\\index.tsx":"303","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\index.ts":"304","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\index.ts":"305","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\redux\\OrdersRedux.ts":"306","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\OrdersPage.tsx":"307","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\redux\\OrdersCRUD.ts":"308","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\OrderList.tsx":"309","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\EditModal\\index.tsx":"310","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\AddManualModal\\index.tsx":"311","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\AddModal\\index.tsx":"312","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\EditMulti\\index.tsx":"313","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\components\\OrderItem\\index.tsx":"314","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\AccountPage.tsx":"315","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\index.ts":"316","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\redux\\AccountRedux.ts":"317","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\UserList.tsx":"318","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\redux\\AccountCRUD.ts":"319","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\EditModal\\index.tsx":"320","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\EditMulti\\index.tsx":"321","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\RestartMulti\\index.tsx":"322","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\components\\UserItem\\index.tsx":"323","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrderListFollowerTikTok.tsx":"324","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\components\\OrderFollowerTikTokItem\\index.tsx":"325","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\DeviceModal\\index.tsx":"326","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\DeviceList.tsx":"327","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\components\\DeviceItem\\index.tsx":"328"},{"size":1812,"mtime":1688802566192,"results":"329","hashOfConfig":"330"},{"size":942,"mtime":1688802566194,"results":"331","hashOfConfig":"330"},{"size":762,"mtime":1688802566111,"results":"332","hashOfConfig":"330"},{"size":1020,"mtime":1688802566057,"results":"333","hashOfConfig":"330"},{"size":95,"mtime":1688802566193,"results":"334","hashOfConfig":"330"},{"size":2886,"mtime":1711173825645,"results":"335","hashOfConfig":"330"},{"size":1184,"mtime":1688802566058,"results":"336","hashOfConfig":"330"},{"size":1591,"mtime":1688802566192,"results":"337","hashOfConfig":"330"},{"size":1772,"mtime":1688802566120,"results":"338","hashOfConfig":"330"},{"size":231,"mtime":1688802566193,"results":"339","hashOfConfig":"330"},{"size":204,"mtime":1688802566075,"results":"340","hashOfConfig":"330"},{"size":2837,"mtime":1688802566120,"results":"341","hashOfConfig":"330"},{"size":1169,"mtime":1688802566120,"results":"342","hashOfConfig":"330"},{"size":4335,"mtime":1711173825635,"results":"343","hashOfConfig":"330"},{"size":889,"mtime":1688802566064,"results":"344","hashOfConfig":"330"},{"size":1665,"mtime":1688802566064,"results":"345","hashOfConfig":"330"},{"size":2826,"mtime":1688802566124,"results":"346","hashOfConfig":"330"},{"size":160,"mtime":1688802566118,"results":"347","hashOfConfig":"330"},{"size":67,"mtime":1688802566112,"results":"348","hashOfConfig":"330"},{"size":65,"mtime":1688802566137,"results":"349","hashOfConfig":"330"},{"size":65,"mtime":1688802566147,"results":"350","hashOfConfig":"330"},{"size":65,"mtime":1688802566152,"results":"351","hashOfConfig":"330"},{"size":65,"mtime":1688802566168,"results":"352","hashOfConfig":"330"},{"size":65,"mtime":1688802566130,"results":"353","hashOfConfig":"330"},{"size":68,"mtime":1688802566127,"results":"354","hashOfConfig":"330"},{"size":65,"mtime":1688802566142,"results":"355","hashOfConfig":"330"},{"size":65,"mtime":1688802566162,"results":"356","hashOfConfig":"330"},{"size":65,"mtime":1688802566157,"results":"357","hashOfConfig":"330"},{"size":65,"mtime":1688802566122,"results":"358","hashOfConfig":"330"},{"size":67,"mtime":1688802566183,"results":"359","hashOfConfig":"330"},{"size":67,"mtime":1688802566180,"results":"360","hashOfConfig":"330"},{"size":67,"mtime":1688802566186,"results":"361","hashOfConfig":"330"},{"size":3617,"mtime":1688802566073,"results":"362","hashOfConfig":"330"},{"size":8664,"mtime":1688802566074,"results":"363","hashOfConfig":"330"},{"size":2169,"mtime":1688802566073,"results":"364","hashOfConfig":"330"},{"size":2457,"mtime":1688802566073,"results":"365","hashOfConfig":"330"},{"size":2476,"mtime":1688802566074,"results":"366","hashOfConfig":"330"},{"size":1672,"mtime":1688802566074,"results":"367","hashOfConfig":"330"},{"size":560,"mtime":1688802566195,"results":"368","hashOfConfig":"330"},{"size":1835,"mtime":1711343751922,"results":"369","hashOfConfig":"330"},{"size":1668,"mtime":1704348827742,"results":"370","hashOfConfig":"330"},{"size":4243,"mtime":1708064641920,"results":"371","hashOfConfig":"330"},{"size":1687,"mtime":1711605666547,"results":"372","hashOfConfig":"330"},{"size":7967,"mtime":1688802566126,"results":"373","hashOfConfig":"330"},{"size":2069,"mtime":1708582849990,"results":"374","hashOfConfig":"330"},{"size":5002,"mtime":1708581983050,"results":"375","hashOfConfig":"330"},{"size":2053,"mtime":1708583211243,"results":"376","hashOfConfig":"330"},{"size":5774,"mtime":1711532271927,"results":"377","hashOfConfig":"330"},{"size":2054,"mtime":1708583476481,"results":"378","hashOfConfig":"330"},{"size":10505,"mtime":1712305894479,"results":"379","hashOfConfig":"330"},{"size":2087,"mtime":1708583531604,"results":"380","hashOfConfig":"330"},{"size":1699,"mtime":1704388455738,"results":"381","hashOfConfig":"330"},{"size":2059,"mtime":1712049760632,"results":"382","hashOfConfig":"330"},{"size":1437,"mtime":1688802566065,"results":"383","hashOfConfig":"330"},{"size":915,"mtime":1688802566065,"results":"384","hashOfConfig":"330"},{"size":548,"mtime":1688802566064,"results":"385","hashOfConfig":"330"},{"size":3121,"mtime":1688802566066,"results":"386","hashOfConfig":"330"},{"size":2519,"mtime":1702632736527,"results":"387","hashOfConfig":"330"},{"size":857,"mtime":1688802566189,"results":"388","hashOfConfig":"330"},{"size":329,"mtime":1688802566125,"results":"389","hashOfConfig":"330"},{"size":356,"mtime":1688802566124,"results":"390","hashOfConfig":"330"},{"size":2418,"mtime":1688802566116,"results":"391","hashOfConfig":"330"},{"size":435,"mtime":1688802566116,"results":"392","hashOfConfig":"330"},{"size":8962,"mtime":1688802566115,"results":"393","hashOfConfig":"330"},{"size":14430,"mtime":1694664867394,"results":"394","hashOfConfig":"330"},{"size":17371,"mtime":1688802566140,"results":"395","hashOfConfig":"330"},{"size":12966,"mtime":1688802566171,"results":"396","hashOfConfig":"330"},{"size":16107,"mtime":1688802566135,"results":"397","hashOfConfig":"330"},{"size":16011,"mtime":1688802566156,"results":"398","hashOfConfig":"330"},{"size":16188,"mtime":1688802566145,"results":"399","hashOfConfig":"330"},{"size":14195,"mtime":1688802566161,"results":"400","hashOfConfig":"330"},{"size":22837,"mtime":1711532219488,"results":"401","hashOfConfig":"330"},{"size":15953,"mtime":1708064641926,"results":"402","hashOfConfig":"330"},{"size":8582,"mtime":1706763418334,"results":"403","hashOfConfig":"330"},{"size":9004,"mtime":1688802566182,"results":"404","hashOfConfig":"330"},{"size":14010,"mtime":1688802566123,"results":"405","hashOfConfig":"330"},{"size":8953,"mtime":1688802566188,"results":"406","hashOfConfig":"330"},{"size":1465,"mtime":1688802566167,"results":"407","hashOfConfig":"330"},{"size":2418,"mtime":1688802566195,"results":"408","hashOfConfig":"330"},{"size":1067,"mtime":1688802566082,"results":"409","hashOfConfig":"330"},{"size":522,"mtime":1688802566050,"results":"410","hashOfConfig":"330"},{"size":133,"mtime":1688802566055,"results":"411","hashOfConfig":"330"},{"size":3732,"mtime":1688802566185,"results":"412","hashOfConfig":"330"},{"size":20692,"mtime":1713262040127,"results":"413","hashOfConfig":"330"},{"size":4214,"mtime":1699351421783,"results":"414","hashOfConfig":"330"},{"size":42406,"mtime":1712055360772,"results":"415","hashOfConfig":"330"},{"size":28578,"mtime":1712152082069,"results":"416","hashOfConfig":"330"},{"size":42609,"mtime":1712056750256,"results":"417","hashOfConfig":"330"},{"size":43303,"mtime":1716284372417,"results":"418","hashOfConfig":"330"},{"size":62906,"mtime":1712152117398,"results":"419","hashOfConfig":"330"},{"size":42435,"mtime":1708583211264,"results":"420","hashOfConfig":"330"},{"size":64099,"mtime":1723189553672,"results":"421","hashOfConfig":"330"},{"size":39517,"mtime":1708582850002,"results":"422","hashOfConfig":"330"},{"size":18492,"mtime":1711626298335,"results":"423","hashOfConfig":"330"},{"size":9850,"mtime":1731476618104,"results":"424","hashOfConfig":"330"},{"size":1627,"mtime":1688802566067,"results":"425","hashOfConfig":"330"},{"size":2460,"mtime":1688802566070,"results":"426","hashOfConfig":"330"},{"size":837,"mtime":1688802566115,"results":"427","hashOfConfig":"330"},{"size":2148,"mtime":1694662293231,"results":"428","hashOfConfig":"330"},{"size":3404,"mtime":1688802566135,"results":"429","hashOfConfig":"330"},{"size":2497,"mtime":1688802566140,"results":"430","hashOfConfig":"330"},{"size":2122,"mtime":1688802566171,"results":"431","hashOfConfig":"330"},{"size":2351,"mtime":1688802566145,"results":"432","hashOfConfig":"330"},{"size":2872,"mtime":1692866149115,"results":"433","hashOfConfig":"330"},{"size":2138,"mtime":1688802566160,"results":"434","hashOfConfig":"330"},{"size":3000,"mtime":1715063114625,"results":"435","hashOfConfig":"330"},{"size":1506,"mtime":1708064641926,"results":"436","hashOfConfig":"330"},{"size":1201,"mtime":1709560418859,"results":"437","hashOfConfig":"330"},{"size":2420,"mtime":1688802566181,"results":"438","hashOfConfig":"330"},{"size":849,"mtime":1688802566187,"results":"439","hashOfConfig":"330"},{"size":1786,"mtime":1688802566123,"results":"440","hashOfConfig":"330"},{"size":627,"mtime":1688802566117,"results":"441","hashOfConfig":"330"},{"size":10983,"mtime":1688802566167,"results":"442","hashOfConfig":"330"},{"size":12789,"mtime":1688802566043,"results":"443","hashOfConfig":"330"},{"size":29574,"mtime":1688802566042,"results":"444","hashOfConfig":"330"},{"size":7528,"mtime":1688802566047,"results":"445","hashOfConfig":"330"},{"size":5769,"mtime":1688802566050,"results":"446","hashOfConfig":"330"},{"size":5178,"mtime":1688802566050,"results":"447","hashOfConfig":"330"},{"size":7226,"mtime":1688802566054,"results":"448","hashOfConfig":"330"},{"size":6662,"mtime":1688802566075,"results":"449","hashOfConfig":"330"},{"size":38104,"mtime":1688802566090,"results":"450","hashOfConfig":"330"},{"size":11051,"mtime":1709184786834,"results":"451","hashOfConfig":"330"},{"size":7018,"mtime":1708580015488,"results":"452","hashOfConfig":"330"},{"size":446,"mtime":1688802566054,"results":"453","hashOfConfig":"330"},{"size":14968,"mtime":1712050059583,"results":"454","hashOfConfig":"330"},{"size":3589,"mtime":1712050211461,"results":"455","hashOfConfig":"330"},{"size":2336,"mtime":1712306418626,"results":"456","hashOfConfig":"330"},{"size":2301,"mtime":1688802566126,"results":"457","hashOfConfig":"330"},{"size":6954,"mtime":1694576343533,"results":"458","hashOfConfig":"330"},{"size":6752,"mtime":1688802566144,"results":"459","hashOfConfig":"330"},{"size":6696,"mtime":1697012994008,"results":"460","hashOfConfig":"330"},{"size":21017,"mtime":1708574695685,"results":"461","hashOfConfig":"330"},{"size":6966,"mtime":1694576423387,"results":"462","hashOfConfig":"330"},{"size":8257,"mtime":1699351695507,"results":"463","hashOfConfig":"330"},{"size":15188,"mtime":1711192901029,"results":"464","hashOfConfig":"330"},{"size":5192,"mtime":1709576516582,"results":"465","hashOfConfig":"330"},{"size":12778,"mtime":1688802566170,"results":"466","hashOfConfig":"330"},{"size":1794,"mtime":1688802566044,"results":"467","hashOfConfig":"330"},{"size":353,"mtime":1688802566040,"results":"468","hashOfConfig":"330"},{"size":86,"mtime":1688802566052,"results":"469","hashOfConfig":"330"},{"size":10958,"mtime":1688802566143,"results":"470","hashOfConfig":"330"},{"size":17506,"mtime":1694575896949,"results":"471","hashOfConfig":"330"},{"size":10958,"mtime":1688802566154,"results":"472","hashOfConfig":"330"},{"size":10992,"mtime":1694575896988,"results":"473","hashOfConfig":"330"},{"size":4026,"mtime":1688802566186,"results":"474","hashOfConfig":"330"},{"size":3681,"mtime":1699351753308,"results":"475","hashOfConfig":"330"},{"size":7831,"mtime":1711617232216,"results":"476","hashOfConfig":"330"},{"size":1357,"mtime":1688802566067,"results":"477","hashOfConfig":"330"},{"size":13755,"mtime":1688802566170,"results":"478","hashOfConfig":"330"},{"size":5536,"mtime":1688802566168,"results":"479","hashOfConfig":"330"},{"size":3490,"mtime":1688802566036,"results":"480","hashOfConfig":"330"},{"size":3260,"mtime":1688802566036,"results":"481","hashOfConfig":"330"},{"size":552,"mtime":1688802566038,"results":"482","hashOfConfig":"330"},{"size":1827,"mtime":1688802566038,"results":"483","hashOfConfig":"330"},{"size":1368,"mtime":1688802566038,"results":"484","hashOfConfig":"330"},{"size":1356,"mtime":1688802566039,"results":"485","hashOfConfig":"330"},{"size":13645,"mtime":1688802566035,"results":"486","hashOfConfig":"330"},{"size":72,"mtime":1688802566041,"results":"487","hashOfConfig":"330"},{"size":66,"mtime":1688802566040,"results":"488","hashOfConfig":"330"},{"size":10509,"mtime":1688802566169,"results":"489","hashOfConfig":"330"},{"size":380,"mtime":1688802566053,"results":"490","hashOfConfig":"330"},{"size":9001,"mtime":1688802566048,"results":"491","hashOfConfig":"330"},{"size":3912,"mtime":1688802566048,"results":"492","hashOfConfig":"330"},{"size":8478,"mtime":1688802566050,"results":"493","hashOfConfig":"330"},{"size":7156,"mtime":1688802566045,"results":"494","hashOfConfig":"330"},{"size":3816,"mtime":1688802566045,"results":"495","hashOfConfig":"330"},{"size":8916,"mtime":1688802566047,"results":"496","hashOfConfig":"330"},{"size":1785,"mtime":1709572879120,"results":"497","hashOfConfig":"330"},{"size":10780,"mtime":1688802566044,"results":"498","hashOfConfig":"330"},{"size":1488,"mtime":1688802566081,"results":"499","hashOfConfig":"330"},{"size":18696,"mtime":1688802566169,"results":"500","hashOfConfig":"330"},{"size":2287,"mtime":1688802566080,"results":"501","hashOfConfig":"330"},{"size":751,"mtime":1688802566082,"results":"502","hashOfConfig":"330"},{"size":2798,"mtime":1688802566080,"results":"503","hashOfConfig":"330"},{"size":2203,"mtime":1688802566081,"results":"504","hashOfConfig":"330"},{"size":270,"mtime":1688802566082,"results":"505","hashOfConfig":"330"},{"size":105,"mtime":1688802566089,"results":"506","hashOfConfig":"330"},{"size":107,"mtime":1688802566085,"results":"507","hashOfConfig":"330"},{"size":2657,"mtime":1688802566084,"results":"508","hashOfConfig":"330"},{"size":11552,"mtime":1688802566089,"results":"509","hashOfConfig":"330"},{"size":6254,"mtime":1688802566085,"results":"510","hashOfConfig":"330"},{"size":51383,"mtime":1688802566088,"results":"511","hashOfConfig":"330"},{"size":5476,"mtime":1688802566086,"results":"512","hashOfConfig":"330"},{"size":9810,"mtime":1694575896959,"results":"513","hashOfConfig":"330"},{"size":7630,"mtime":1694576423382,"results":"514","hashOfConfig":"330"},{"size":15034,"mtime":1711195002975,"results":"515","hashOfConfig":"330"},{"size":16320,"mtime":1711195011429,"results":"516","hashOfConfig":"330"},{"size":7581,"mtime":1688802566154,"results":"517","hashOfConfig":"330"},{"size":15013,"mtime":1711195002995,"results":"518","hashOfConfig":"330"},{"size":18657,"mtime":1694575897007,"results":"519","hashOfConfig":"330"},{"size":11357,"mtime":1694575896970,"results":"520","hashOfConfig":"330"},{"size":7602,"mtime":1693221926245,"results":"521","hashOfConfig":"330"},{"size":9794,"mtime":1694575896982,"results":"522","hashOfConfig":"330"},{"size":7624,"mtime":1688802566144,"results":"523","hashOfConfig":"330"},{"size":15018,"mtime":1711195002989,"results":"524","hashOfConfig":"330"},{"size":9787,"mtime":1688802566143,"results":"525","hashOfConfig":"330"},{"size":15006,"mtime":1711195061599,"results":"526","hashOfConfig":"330"},{"size":3877,"mtime":1694668389648,"results":"527","hashOfConfig":"330"},{"size":10520,"mtime":1688802566148,"results":"528","hashOfConfig":"330"},{"size":14158,"mtime":1711195061619,"results":"529","hashOfConfig":"330"},{"size":8864,"mtime":1711177069765,"results":"530","hashOfConfig":"330"},{"size":9420,"mtime":1711695325783,"results":"531","hashOfConfig":"330"},{"size":8846,"mtime":1711177111279,"results":"532","hashOfConfig":"330"},{"size":7661,"mtime":1715750051899,"results":"533","hashOfConfig":"330"},{"size":3565,"mtime":1697886188620,"results":"534","hashOfConfig":"330"},{"size":15199,"mtime":1711597907295,"results":"535","hashOfConfig":"330"},{"size":14123,"mtime":1711195119051,"results":"536","hashOfConfig":"330"},{"size":10495,"mtime":1710145525010,"results":"537","hashOfConfig":"330"},{"size":6146,"mtime":1715750212293,"results":"538","hashOfConfig":"330"},{"size":15475,"mtime":1688802566159,"results":"539","hashOfConfig":"330"},{"size":14158,"mtime":1711195002982,"results":"540","hashOfConfig":"330"},{"size":11627,"mtime":1709184846090,"results":"541","hashOfConfig":"330"},{"size":10520,"mtime":1688802566158,"results":"542","hashOfConfig":"330"},{"size":12264,"mtime":1709184786809,"results":"543","hashOfConfig":"330"},{"size":3356,"mtime":1709120700329,"results":"544","hashOfConfig":"330"},{"size":8250,"mtime":1711695395905,"results":"545","hashOfConfig":"330"},{"size":7747,"mtime":1711176914049,"results":"546","hashOfConfig":"330"},{"size":2274,"mtime":1688802566085,"results":"547","hashOfConfig":"330"},{"size":503,"mtime":1688802566086,"results":"548","hashOfConfig":"330"},{"size":2281,"mtime":1688802566078,"results":"549","hashOfConfig":"330"},{"size":1238,"mtime":1688802566078,"results":"550","hashOfConfig":"330"},{"size":1332,"mtime":1688802566077,"results":"551","hashOfConfig":"330"},{"size":3155,"mtime":1688802566077,"results":"552","hashOfConfig":"330"},{"size":1624,"mtime":1688802566077,"results":"553","hashOfConfig":"330"},{"size":4044,"mtime":1688802566076,"results":"554","hashOfConfig":"330"},{"size":1343,"mtime":1688802566076,"results":"555","hashOfConfig":"330"},{"size":2959,"mtime":1688802566076,"results":"556","hashOfConfig":"330"},{"size":7163,"mtime":1688802566083,"results":"557","hashOfConfig":"330"},{"size":2420,"mtime":1688802566086,"results":"558","hashOfConfig":"330"},{"size":8534,"mtime":1688802566083,"results":"559","hashOfConfig":"330"},{"size":6587,"mtime":1688802566084,"results":"560","hashOfConfig":"330"},{"size":4420,"mtime":1688802566117,"results":"561","hashOfConfig":"330"},{"size":5676,"mtime":1715062623509,"results":"562","hashOfConfig":"330"},{"size":32102,"mtime":1688802566088,"results":"563","hashOfConfig":"330"},{"size":2942,"mtime":1688802566087,"results":"564","hashOfConfig":"330"},{"size":9679,"mtime":1688802566117,"results":"565","hashOfConfig":"330"},{"size":9156,"mtime":1712307468520,"results":"566","hashOfConfig":"330"},{"size":65,"mtime":1688802566152,"results":"567","hashOfConfig":"330"},{"size":16147,"mtime":1694840301422,"results":"568","hashOfConfig":"330"},{"size":2053,"mtime":1708582580167,"results":"569","hashOfConfig":"330"},{"size":3207,"mtime":1694839122824,"results":"570","hashOfConfig":"330"},{"size":41695,"mtime":1708582597869,"results":"571","hashOfConfig":"330"},{"size":6698,"mtime":1694576485985,"results":"572","hashOfConfig":"330"},{"size":16311,"mtime":1711195119038,"results":"573","hashOfConfig":"330"},{"size":10958,"mtime":1688802566154,"results":"574","hashOfConfig":"330"},{"size":7768,"mtime":1726567002287,"results":"575","hashOfConfig":"330"},{"size":15006,"mtime":1711195119046,"results":"576","hashOfConfig":"330"},{"size":7002,"mtime":1709125315082,"results":"577","hashOfConfig":"330"},{"size":3605,"mtime":1697886254328,"results":"578","hashOfConfig":"330"},{"size":38685,"mtime":1711598048235,"results":"579","hashOfConfig":"330"},{"size":7556,"mtime":1711597907302,"results":"580","hashOfConfig":"330"},{"size":3643,"mtime":1694684334797,"results":"581","hashOfConfig":"330"},{"size":3583,"mtime":1694681213564,"results":"582","hashOfConfig":"330"},{"size":3436,"mtime":1694767139026,"results":"583","hashOfConfig":"330"},{"size":2856,"mtime":1696399481714,"results":"584","hashOfConfig":"330"},{"size":3361,"mtime":1694770401986,"results":"585","hashOfConfig":"330"},{"size":2053,"mtime":1708583626772,"results":"586","hashOfConfig":"330"},{"size":65,"mtime":1688802566152,"results":"587","hashOfConfig":"330"},{"size":16147,"mtime":1700889335294,"results":"588","hashOfConfig":"330"},{"size":49755,"mtime":1711195925186,"results":"589","hashOfConfig":"330"},{"size":2964,"mtime":1700889335301,"results":"590","hashOfConfig":"330"},{"size":6750,"mtime":1700852277638,"results":"591","hashOfConfig":"330"},{"size":15803,"mtime":1711195119070,"results":"592","hashOfConfig":"330"},{"size":7561,"mtime":1700854261633,"results":"593","hashOfConfig":"330"},{"size":10958,"mtime":1688802566154,"results":"594","hashOfConfig":"330"},{"size":9630,"mtime":1711695281626,"results":"595","hashOfConfig":"330"},{"size":12385,"mtime":1711195119056,"results":"596","hashOfConfig":"330"},{"size":65,"mtime":1688802566157,"results":"597","hashOfConfig":"330"},{"size":2087,"mtime":1708583668915,"results":"598","hashOfConfig":"330"},{"size":14446,"mtime":1700893273788,"results":"599","hashOfConfig":"330"},{"size":2141,"mtime":1700893203377,"results":"600","hashOfConfig":"330"},{"size":33059,"mtime":1711172118789,"results":"601","hashOfConfig":"330"},{"size":14974,"mtime":1712050366698,"results":"602","hashOfConfig":"330"},{"size":14158,"mtime":1711195119064,"results":"603","hashOfConfig":"330"},{"size":10520,"mtime":1688802566158,"results":"604","hashOfConfig":"330"},{"size":15475,"mtime":1688802566159,"results":"605","hashOfConfig":"330"},{"size":8411,"mtime":1711179630185,"results":"606","hashOfConfig":"330"},{"size":8108,"mtime":1711175439704,"results":"607","hashOfConfig":"330"},{"size":8129,"mtime":1705928717421,"results":"608","hashOfConfig":"330"},{"size":1888,"mtime":1711176657744,"results":"609","hashOfConfig":"330"},{"size":3646,"mtime":1708064641919,"results":"610","hashOfConfig":"330"},{"size":4968,"mtime":1708064641925,"results":"611","hashOfConfig":"330"},{"size":1865,"mtime":1712739222431,"results":"612","hashOfConfig":"330"},{"size":3404,"mtime":1708064641921,"results":"613","hashOfConfig":"330"},{"size":1813,"mtime":1709095474580,"results":"614","hashOfConfig":"330"},{"size":8924,"mtime":1711367943856,"results":"615","hashOfConfig":"330"},{"size":18501,"mtime":1711368054894,"results":"616","hashOfConfig":"330"},{"size":849,"mtime":1709093464799,"results":"617","hashOfConfig":"330"},{"size":9055,"mtime":1709536979596,"results":"618","hashOfConfig":"330"},{"size":9955,"mtime":1709536979583,"results":"619","hashOfConfig":"330"},{"size":6957,"mtime":1711367205811,"results":"620","hashOfConfig":"330"},{"size":6807,"mtime":1711176955358,"results":"621","hashOfConfig":"330"},{"size":67,"mtime":1688802566112,"results":"622","hashOfConfig":"330"},{"size":2081,"mtime":1711100377754,"results":"623","hashOfConfig":"330"},{"size":14811,"mtime":1711107154283,"results":"624","hashOfConfig":"330"},{"size":49585,"mtime":1711172788811,"results":"625","hashOfConfig":"330"},{"size":2611,"mtime":1711111139446,"results":"626","hashOfConfig":"330"},{"size":6440,"mtime":1711111571770,"results":"627","hashOfConfig":"330"},{"size":12250,"mtime":1711195759127,"results":"628","hashOfConfig":"330"},{"size":14869,"mtime":1711195061634,"results":"629","hashOfConfig":"330"},{"size":6168,"mtime":1711111275240,"results":"630","hashOfConfig":"330"},{"size":10792,"mtime":1711100891643,"results":"631","hashOfConfig":"330"},{"size":9400,"mtime":1711695481149,"results":"632","hashOfConfig":"330"},{"size":65,"mtime":1688802566152,"results":"633","hashOfConfig":"330"},{"size":65,"mtime":1688802566157,"results":"634","hashOfConfig":"330"},{"size":12989,"mtime":1711166716324,"results":"635","hashOfConfig":"330"},{"size":2009,"mtime":1711166699674,"results":"636","hashOfConfig":"330"},{"size":2148,"mtime":1711166699678,"results":"637","hashOfConfig":"330"},{"size":33509,"mtime":1711169129191,"results":"638","hashOfConfig":"330"},{"size":14967,"mtime":1688802566159,"results":"639","hashOfConfig":"330"},{"size":14158,"mtime":1711195061611,"results":"640","hashOfConfig":"330"},{"size":10520,"mtime":1688802566158,"results":"641","hashOfConfig":"330"},{"size":15475,"mtime":1688802566159,"results":"642","hashOfConfig":"330"},{"size":8007,"mtime":1711695507482,"results":"643","hashOfConfig":"330"},{"size":2304,"mtime":1711362513189,"results":"644","hashOfConfig":"330"},{"size":67,"mtime":1688802566112,"results":"645","hashOfConfig":"330"},{"size":12106,"mtime":1711368716909,"results":"646","hashOfConfig":"330"},{"size":16737,"mtime":1712916084703,"results":"647","hashOfConfig":"330"},{"size":1029,"mtime":1711341057118,"results":"648","hashOfConfig":"330"},{"size":6643,"mtime":1711368309025,"results":"649","hashOfConfig":"330"},{"size":7599,"mtime":1711367829224,"results":"650","hashOfConfig":"330"},{"size":6815,"mtime":1711367851170,"results":"651","hashOfConfig":"330"},{"size":8826,"mtime":1719311843897,"results":"652","hashOfConfig":"330"},{"size":36543,"mtime":1711531079334,"results":"653","hashOfConfig":"330"},{"size":14802,"mtime":1711528432208,"results":"654","hashOfConfig":"330"},{"size":1394,"mtime":1711361152563,"results":"655","hashOfConfig":"330"},{"size":14839,"mtime":1712913473370,"results":"656","hashOfConfig":"330"},{"size":5730,"mtime":1712915352173,"results":"657","hashOfConfig":"330"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"661"},"rgro9w",{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"674","messages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"676","messages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"680","messages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"682","messages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"661"},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"743","usedDeprecatedRules":"661"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"746","usedDeprecatedRules":"661"},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749","usedDeprecatedRules":"661"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"752","usedDeprecatedRules":"661"},{"filePath":"753","messages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"661"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"661"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"661"},{"filePath":"762","messages":"763","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"661"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"767","usedDeprecatedRules":"661"},{"filePath":"768","messages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"661"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"773","usedDeprecatedRules":"661"},{"filePath":"774","messages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776","usedDeprecatedRules":"661"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"661"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"790","usedDeprecatedRules":"661"},{"filePath":"791","messages":"792","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"661"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"804","usedDeprecatedRules":"661"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"807","usedDeprecatedRules":"661"},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"810","usedDeprecatedRules":"661"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"813","usedDeprecatedRules":"661"},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"816","usedDeprecatedRules":"661"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"661"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"661"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"825","usedDeprecatedRules":"661"},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"661"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"661"},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"834","usedDeprecatedRules":"661"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"661"},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"840","usedDeprecatedRules":"661"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843","usedDeprecatedRules":"661"},{"filePath":"844","messages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"661"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"857","usedDeprecatedRules":"661"},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"860","usedDeprecatedRules":"661"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863","usedDeprecatedRules":"661"},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":84,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"661"},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":82,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"661"},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":85,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"661"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":91,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"661"},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":99,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"661"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":79,"fixableErrorCount":0,"fixableWarningCount":0,"source":"881","usedDeprecatedRules":"661"},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":85,"fixableErrorCount":0,"fixableWarningCount":0,"source":"884","usedDeprecatedRules":"661"},{"filePath":"885","messages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":79,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"661"},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"661"},{"filePath":"891","messages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893"},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"661"},{"filePath":"901","messages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"661"},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"661"},{"filePath":"907","messages":"908","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"909","usedDeprecatedRules":"661"},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"912","usedDeprecatedRules":"661"},{"filePath":"913","messages":"914","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"915","usedDeprecatedRules":"661"},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"918","usedDeprecatedRules":"661"},{"filePath":"919","messages":"920","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"921","usedDeprecatedRules":"661"},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"924","usedDeprecatedRules":"661"},{"filePath":"925","messages":"926","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"927","usedDeprecatedRules":"661"},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930","usedDeprecatedRules":"661"},{"filePath":"931","messages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"661"},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"661"},{"filePath":"937","messages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"661"},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"942","usedDeprecatedRules":"661"},{"filePath":"943","messages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"945","usedDeprecatedRules":"661"},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"958","messages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"960","messages":"961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964","usedDeprecatedRules":"661"},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"967","usedDeprecatedRules":"661"},{"filePath":"968","messages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"661"},{"filePath":"973","messages":"974","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"975","usedDeprecatedRules":"661"},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978","usedDeprecatedRules":"661"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981","usedDeprecatedRules":"661"},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984","usedDeprecatedRules":"661"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"987","usedDeprecatedRules":"661"},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"990","usedDeprecatedRules":"661"},{"filePath":"991","messages":"992","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"993","usedDeprecatedRules":"661"},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996","usedDeprecatedRules":"661"},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"999","usedDeprecatedRules":"661"},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1002","usedDeprecatedRules":"661"},{"filePath":"1003","messages":"1004","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1005","usedDeprecatedRules":"661"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1008","usedDeprecatedRules":"661"},{"filePath":"1009","messages":"1010","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1011","messages":"1012","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1015","messages":"1016","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"661"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1020","usedDeprecatedRules":"661"},{"filePath":"1021","messages":"1022","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"661"},{"filePath":"1023","messages":"1024","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1025","usedDeprecatedRules":"661"},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"661"},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1031","usedDeprecatedRules":"661"},{"filePath":"1032","messages":"1033","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1034","usedDeprecatedRules":"661"},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"661"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042","usedDeprecatedRules":"661"},{"filePath":"1043","messages":"1044","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1045","messages":"1046","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1057","messages":"1058","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1059","messages":"1060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1061","messages":"1062","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1063","usedDeprecatedRules":"661"},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1070","messages":"1071","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1080","usedDeprecatedRules":"661"},{"filePath":"1081","messages":"1082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1085","messages":"1086","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1087","usedDeprecatedRules":"661"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1102","messages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1108","messages":"1109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1110","messages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1114","usedDeprecatedRules":"661"},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1117","usedDeprecatedRules":"661"},{"filePath":"1118","messages":"1119","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1120","usedDeprecatedRules":"661"},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"661"},{"filePath":"1124","messages":"1125","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1126","usedDeprecatedRules":"661"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1129","usedDeprecatedRules":"661"},{"filePath":"1130","messages":"1131","errorCount":0,"fatalErrorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1132","usedDeprecatedRules":"661"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1135","usedDeprecatedRules":"661"},{"filePath":"1136","messages":"1137","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1138","usedDeprecatedRules":"661"},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1141","usedDeprecatedRules":"661"},{"filePath":"1142","messages":"1143","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1144","usedDeprecatedRules":"661"},{"filePath":"1145","messages":"1146","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1147","usedDeprecatedRules":"661"},{"filePath":"1148","messages":"1149","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1150","usedDeprecatedRules":"661"},{"filePath":"1151","messages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153","usedDeprecatedRules":"661"},{"filePath":"1154","messages":"1155","errorCount":0,"fatalErrorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1156","usedDeprecatedRules":"661"},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159","usedDeprecatedRules":"661"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"661"},{"filePath":"1163","messages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1165","usedDeprecatedRules":"661"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1168","usedDeprecatedRules":"661"},{"filePath":"1169","messages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1171","usedDeprecatedRules":"661"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1174","usedDeprecatedRules":"661"},{"filePath":"1175","messages":"1176","errorCount":0,"fatalErrorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1177","usedDeprecatedRules":"661"},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1180","usedDeprecatedRules":"661"},{"filePath":"1181","messages":"1182","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1183","usedDeprecatedRules":"661"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"661"},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1189","usedDeprecatedRules":"661"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"661"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"661"},{"filePath":"1195","messages":"1196","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1197","usedDeprecatedRules":"661"},{"filePath":"1198","messages":"1199","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159","usedDeprecatedRules":"661"},{"filePath":"1200","messages":"1201","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1202","usedDeprecatedRules":"661"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1205","usedDeprecatedRules":"661"},{"filePath":"1206","messages":"1207","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1208","usedDeprecatedRules":"661"},{"filePath":"1209","messages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1211","usedDeprecatedRules":"661"},{"filePath":"1212","messages":"1213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1236","usedDeprecatedRules":"661"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1245","usedDeprecatedRules":"661"},{"filePath":"1246","messages":"1247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1248","messages":"1249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1250","messages":"1251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1252","usedDeprecatedRules":"661"},{"filePath":"1253","messages":"1254","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1255","usedDeprecatedRules":"661"},{"filePath":"1256","messages":"1257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"661"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"661"},{"filePath":"1264","messages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"661"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":78,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"661"},{"filePath":"1270","messages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1272","usedDeprecatedRules":"661"},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1275","usedDeprecatedRules":"661"},{"filePath":"1276","messages":"1277","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"661"},{"filePath":"1278","messages":"1279","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1280","usedDeprecatedRules":"661"},{"filePath":"1281","messages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1153","usedDeprecatedRules":"661"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1285","usedDeprecatedRules":"661"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"1289"},{"filePath":"1290","messages":"1291","errorCount":0,"fatalErrorCount":0,"warningCount":78,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1292","usedDeprecatedRules":"661"},{"filePath":"1293","messages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1295","usedDeprecatedRules":"661"},{"filePath":"1296","messages":"1297","errorCount":0,"fatalErrorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1298","usedDeprecatedRules":"1289"},{"filePath":"1299","messages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1301","usedDeprecatedRules":"661"},{"filePath":"1302","messages":"1303","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1304","usedDeprecatedRules":"661"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1307","usedDeprecatedRules":"661"},{"filePath":"1308","messages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1310","usedDeprecatedRules":"661"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1313","usedDeprecatedRules":"661"},{"filePath":"1314","messages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1316","messages":"1317","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1318","usedDeprecatedRules":"661"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":92,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1321","usedDeprecatedRules":"661"},{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1324","usedDeprecatedRules":"661"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1327","usedDeprecatedRules":"661"},{"filePath":"1328","messages":"1329","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1330","usedDeprecatedRules":"661"},{"filePath":"1331","messages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1333","usedDeprecatedRules":"661"},{"filePath":"1334","messages":"1335","errorCount":0,"fatalErrorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1017","usedDeprecatedRules":"661"},{"filePath":"1336","messages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1338","usedDeprecatedRules":"661"},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1341","usedDeprecatedRules":"661"},{"filePath":"1342","messages":"1343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1344","messages":"1345","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1346","usedDeprecatedRules":"661"},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1349","usedDeprecatedRules":"661"},{"filePath":"1350","messages":"1351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1352","usedDeprecatedRules":"661"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":80,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1355","usedDeprecatedRules":"661"},{"filePath":"1356","messages":"1357","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1358","usedDeprecatedRules":"661"},{"filePath":"1359","messages":"1360","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"661"},{"filePath":"1361","messages":"1362","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159","usedDeprecatedRules":"661"},{"filePath":"1363","messages":"1364","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"661"},{"filePath":"1365","messages":"1366","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1367","usedDeprecatedRules":"661"},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1370","usedDeprecatedRules":"661"},{"filePath":"1371","messages":"1372","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1373","usedDeprecatedRules":"661"},{"filePath":"1374","messages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1376","usedDeprecatedRules":"661"},{"filePath":"1377","messages":"1378","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1379","usedDeprecatedRules":"661"},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1382","usedDeprecatedRules":"661"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1385","usedDeprecatedRules":"661"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1388","usedDeprecatedRules":"661"},{"filePath":"1389","messages":"1390","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1391","usedDeprecatedRules":"661"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394","usedDeprecatedRules":"661"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397","usedDeprecatedRules":"661"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1400","usedDeprecatedRules":"661"},{"filePath":"1401","messages":"1402","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1403","usedDeprecatedRules":"661"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1406","usedDeprecatedRules":"661"},{"filePath":"1407","messages":"1408","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1409","usedDeprecatedRules":"661"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1412","usedDeprecatedRules":"661"},{"filePath":"1413","messages":"1414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1415","messages":"1416","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1417","usedDeprecatedRules":"661"},{"filePath":"1418","messages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"661"},{"filePath":"1421","messages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":89,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1423","usedDeprecatedRules":"661"},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1426","usedDeprecatedRules":"661"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1429","usedDeprecatedRules":"661"},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1432","usedDeprecatedRules":"661"},{"filePath":"1433","messages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1435","usedDeprecatedRules":"661"},{"filePath":"1436","messages":"1437","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1438","usedDeprecatedRules":"661"},{"filePath":"1439","messages":"1440","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1441","usedDeprecatedRules":"661"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1444","usedDeprecatedRules":"661"},{"filePath":"1445","messages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1447","messages":"1448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1449","messages":"1450","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1451","usedDeprecatedRules":"661"},{"filePath":"1452","messages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1454","usedDeprecatedRules":"661"},{"filePath":"1455","messages":"1456","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1457","usedDeprecatedRules":"661"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":80,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460","usedDeprecatedRules":"661"},{"filePath":"1461","messages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1463","messages":"1464","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1162","usedDeprecatedRules":"661"},{"filePath":"1465","messages":"1466","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1159","usedDeprecatedRules":"661"},{"filePath":"1467","messages":"1468","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"661"},{"filePath":"1469","messages":"1470","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1471","usedDeprecatedRules":"661"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1474","usedDeprecatedRules":"661"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"661"},{"filePath":"1477","messages":"1478","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1479","usedDeprecatedRules":"661"},{"filePath":"1480","messages":"1481","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1482","usedDeprecatedRules":"661"},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1485","usedDeprecatedRules":"661"},{"filePath":"1486","messages":"1487","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1488","usedDeprecatedRules":"661"},{"filePath":"1489","messages":"1490","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1491","usedDeprecatedRules":"661"},{"filePath":"1492","messages":"1493","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1494","usedDeprecatedRules":"661"},{"filePath":"1495","messages":"1496","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1497","usedDeprecatedRules":"661"},{"filePath":"1498","messages":"1499","errorCount":0,"fatalErrorCount":0,"warningCount":91,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1500","usedDeprecatedRules":"661"},{"filePath":"1501","messages":"1502","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1503","usedDeprecatedRules":"661"},{"filePath":"1504","messages":"1505","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"661"},{"filePath":"1507","messages":"1508","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1509","usedDeprecatedRules":"661"},{"filePath":"1510","messages":"1511","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1512","usedDeprecatedRules":"661"},"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\index.tsx",["1513"],"/**\r\n * TIP: Replace this style import with dark styles to enable dark mode\r\n *\r\n * import './_metronic/assets/sass/style.dark.scss'\r\n *\r\n * TIP: Replace this style import with rtl styles to enable rtl mode\r\n *\r\n * import './_metronic/assets/css/style.rtl.css'\r\n **/\r\nimport './_metronic/assets/sass/style.scss'\r\nimport './_metronic/assets/sass/style.react.scss'\r\nimport 'antd/dist/antd.css';\r\n\r\nimport * as _redux from './setup'\r\n\r\nimport {Chart, registerables} from 'chart.js'\r\nimport store, {persistor} from './setup/redux/Store'\r\n\r\n// Apps\r\nimport {App} from './app/App'\r\nimport {MetronicI18nProvider} from './_metronic/i18n/Metronici18n'\r\n// Redux\r\n// https://github.com/rt2zz/redux-persist\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\nimport {Provider} from 'react-redux'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// Axios\r\nimport axios from 'axios'\r\n\r\n/**\r\n * Base URL of the website.\r\n *\r\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\r\n */\r\nconst {PUBLIC_URL} = process.env\r\n/**\r\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\r\n * basic Metronic mocks and returns it.\r\n *\r\n * @see https://github.com/ctimmerm/axios-mock-adapter\r\n */\r\n\r\n/**\r\n * Inject Metronic interceptors for axios.\r\n *\r\n * @see https://github.com/axios/axios#interceptors\r\n */\r\n_redux.setupAxios(store)\r\n\r\nChart.register(...registerables)\r\n\r\nReactDOM.render(\r\n  <MetronicI18nProvider>\r\n    <Provider store={store}>\r\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\r\n      <PersistGate persistor={persistor} loading={<div>Đang tải...</div>}>\r\n        <App basename={PUBLIC_URL} />\r\n      </PersistGate>\r\n    </Provider>\r\n  </MetronicI18nProvider>,\r\n  document.getElementById('root')\r\n)\r\n",["1514","1515"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\redux\\Store.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\App.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\i18n\\Metronici18n.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\redux\\RootReducer.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\i18n\\i18nProvider.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\routing\\Routes.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\redux\\AuthInit.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\setup\\axios\\SetupAxios.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\redux\\AuthRedux.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\routing\\PrivateRoutes.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\MasterInit.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\MasterLayout.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\errors\\ErrorsPage.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\LayoutModels.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\LayoutSetup.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\LayoutProvider.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\PageData.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\utils\\AxiosConfig.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\AccountPage.tsx",["1516","1517","1518","1519","1520","1521","1522"],"import React,{useEffect,useState} from 'react'\r\nimport {UserList} from './UserList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from './redux/AccountRedux'\r\nimport {AccountModel} from 'app/modules/accounts/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from './modals/EditModal'\r\nimport {Input} from \"reactstrap\";\r\nconst AccountPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [vpstype, setvpstype] = useState('')\r\n  const accounts: AccountModel[] = useSelector<RootState>(({accounts}) => accounts.accounts, shallowEqual) as AccountModel[] || []\r\n  const currentAccount: AccountModel = useSelector<RootState>(({accounts}) => accounts.currentAccount, shallowEqual) as AccountModel || undefined\r\n    const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n      if(refresh===true){\r\n          dispatch(actions.requestAccounts())\r\n      }\r\n    setRefresh(false)\r\n  },[refresh]);\r\n\r\n\r\n  return (\r\n      <>\r\n        <div className='row gy-5 gx-xl-12'>\r\n            <div className='col-xl-12' style={{margin:0}}>\r\n                <a style={{float:\"right\"}} href='#' onClick={() => {\r\n                    setRefresh(true)\r\n                }} >\r\n                    <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n                </a>\r\n            </div>\r\n          <div className='col-xl-12' style={{margin:0}}>\r\n            <UserList accounts={vpstype.length==0?accounts:(accounts.filter(vps=>vps.vps.search(vpstype)!=-1))} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n          </div>\r\n          {\r\n              currentAccount&&<EditModal key={currentAccount?.vps} item={currentAccount} />\r\n          }\r\n          \r\n        </div>\r\n      </>\r\n  )\r\n}\r\nexport default AccountPage","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\AccountPage.tsx",["1523","1524","1525","1526","1527","1528"],"import React,{useEffect,useState} from 'react'\r\nimport {UserList} from './UserList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from './redux/AccountRedux'\r\nimport {AccountModel} from 'app/modules/users/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from './modals/EditModal'\r\nimport {Input} from \"reactstrap\";\r\nconst AccountPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [vpstype, setvpstype] = useState('')\r\n  const accounts: AccountModel[] = useSelector<RootState>(({users}) => users.accounts, shallowEqual) as AccountModel[] || []\r\n  const currentAccount: AccountModel = useSelector<RootState>(({users}) => users.currentAccount, shallowEqual) as AccountModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      dispatch(actions.requestAccounts())\r\n    }\r\n    setRefresh(false)\r\n  },[refresh]);\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <UserList accounts={accounts} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n        {\r\n         currentAccount&&<EditModal key={currentAccount?.username} item={currentAccount} />\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default AccountPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\AccountPage.tsx",["1529","1530","1531","1532","1533","1534","1535","1536","1537","1538"],"import React,{useEffect,useState} from 'react'\r\nimport {UserList} from './UserList'\r\nimport {UserListLimit} from './UserListLimit'\r\nimport {ProxySettingList} from './ProxySettingList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from './redux/AccountRedux'\r\nimport {AccountModel,AccountLimitModel,ProxySettingModel} from 'app/modules/setting/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from './modals/EditModal'\r\nimport EditLimitModal  from './modals/EditLimitModal'\r\nimport EditProxyModal  from './modals/EditProxyModal'\r\nimport {Input} from \"reactstrap\";\r\nconst AccountPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [vpstype, setvpstype] = useState('')\r\n  const accounts: AccountModel[] = useSelector<RootState>(({setting}) => setting.accounts, shallowEqual) as AccountModel[] || []\r\n  const currentAccount: AccountModel = useSelector<RootState>(({setting}) => setting.currentAccount, shallowEqual) as AccountModel || undefined\r\n  const accountlimit: AccountLimitModel[] = useSelector<RootState>(({setting}) => setting.accountlimit, shallowEqual) as AccountLimitModel[] || []\r\n  const proxysetting: ProxySettingModel[] = useSelector<RootState>(({setting}) => setting.proxysetting, shallowEqual) as ProxySettingModel[] || []\r\n  const currentAccountLimit: AccountLimitModel = useSelector<RootState>(({setting}) => setting.currentAccountLimit, shallowEqual) as AccountLimitModel || undefined\r\n  const currentProxySetting: ProxySettingModel = useSelector<RootState>(({setting}) => setting.currentProxySetting, shallowEqual) as ProxySettingModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  const [refresh1, setRefresh1] = useState(true)\r\n  const [refresh2, setRefresh2] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      dispatch(actions.requestAccounts())\r\n    }\r\n    if(refresh1===true){\r\n      dispatch(actions.requestAccountLimit())\r\n    }\r\n    if(refresh2===true){\r\n      dispatch(actions.requestProxySetting())\r\n    }\r\n    setRefresh(false)\r\n    setRefresh1(false)\r\n    setRefresh2(false)\r\n  },[refresh,refresh1,refresh2]);\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <UserList accounts={accounts} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n        {\r\n         currentAccount&&<EditModal key={currentAccount?.id} item={currentAccount} />\r\n        }\r\n      </div>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh2(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <ProxySettingList accounts={proxysetting} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n        {\r\n            currentProxySetting&&<EditProxyModal key={currentProxySetting?.id} item={currentProxySetting} />\r\n        }\r\n      </div>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{marginTop:10}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh1(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <UserListLimit accounts={accountlimit} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n        {\r\n            currentAccountLimit&&<EditLimitModal key={currentAccountLimit?.id} item={currentAccountLimit} />\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default AccountPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\AccountPage.tsx",["1539","1540","1541","1542","1543","1544","1545"],"import React,{useEffect,useState} from 'react'\r\nimport {UserList} from './UserList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from './redux/AccountRedux'\r\nimport {AccountModel} from 'app/modules/services/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from './modals/EditModal'\r\nimport {Input} from \"reactstrap\";\r\nconst AccountPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [option, setOption] = useState(\"view\")\r\n\r\n  const accounts: AccountModel[] = useSelector<RootState>(({services}) => services.accounts, shallowEqual) as AccountModel[] || []\r\n  const currentAccount: AccountModel = useSelector<RootState>(({services}) => services.currentAccount, shallowEqual) as AccountModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh==true){\r\n      dispatch(actions.requestAccounts())\r\n    }\r\n    setRefresh(false)\r\n  },[refresh]);\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <UserList accounts={accounts} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n        {\r\n         currentAccount&&<EditModal key={currentAccount?.service} item={currentAccount} />\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default AccountPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\VpsThreadList.tsx",["1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport {ComputerModel} from 'app/modules/history/models/Account'\r\nimport ComputerItem from './components/ComputerItem'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { actions } from './redux/AccountRedux'\r\nimport { RootState } from 'setup'\r\nimport {Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport ChannelStaticItem from \"./components/ChannelStaticItem\";\r\ntype Props = {\r\n  className: string,\r\n}\r\n\r\nconst ComputerList: React.FC<Props> = ({ className }) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const API_URL = 'http://125.212.231.69/'\r\n  const [ipv4, setipv4] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [addtrue, setAddTrue] = useState(0)\r\n  const [status, setStatus] = useState('')\r\n  const proxies:ComputerModel[] = useSelector<RootState>(({ histories }) => histories.computers, shallowEqual) as ComputerModel[] || []\r\n  let sum_total=0;\r\n  let sum_die=0;\r\n\r\n  for (var i = 0; i < proxies.length; i++) {\r\n      if(proxies[i].time>=5){\r\n        sum_die=sum_die+1\r\n      }\r\n  }\r\n  useEffect(() => {\r\n    dispatch(actions.requestComputers())\r\n    setipv4('')\r\n    setKeyTrue(0)\r\n  }, [status])\r\n  async function delipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/delipv4?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/addipv4?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addcron() {\r\n    let  requestUrl = API_URL+'proxy/addcron'\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {num} = responseJson;\r\n    sum_total=num\r\n    return num\r\n  }\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" đơn!\") == true) {\r\n      for(var i=0;i<arr.length;i++){\r\n        delipv4(arr[i])\r\n      }\r\n      setStatus('true')\r\n    }\r\n  }\r\n  const clickAddHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    for(var i=0;i<arr.length;i++){\r\n      addipv4(arr[i])\r\n    }\r\n    setStatus('true')\r\n  }\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách VPS</span>\r\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {proxies.length} | Die: {sum_die} | Live: {proxies.length-sum_die})</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {keytrue==1&&<div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\r\n            <div >\r\n                <Input style={{height:500,width:'100%',float:\"left\"}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 ipv4 một dòng!\"}\r\n                       value={ipv4}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setipv4(e.target.value)}\r\n                />\r\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                        onClick={() => {\r\n                          clickDeleteHandler()\r\n                        }}\r\n                    /*\r\n                    if(key.trim().length==0){\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.requestOrders(''))\r\n                      }else{\r\n                        dispatch(actions.requestOrders(user))\r\n                      }\r\n                    }else{\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.showordersfilter(key,''))\r\n                      }else{\r\n                        dispatch(actions.showordersfilter(key,user))\r\n                      }\r\n                    }\r\n                    //setKey(\"\")\r\n                  }}\r\n\r\n                     */\r\n                        className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>}\r\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                                   onClick={() => {\r\n                                     clickAddHandler()\r\n                                   }}\r\n                  /*\r\n                  if(key.trim().length==0){\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.requestOrders(''))\r\n                    }else{\r\n                      dispatch(actions.requestOrders(user))\r\n                    }\r\n                  }else{\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.showordersfilter(key,''))\r\n                    }else{\r\n                      dispatch(actions.showordersfilter(key,user))\r\n                    }\r\n                  }\r\n                  //setKey(\"\")\r\n                }}\r\n\r\n                   */\r\n                                   className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>}\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      {keytrue==0&&<div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>VPS Name</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {\r\n                proxies&&proxies?.map((item: ComputerModel,index:number) => {\r\n                  return <ChannelStaticItem key={\"ipv4-\"+index} item={item} index={index}/>\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {/* end::Table */}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>}\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComputerList\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\OrdersPage.tsx",["1558","1559","1560","1561","1562","1563"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\OrdersPage.tsx",["1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const user: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n    const dispatch = useDispatch()\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderdone }) => orderdone.orders, shallowEqual) as OrderModel[] || []\r\n    const currentOrder: OrderModel = useSelector<RootState>(({ orderdone }) => orderdone.currentOrder, shallowEqual) as OrderModel || undefined\r\n    const [refresh, setRefresh] = useState(true)\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [countPrice, setCountPrice] = useState(0);\r\n    const [toggle, setToggle] = useState(false)\r\n    const [toggle1, setToggle1] = useState(false)\r\n    let [fluctuationsNow, sefluctuationsNow] = useState(\"\")\r\n    const handleWindowResize = () => {\r\n        setIsMobile(window.innerWidth <= 800);\r\n    };\r\n    async function getnow(){\r\n        const requestUrl = API_URL+'auth/fluctuationsMobile';\r\n        const response= await fetch(requestUrl,{\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson= await  response.json();\r\n        const {noti}=responseJson;\r\n\r\n        if(noti!=fluctuationsNow){\r\n            sefluctuationsNow(noti)\r\n        }\r\n    }\r\n    async function get5M(){\r\n        const requestUrl = API_URL+'auth/fluctuations5M';\r\n        const response= await fetch(requestUrl,{\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson= await  response.json();\r\n        const {price}=responseJson;\r\n        setCountPrice(-price)\r\n    }\r\n    useEffect(() => {\r\n        if(role==='ROLE_ADMIN'){\r\n            setTimeout(() => setToggle((prevToggle) => !prevToggle), 10000);\r\n            handleWindowResize();\r\n            // Thêm sự kiện lắng nghe để kiểm tra kích thước cửa sổ khi cửa sổ thay đổi\r\n            window.addEventListener('resize', handleWindowResize);\r\n            if(window.innerWidth < 800){\r\n                getnow()\r\n            }\r\n        }\r\n\r\n    }, [toggle]);\r\n  useEffect(() => {\r\n   if (refresh===true) {\r\n     if (role.indexOf(\"ROLE_ADMIN\") >= 0) {\r\n       dispatch(actions.requestOrders(''))\r\n     } else {\r\n       dispatch(actions.requestOrders(user))\r\n     }\r\n     handleWindowResize();\r\n     window.addEventListener('resize', handleWindowResize);\r\n   }\r\n   setRefresh(false)\r\n  }, [refresh])\r\n    useEffect(() => {\r\n        if(role==='ROLE_ADMIN'){\r\n            setTimeout(() => setToggle1((prevToggle) => !prevToggle), 60000);\r\n            handleWindowResize();\r\n            // Thêm sự kiện lắng nghe để kiểm tra kích thước cửa sổ khi cửa sổ thay đổi\r\n            window.addEventListener('resize', handleWindowResize);\r\n            if(window.innerWidth < 800){\r\n                get5M()\r\n            }\r\n        }\r\n\r\n    }, [toggle1]);\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n          <div className='col-xl-12' style={{margin:0,position: \"relative\"}}>\r\n              {isMobile==true&&<span style={{position: \"absolute\",bottom:0,textAlign:\"center\",fontWeight:\"bold\",fontFamily:\"monospace\",marginBottom:7}}>{\"🕐 𝐋𝐀𝐒𝐓 𝟓𝐌\"} <span className='badge badge-success 1' style={{padding:1,fontSize:12,fontWeight:\"bold\",color:\"#ffffff\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>+{countPrice.toFixed(3)+ \"$\"}</span> {fluctuationsNow}</span>}\r\n              <a style={{float:\"right\"}} href='#' onClick={() => {\r\n              setRefresh(true)\r\n            }} >\r\n              <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n            </a>\r\n          </div>\r\n          <div className='col-xl-12' style={{margin:0}}>\r\n            <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n          </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\OrdersPage.tsx",["1576","1577","1578","1579","1580","1581"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrdersPage.tsx",["1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596"],"import React, { useEffect, useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { OrderList } from './OrderList'\r\nimport { OrderListCmt } from './OrderListCmt'\r\nimport { OrderListFollowerTikTok } from './OrderListFollowerTikTok'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel,OrderModelCmt ,OrderModelFollower} from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport EditModal from './modals/EditModal';\r\nimport EditModalCmt from './modals/EditModalCmt';\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keycheck, setKeyCheck] = useState(0)\r\n  const [option, setOption] = useState(\"view\")\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.orders, shallowEqual) as OrderModel[] || []\r\n  const orderscmt: OrderModelCmt[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.ordersCmt, shallowEqual) as OrderModelCmt[] || []\r\n  const ordersfollowertiktok: OrderModelFollower[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.ordersFollowerTiktok, shallowEqual) as OrderModelFollower[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const currentOrderCmt: OrderModelCmt = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.currentOrderCmt, shallowEqual) as OrderModelCmt || undefined\r\n  const currentOrderFollowerTikTok: OrderModelFollower = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.currentOrderFollowerTiktok, shallowEqual) as OrderModelFollower || undefined\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  useEffect(() => {\r\n    if(Array.isArray(orders)){\r\n      orders.splice(0,orders.length);\r\n    }\r\n    if(Array.isArray(orderscmt)){\r\n      orderscmt.splice(0,orderscmt.length);\r\n    }\r\n    if(Array.isArray(ordersfollowertiktok)){\r\n      ordersfollowertiktok.splice(0,orderscmt.length);\r\n    }\r\n    if(key.length!=0&& keycheck==1){\r\n      if(option.indexOf(\"view\")>=0){\r\n        dispatch(actions.requestOrders(key.trim()))\r\n      }else if(option.indexOf(\"cmt\")>=0){\r\n        dispatch(actions.requestOrderCmt(key.trim()))\r\n      }else if(option.indexOf(\"follower\")>=0){\r\n        dispatch(actions.requestOrderFollowerTiktok(key.trim()))\r\n      }else if(option.indexOf(\"traffic\")>=0){\r\n        dispatch(actions.requestOrderCmt(key.trim()))\r\n      }\r\n    }\r\n    setKeyTrue(0)\r\n    setKeyCheck(0)\r\n  }, [keytrue==1,option])\r\n\r\n  useEffect(() => {\r\n    setKeyCheck(1)\r\n  }, [key])\r\n  useEffect(() => {\r\n    setKey(\"\")\r\n  }, [option])\r\n  const YoutubeEmbed = (embedId:string) => (\r\n      <div className=\"video-responsive\">\r\n        <iframe\r\n            width=\"853\"\r\n            height=\"480\"\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n        />\r\n      </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div>\r\n          <Input style={{marginRight:10,width:\"48%\",maxWidth:500,minWidth:60,height:40,float:\"left\"}}\r\n                 id=\"note\"\r\n                 name=\"note\"\r\n                 value={key}\r\n                 placeholder=\"Nhập phân cách nhau dấu phẩy\"\r\n                 onChange={(e) => setKey(e.target.value)}\r\n                 type=\"text\"\r\n          />\r\n          <button style={{color:\"white\",backgroundColor:\"#7c9e98\",height:40,float:\"left\"}}\r\n                  onClick={() => {setKeyTrue(1)\r\n                  }}\r\n                  className='btn btn-sm'\r\n          >\r\n            Fetching\r\n          </button>\r\n          {<Input style={{marginLeft:10,width:\"auto\",maxWidth:120,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"left\"}}\r\n              //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                       onChange={(e) => {\r\n                                         setOption(e.target.value)\r\n                                       }}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       type=\"select\"\r\n                                       value={option}\r\n          >\r\n            <option key={\"view\"} value={\"view\"}>\r\n              VIEW</option>)\r\n            <option key={\"cmt\"} value={\"cmt\"}>\r\n              CMT</option>\r\n            <option key={\"follower\"} value={\"follower\"}>\r\n              FOLLOWER</option>)\r\n            <option key={\"traffic\"} value={\"traffic\"}>\r\n              TRAFFIC</option>)\r\n\r\n          </Input>}\r\n        </div>\r\n\r\n        <div className='col-xl-12'>\r\n          {option.indexOf(\"view\")>=0&&<OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />}\r\n          {option.indexOf(\"cmt\")>=0&&<OrderListCmt done={1} orders={orderscmt} className='card-xxl-stretch mb-5 mb-xl-12' />}\r\n          {option.indexOf(\"follower\")>=0&&<OrderListFollowerTikTok done={1} orders={ordersfollowertiktok} className='card-xxl-stretch mb-5 mb-xl-12' />}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\OrdersPage.tsx",["1597","1598","1599","1600","1601","1602"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ ordercomment }) => ordercomment.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ ordercomment }) => ordercomment.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12'  style={{margin:0}}>\r\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\ComputerList.tsx",["1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport {ProxyModel} from 'app/modules/history/models/Account'\r\nimport ComputerItem from './components/ComputerItem'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { actions } from './redux/AccountRedux'\r\nimport { RootState } from 'setup'\r\nimport {Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\ntype Props = {\r\n  className: string,\r\n}\r\n\r\nconst ComputerList: React.FC<Props> = ({ className }) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [ipv4, setipv4] = useState(\"\")\r\n  const [option_setting, setoption_setting] = useState(\"pending\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [addtrue, setAddTrue] = useState(0)\r\n  const [status, setStatus] = useState('')\r\n  const proxies:ProxyModel[] = useSelector<RootState>(({ histories }) => histories.proxies, shallowEqual) as ProxyModel[] || []\r\n  let sum_total=0;\r\n  let sum_die=0;\r\n\r\n  for (var i = 0; i < proxies.length; i++) {\r\n      if(proxies[i].state==0){\r\n        sum_die=sum_die+1\r\n      }\r\n  }\r\n  useEffect(() => {\r\n    dispatch(actions.requestProxies())\r\n    setipv4('')\r\n    setKeyTrue(0)\r\n  }, [status])\r\n  async function delipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/delipv4?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addipv4(ipv4:string,option:string) {\r\n    let  requestUrl = API_URL+'proxy/addipv4?ipv4='+ipv4+\"&option_setting=\"+option;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addcron() {\r\n    let  requestUrl = API_URL+'proxy/addcron'\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {num} = responseJson;\r\n    sum_total=num\r\n    return num\r\n  }\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" IP!\") == true) {\r\n      for(var i=0;i<arr.length;i++){\r\n        delipv4(arr[i])\r\n      }\r\n      setStatus('true')\r\n    }\r\n  }\r\n  const clickAddHandler = () => {\r\n    if(option_setting==\"pending\"){\r\n      alert(\"Vui lòng chọn option setting\")\r\n      return\r\n    }\r\n    const arr:string[]=ipv4.split('\\n');\r\n    for(var i=0;i<arr.length;i++){\r\n      addipv4(arr[i],option_setting)\r\n    }\r\n    setStatus('true')\r\n  }\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách Proxy</span>\r\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {proxies.length} | Die: {sum_die} | Live: {proxies.length-sum_die})</span>\r\n            </div>\r\n            {keytrue==0&&<div className=\"col-lg-6 col-sm-12 text-right\">\r\n              <button\r\n                  onClick={() => {\r\n                    setKeyTrue(1)\r\n                    setAddTrue(1)\r\n                  }}\r\n                  className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>\r\n                <button style={{margin:5}}\r\n                    onClick={() => {\r\n                      setKeyTrue(1)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>\r\n              <button\r\n                  onClick={() => {\r\n                    addcron()\r\n                    alert('Số Cron:'+sum_total)\r\n                  }}\r\n                  className='btn btn-light-facebook'\r\n              >\r\n                Add Cron\r\n              </button>\r\n            </div>}\r\n\r\n          </div>\r\n        </div>\r\n        {keytrue==1&&<div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\r\n            <div >\r\n                <Input style={{height:500,width:'100%',float:\"left\"}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 ipv4 một dòng!\"}\r\n                       value={ipv4}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setipv4(e.target.value)}\r\n                />\r\n              <Input\r\n                  onChange={(e) => setoption_setting(e.target.value)}\r\n                  className=\"form-control form-control-solid\"\r\n                  type=\"select\"\r\n                  style={{fontWeight:'bold',backgroundColor:\"black\",color:\"white\"}}\r\n                  value={option_setting}\r\n              >\r\n                <option key={0} value={\"pending\"}>\r\n                  {\"Chọn Option Setting\"}\r\n                </option>\r\n                <option key={1} value={\"view\"}>\r\n                  {\"PROXY VIEW\"}\r\n                </option>\r\n                <option key={2} value={\"sub\"}>\r\n                  {\"PROXY SUB\"}\r\n                </option>\r\n                <option key={3} value={\"tiktok\"}>\r\n                  {\"PROXY TIKTOK\"}\r\n                </option>\r\n                <option key={4} value={\"traffic\"}>\r\n                  {\"PROXY TRAFFIC\"}\r\n                </option>\r\n                <option key={5} value={\"content\"}>\r\n                  {\"PROXY CONTENT\"}\r\n                </option>\r\n                <option key={6} value={\"domain\"}>\r\n                  {\"PROXY DOMAIN\"}\r\n                </option>\r\n              </Input>\r\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                        onClick={() => {\r\n                          clickDeleteHandler()\r\n                        }}\r\n                    /*\r\n                    if(key.trim().length==0){\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.requestOrders(''))\r\n                      }else{\r\n                        dispatch(actions.requestOrders(user))\r\n                      }\r\n                    }else{\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.showordersfilter(key,''))\r\n                      }else{\r\n                        dispatch(actions.showordersfilter(key,user))\r\n                      }\r\n                    }\r\n                    //setKey(\"\")\r\n                  }}\r\n\r\n                     */\r\n                        className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>}\r\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                                   onClick={() => {\r\n                                     clickAddHandler()\r\n                                   }}\r\n                  /*\r\n                  if(key.trim().length==0){\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.requestOrders(''))\r\n                    }else{\r\n                      dispatch(actions.requestOrders(user))\r\n                    }\r\n                  }else{\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.showordersfilter(key,''))\r\n                    }else{\r\n                      dispatch(actions.showordersfilter(key,user))\r\n                    }\r\n                  }\r\n                  //setKey(\"\")\r\n                }}\r\n\r\n                   */\r\n                                   className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>}\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      {keytrue==0&&<div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Ipv4</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Option Setting</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>State</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {\r\n                proxies&&proxies?.map((item: ProxyModel,index:number) => {\r\n                  return <ComputerItem key={\"ipv4-\"+index} item={item} index={index}/>\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {/* end::Table */}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>}\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComputerList\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\OrdersPage.tsx",["1614","1615","1616","1617","1618","1619"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ ordercommenthistory }) => ordercommenthistory.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ ordercommenthistory }) => ordercommenthistory.currentOrder, shallowEqual) as OrderModel || undefined\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.orderid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\OrdersPage.tsx",["1620","1621","1622","1623","1624","1625"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ balance }) => balance.orders, shallowEqual) as OrderModel[] || []\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n   setRefresh(false)\r\n  }, [refresh])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\OrdersPage.tsx",["1626","1627","1628","1629","1630","1631"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orderhistory }) => orderhistory.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderhistory }) => orderhistory.currentOrder, shallowEqual) as OrderModel || undefined\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\ScrollTop.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\Footer.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\Content.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx",["1632"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport clsx from 'clsx'\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\r\nimport {useLayout} from '../../core'\r\nimport {Header} from './Header'\r\nimport {DefaultTitle} from './page-title/DefaultTitle'\r\nimport {Topbar} from './Topbar'\r\n\r\nexport function HeaderWrapper() {\r\n  const {config, classes, attributes} = useLayout()\r\n  const {header, aside} = config\r\n\r\n  return (\r\n    <div\r\n      id='kt_header'\r\n      className={clsx('header', classes.header.join(' '), 'align-items-stretch')}\r\n      {...attributes.headerMenu}\r\n    >\r\n      <div style={{backgroundColor:'#e1f8eb'}}\r\n        className={clsx(\r\n          classes.headerContainer.join(' '),\r\n          'd-flex align-items-stretch justify-content-between'\r\n        )}\r\n      >\r\n        {/* begin::Aside mobile toggle */}\r\n        {aside.display && (\r\n          <div className='d-flex align-items-center d-lg-none ms-n3 me-1' title='Show aside menu'>\r\n            <div\r\n              className='btn btn-icon btn-active-light-primary w-30px h-30px w-md-80px h-md-80px'\r\n              id='kt_aside_mobile_toggle'\r\n            >\r\n              <KTSVG path='/media/icons/duotune/abstract/abs015.svg' className='svg-icon-2x mt-1' />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* end::Aside mobile toggle */}\r\n        {/* begin::Logo */}\r\n        {!aside.display && (\r\n          <div className='d-flex align-items-center flex-grow-1 flex-lg-grow-0' >\r\n            <Link to='/dashboard' className='d-lg-none'>\r\n              <img alt='Logo' src={toAbsoluteUrl('/media/logos/logo-2.svg')} className='h-30px' />\r\n            </Link>\r\n          </div>\r\n        )}\r\n        {/* end::Logo */}\r\n\r\n        {/* begin::Wrapper */}\r\n        <div style={{backgroundColor:'#e1f8eb'}}  className='d-flex align-items-stretch justify-content-between flex-lg-grow-1' >\r\n          {/* begin::Navbar */}\r\n          {header.left === 'menu' && (\r\n            <div className='d-flex align-items-stretch' id='kt_header_nav'>\r\n         \r\n            </div>\r\n          )}\r\n\r\n          {header.left === 'page-title' && (\r\n            <div className='d-flex align-items-center' id='kt_header_nav'>\r\n              <DefaultTitle />\r\n            </div>\r\n          )}\r\n          <div className='d-flex align-items-stretch flex-shrink-0'>\r\n            <Topbar />\r\n          </div>\r\n\r\n        </div>\r\n        {/* end::Wrapper */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx",["1633"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { StaticList } from 'app/modules/history/StaticList'\r\nimport React, { FC } from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { PageTitle } from '../../../_metronic/layout/core'\r\n\r\nconst DashboardPage: FC = () => (\r\n  <>\r\n    {/* begin::Row */}\r\n    <div className='row gy-5 gx-xl-12'>\r\n      <div className='col-xl-12'>\r\n\r\n      </div>\r\n    </div>\r\n    {/* end::Row */}\r\n    <div className='row gy-5 gx-xl-12'>\r\n      <div className='col-xl-12'>\r\n        <StaticList className='card-xxl-stretch mb-5 mb-xl-12' />\r\n      </div>\r\n    </div>\r\n\r\n  </>\r\n)\r\n\r\nconst DashboardWrapper: FC = () => {\r\n  const intl = useIntl()\r\n  return (\r\n    <>\r\n      <PageTitle breadcrumbs={[]}>{'Thống kê'}</PageTitle>\r\n      {\r\n        <DashboardPage />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport { DashboardWrapper }\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\errors\\components\\Error500.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\errors\\components\\Error404.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\AuthPage.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\Logout.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts",["1634","1635","1636","1637"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { AccountModel,AccountForm } from '../models/Account'\r\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\r\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\r\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestAccounts: '[Accounts] Requested',\r\n  AccountsLoadedSuccess: '[Accounts] Loaded succcess',\r\n  AccountsLoadedFail: '[Accounts] load fail',\r\n  ShowCurrentAccount: '[Accounts] Show Account',\r\n  RequestUpdate: '[accounts] Requested Update',\r\n  UpdateSuccess: '[accounts] Update Success',\r\n  UpdateFail: '[Accounts] Update Fail',\r\n  ClearSelected:'[Accounts] Clear selected account',\r\n  DeleteVpsRequest: '[Accounts] Delete Account Request',\r\n  DeleteVpsSuccess: '[Accounts] Delete Account Success',\r\n  DeleteMultiVpsRequest: '[Accounts] Delete Account Request',\r\n  DeleteMultiVpsSuccess: '[Accounts] Delete Account Success',\r\n  CheckedChange: '[accounts] Checked Change',\r\n  CheckedAllChange: '[accounts] Checked All Change',\r\n  UpdateMultiOrderRequest: '[accounts] Update Multi Account Request',\r\n  UpdateRestartMultiOrderRequest: '[accounts] Update Restart Multi Account Request',\r\n  UpdateMultiSuccess: '[accounts] Update Multi Success',\r\n}\r\n\r\nconst initialAccountState: IAccountState = {\r\n  accounts: [],\r\n  loading: false,\r\n  adding:false,\r\n  currentAccount:undefined\r\n}\r\n\r\nexport interface IAccountState {\r\n  accounts: AccountModel[]\r\n  loading: boolean\r\n  adding:boolean\r\n  currentAccount?:AccountModel\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-accounts', whitelist: [] },\r\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestAccounts: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: action.payload?.accounts || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n\r\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\r\n          if(item.vps===action.payload?.account?.vps){\r\n            return action.payload?.account\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remapAccounts,\r\n          loading: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      case actionTypes.DeleteVpsSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: state.accounts.filter((item: AccountModel) => {\r\n            if (action.payload?.vps.indexOf(item.vps)>=0)  {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccount: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            if(item.vps===action.payload?.data?.vps){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateRestartMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.accounts.map((item: AccountForm) => {\r\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\r\n            if(_item.vps===item.vps){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\r\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\r\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\r\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\r\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\r\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\r\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\r\n  checkedChange: (data:{vps:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\r\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\r\n    const {data: accounts} = yield getListAccount()\r\n    yield put(actions.fulfillAccounts(accounts.accounts))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    //console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: account} = yield updateAccount(param.payload.account)\r\n    //console.log(\"------update account res-----\",account.account)\r\n    yield put(actions.updateSuccess(account.account))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.vps\r\n      const { data: result } = yield deleteVps(payload)\r\n      if (result&&result.vps!==null) {\r\n        yield put(actions.deleteVpsSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateAccount(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateResetVPS(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\redux\\OrdersRedux.ts",["1638","1639","1640","1641","1642","1643","1644","1645","1646"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[OrderCommenthistory] Filter',\r\n  RequestOrders: '[OrderCommenthistory] Requested',\r\n  OrdersLoadedSuccess: '[OrderCommenthistory] Loaded succcess',\r\n  OrdersLoadedFail: '[OrderCommenthistory] load fail',\r\n  AddOrderRequest: '[OrderCommenthistory] Add Order Request',\r\n  AddOrderManualRequest: '[OrderCommenthistory] Add Order Manual Request',\r\n  AddOrderSuccess: '[OrderCommenthistory] Add Order Success',\r\n  AddOrdersSuccess: '[OrderCommenthistory] Add Orders Success',\r\n  AddOrderFail: '[OrderCommenthistory] Add Order Fail',\r\n  ShowcurrentOrder: '[OrderCommenthistory] Show Order',\r\n  RequestUpdate: '[OrderCommenthistory] Requested Update',\r\n  UpdateMultiOrderRequest: '[OrderCommenthistory] Update Multi Order Request',\r\n  UpdateSuccess: '[OrderCommenthistory] Update Success',\r\n  UpdateMultiSuccess: '[OrderCommenthistory] Update Multi Success',\r\n  UpdateFail: '[OrderCommenthistory] Update Fail',\r\n  ClearSelected: '[OrderCommenthistory] Clear selected account',\r\n  GroupLoadedRequest: '[OrderCommenthistory] Group Loaded Request',\r\n  GroupLoadedSuccess: '[OrderCommenthistory] Group Loaded Success',\r\n  GroupLoadedFail: '[OrderCommenthistory] Group Loaded Fail',\r\n  GroupAddRequest: '[OrderCommenthistory] GroupAddRequest',\r\n  GroupAddSuccess: '[OrderCommenthistory] Group Add Success',\r\n  GroupAddFail: '[OrderCommenthistory] Group Add Fail',\r\n  GroupDeleteRequest: '[OrderCommenthistory] Group Delete Request',\r\n  GroupDeleteSuccess: '[OrderCommenthistory] Group Delete Success',\r\n  SelectGroup: '[OrderCommenthistory] Select Group',\r\n  DeleteOrderRequest: '[OrderCommenthistory] Delete Order Request',\r\n  DeleteOrderSuccess: '[OrderCommenthistory] Delete Order Success',\r\n  CheckedChange: '[OrderCommenthistory] Checked Change',\r\n  CheckedAllChange: '[OrderCommenthistory] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (item.videoid === action.payload?.videoid) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videocomment?.videoid) {\r\n            return action.payload?.videocomment\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videocomment.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.orderid==action.payload?.data?.orderid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (orderid: string) => ({ type: actionTypes.RequestUpdate, payload: { orderid } }),\r\n  updateSuccess: (videocomment: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videocomment } }),\r\n  updateMultiSuccess: (videocomment: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videocomment } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\r\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\r\n  checkedChange: (data:{orderid:number,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videocomment))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videocomment))\r\n  })\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.orderid)\r\n    if (result && result.videocomment) {\r\n      yield put(actions.updateMultiSuccess(result.videocomment))\r\n    } else {\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videocomment)) {\r\n            yield put(actions.addOrderSuccess(result.videocomment))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videocomment) {\r\n          yield put(actions.updateMultiSuccess(result.videocomment))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.groupName\r\n      const { data: result } = yield addGroup(payload)\r\n      if (result && result.group) {\r\n        yield put(actions.addGroupSuccess(result.group))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.videoid\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.videocomment!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\redux\\OrdersRedux.ts",["1647","1648","1649","1650","1651","1652"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n  updateThread,\r\n  addOrder,\r\n  addOrderManual,\r\n  deleteChannel,\r\n  addOrderMulti,\r\n  getOrderPercentFilter, updateOrderCheck\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[OrderCheckCancel] Filter',\r\n  ShowOrdersPercentFilter:'[OrderCheckCancel] Percent Filter',\r\n  RequestOrders: '[OrderCheckCancel] Requested',\r\n  OrdersLoadedSuccess: '[OrderCheckCancel] Loaded succcess',\r\n  OrdersLoadedFail: '[OrderCheckCancel] load fail',\r\n  AddOrderRequest: '[OrderCheckCancel] Add Order Request',\r\n  AddOrderManualRequest: '[OrderCheckCancel] Add Order Manual Request',\r\n  AddOrderSuccess: '[OrderCheckCancel] Add Order Success',\r\n  AddOrdersSuccess: '[OrderCheckCancel] Add Orders Success',\r\n  AddOrderFail: '[OrderCheckCancel] Add Order Fail',\r\n  ShowcurrentOrder: '[OrderCheckCancel] Show Order',\r\n  RequestUpdate: '[OrderCheckCancel] Requested Update',\r\n  RequestUpdateThread: '[OrderCheckCancel] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[OrderCheckCancel] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[OrderCheckCancel] Update Multi Thread Request',\r\n  UpdateSuccess: '[OrderCheckCancel] Update Success',\r\n  UpdateMultiSuccess: '[OrderCheckCancel] Update Multi Success',\r\n  UpdateFail: '[OrderCheckCancel] Update Fail',\r\n  ClearSelected: '[OrderCheckCancel] Clear selected account',\r\n  GroupLoadedRequest: '[OrderCheckCancel] Group Loaded Request',\r\n  GroupLoadedSuccess: '[OrderCheckCancel] Group Loaded Success',\r\n  GroupLoadedFail: '[OrderCheckCancel] Group Loaded Fail',\r\n  GroupAddRequest: '[OrderCheckCancel] GroupAddRequest',\r\n  GroupAddSuccess: '[OrderCheckCancel] Group Add Success',\r\n  GroupAddFail: '[OrderCheckCancel] Group Add Fail',\r\n  GroupDeleteRequest: '[OrderCheckCancel] Group Delete Request',\r\n  GroupDeleteSuccess: '[OrderCheckCancel] Group Delete Success',\r\n  SelectGroup: '[OrderCheckCancel] Select Group',\r\n  DeleteOrderRequest: '[OrderCheckCancel] Delete Order Request',\r\n  DeleteOrderSuccess: '[OrderCheckCancel] Delete Order Success',\r\n  UpdateOrderCheckRequest: '[OrderCheckCancel] Update OrderCheck Request',\r\n  UpdateOrderCheckSuccess: '[OrderCheckCancel] Update OrderCheck Success',\r\n  CheckedChange: '[OrderCheckCancel] Checked Change',\r\n  CheckedAllChange: '[OrderCheckCancel] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateOrderCheckSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videoview?.videoid) {\r\n            return action.payload?.videoview\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videoview } }),\r\n  requestUpdateThread: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videoview } }),\r\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\r\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\r\n  updateOrderCheckRequest: (videoid: string) => ({ type: actionTypes.UpdateOrderCheckRequest, payload: { videoid } }),\r\n  updateOrderCheckSuccess: (videoid: string) => ({ type: actionTypes.UpdateOrderCheckSuccess, payload: { videoid} }),\r\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videoview)) {\r\n            yield put(actions.addOrderSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videoview) {\r\n          yield put(actions.updateMultiSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateThread(payload)\r\n      if (result && result.videoview) {\r\n        yield put(actions.updateMultiSuccess(result.videoview))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateOrderCheckRequest, function* UpdateOrderCheckRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield updateOrderCheck(payload.videoid)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.updateOrderCheckSuccess(payload.videoid))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts",["1653","1654","1655","1656","1657","1658","1659"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport { getListOrder, updateOrder, addOrder, addOrderManual,  updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestOrders: '[Orders] Requested',\r\n  OrdersLoadedSuccess: '[Orders] Loaded succcess',\r\n  OrdersLoadedFail: '[Orders] load fail',\r\n  AddOrderRequest: '[Orders] Add Order Request',\r\n  AddOrderManualRequest: '[Orders] Add Order Manual Request',\r\n  AddOrderSuccess: '[Orders] Add Order Success',\r\n  AddOrdersSuccess: '[Orders] Add Orders Success',\r\n  AddOrderFail: '[Orders] Add Order Fail',\r\n  ShowcurrentOrder: '[orders] Show Account',\r\n  RequestUpdate: '[orders] Requested Update',\r\n  UpdateMultiOrderRequest: '[orders] Update Multi Order Request',\r\n  UpdateSuccess: '[orders] Update Success',\r\n  UpdateMultiSuccess: '[orders] Update Multi Success',\r\n  UpdateFail: '[orders] Update Fail',\r\n  ClearSelected: '[orders] Clear selected account',\r\n  GroupLoadedRequest: '[orders] Group Loaded Request',\r\n  GroupLoadedSuccess: '[orders] Group Loaded Success',\r\n  GroupLoadedFail: '[orders] Group Loaded Fail',\r\n  GroupAddRequest: '[orders] GroupAddRequest',\r\n  GroupAddSuccess: '[orders] Group Add Success',\r\n  GroupAddFail: '[orders] Group Add Fail',\r\n  GroupDeleteRequest: '[orders] Group Delete Request',\r\n  GroupDeleteSuccess: '[orders] Group Delete Success',\r\n  SelectGroup: '[orders] Select Group',\r\n  DeleteOrderRequest: '[orders] Delete Order Request',\r\n  DeleteOrderSuccess: '[orders] Delete Order Success',\r\n  CheckedChange: '[orders] Checked Change',\r\n  CheckedAllChange: '[orders] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (item.channel_id === action.payload?.channel_id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderUpdateForm) => {\r\n          if (item.channel_id === action.payload?.order?.channel_id) {\r\n            return action.payload?.order\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.channels.find((_item:OrderModel)=>{\r\n            if(_item.channel_id===item.channel_id){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.channel_id===action.payload?.data?.channel_id){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: () => ({ type: actionTypes.RequestOrders }),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (order: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { order } }),\r\n  updateSuccess: (order: OrderUpdateForm) => ({ type: actionTypes.UpdateSuccess, payload: { order } }),\r\n  updateMultiSuccess: (channels: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { channels } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (channel_id: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { channel_id } }),\r\n  deleteOrderSuccess: (channel_id: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { channel_id } }),\r\n  checkedChange: (data:{channel_id:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const { data: orders } = yield getListOrder()\r\n    yield put(actions.fulfillorders(orders.channels))\r\n  })\r\n\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.order)\r\n    if (result && result.channel) {\r\n      yield put(actions.updateSuccess(result.channel))\r\n    } else {\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.channel)) {\r\n            yield put(actions.addOrderSuccess(result.status))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.channels) {\r\n          yield put(actions.updateMultiSuccess(result.channels))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.channel_id\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.channel!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\redux\\OrdersRedux.ts",["1660","1661","1662","1663","1664","1665"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n    updateThread,\r\n  addOrder,\r\n  addOrderManual,\r\n  deleteChannel,\r\n  addOrderMulti,\r\n  getOrderPercentFilter\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Orderbaohanh] Filter',\r\n  ShowOrdersPercentFilter:'[Orderbaohanh] Percent Filter',\r\n  RequestOrders: '[Orderbaohanh] Requested',\r\n  OrdersLoadedSuccess: '[Orderbaohanh] Loaded succcess',\r\n  OrdersLoadedFail: '[Orderbaohanh] load fail',\r\n  AddOrderRequest: '[Orderbaohanh] Add Order Request',\r\n  AddOrderManualRequest: '[Orderbaohanh] Add Order Manual Request',\r\n  AddOrderSuccess: '[Orderbaohanh] Add Order Success',\r\n  AddOrdersSuccess: '[Orderbaohanh] Add Orders Success',\r\n  AddOrderFail: '[Orderbaohanh] Add Order Fail',\r\n  ShowcurrentOrder: '[Orderbaohanh] Show Order',\r\n  RequestUpdate: '[Orderbaohanh] Requested Update',\r\n  RequestUpdateThread: '[Orderbaohanh] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[Orderbaohanh] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[Orderbaohanh] Update Multi Thread Request',\r\n  UpdateSuccess: '[Orderbaohanh] Update Success',\r\n  UpdateMultiSuccess: '[Orderbaohanh] Update Multi Success',\r\n  UpdateFail: '[Orderbaohanh] Update Fail',\r\n  ClearSelected: '[Orderbaohanh] Clear selected account',\r\n  GroupLoadedRequest: '[Orderbaohanh] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Orderbaohanh] Group Loaded Success',\r\n  GroupLoadedFail: '[Orderbaohanh] Group Loaded Fail',\r\n  GroupAddRequest: '[Orderbaohanh] GroupAddRequest',\r\n  GroupAddSuccess: '[Orderbaohanh] Group Add Success',\r\n  GroupAddFail: '[Orderbaohanh] Group Add Fail',\r\n  GroupDeleteRequest: '[Orderbaohanh] Group Delete Request',\r\n  GroupDeleteSuccess: '[Orderbaohanh] Group Delete Success',\r\n  SelectGroup: '[Orderbaohanh] Select Group',\r\n  DeleteOrderRequest: '[Orderbaohanh] Delete Order Request',\r\n  DeleteOrderSuccess: '[Orderbaohanh] Delete Order Success',\r\n  CheckedChange: '[Orderbaohanh] Checked Change',\r\n  CheckedAllChange: '[Orderbaohanh] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videoview?.videoid) {\r\n            return action.payload?.videoview\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videoview } }),\r\n  requestUpdateThread: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videoview } }),\r\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\r\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\r\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videoview)) {\r\n            yield put(actions.addOrderSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videoview) {\r\n          yield put(actions.updateMultiSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateThread(payload)\r\n      if (result && result.videoview) {\r\n        yield put(actions.updateMultiSuccess(result.videoview))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\redux\\OrdersRedux.ts",["1666","1667","1668","1669","1670","1671"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n    updateThread,\r\n  addOrder,\r\n  addOrderManual,\r\n  deleteChannel,\r\n  addOrderMulti,\r\n  getOrderPercentFilter\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Orderdone] Filter',\r\n  ShowOrdersPercentFilter:'[Orderdone] Percent Filter',\r\n  RequestOrders: '[Orderdone] Requested',\r\n  OrdersLoadedSuccess: '[Orderdone] Loaded succcess',\r\n  OrdersLoadedFail: '[Orderdone] load fail',\r\n  AddOrderRequest: '[Orderdone] Add Order Request',\r\n  AddOrderManualRequest: '[Orderdone] Add Order Manual Request',\r\n  AddOrderSuccess: '[Orderdone] Add Order Success',\r\n  AddOrdersSuccess: '[Orderdone] Add Orders Success',\r\n  AddOrderFail: '[Orderdone] Add Order Fail',\r\n  ShowcurrentOrder: '[Orderdone] Show Order',\r\n  RequestUpdate: '[Orderdone] Requested Update',\r\n  RequestUpdateThread: '[Orderdone] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[Orderdone] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[Orderdone] Update Multi Thread Request',\r\n  UpdateSuccess: '[Orderdone] Update Success',\r\n  UpdateMultiSuccess: '[Orderdone] Update Multi Success',\r\n  UpdateFail: '[Orderdone] Update Fail',\r\n  ClearSelected: '[Orderdone] Clear selected account',\r\n  GroupLoadedRequest: '[Orderdone] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Orderdone] Group Loaded Success',\r\n  GroupLoadedFail: '[Orderdone] Group Loaded Fail',\r\n  GroupAddRequest: '[Orderdone] GroupAddRequest',\r\n  GroupAddSuccess: '[Orderdone] Group Add Success',\r\n  GroupAddFail: '[Orderdone] Group Add Fail',\r\n  GroupDeleteRequest: '[Orderdone] Group Delete Request',\r\n  GroupDeleteSuccess: '[Orderdone] Group Delete Success',\r\n  SelectGroup: '[Orderdone] Select Group',\r\n  DeleteOrderRequest: '[Orderdone] Delete Order Request',\r\n  DeleteOrderSuccess: '[Orderdone] Delete Order Success',\r\n  CheckedChange: '[Orderdone] Checked Change',\r\n  CheckedAllChange: '[Orderdone] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videoview?.videoid) {\r\n            return action.payload?.videoview\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videoview } }),\r\n  requestUpdateThread: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videoview } }),\r\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\r\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\r\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videoview)) {\r\n            yield put(actions.addOrderSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videoview) {\r\n          yield put(actions.updateMultiSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateThread(payload)\r\n      if (result && result.videoview) {\r\n        yield put(actions.updateMultiSuccess(result.videoview))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\redux\\OrdersRedux.ts",["1672","1673","1674","1675","1676","1677"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n    updateThread,\r\n  addOrder,\r\n  addOrderManual,\r\n  deleteChannel,\r\n  addOrderMulti,\r\n  getOrderPercentFilter\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Ordercomment] Filter',\r\n  ShowOrdersPercentFilter:'[Ordercomment] Percent Filter',\r\n  RequestOrders: '[Ordercomment] Requested',\r\n  OrdersLoadedSuccess: '[Ordercomment] Loaded succcess',\r\n  OrdersLoadedFail: '[Ordercomment] load fail',\r\n  AddOrderRequest: '[Ordercomment] Add Order Request',\r\n  AddOrderManualRequest: '[Ordercomment] Add Order Manual Request',\r\n  AddOrderSuccess: '[Ordercomment] Add Order Success',\r\n  AddOrdersSuccess: '[Ordercomment] Add Orders Success',\r\n  AddOrderFail: '[Ordercomment] Add Order Fail',\r\n  ShowcurrentOrder: '[Ordercomment] Show Order',\r\n  RequestUpdate: '[Ordercomment] Requested Update',\r\n  RequestUpdateThread: '[Ordercomment] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[Ordercomment] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[Ordercomment] Update Multi Thread Request',\r\n  UpdateSuccess: '[Ordercomment] Update Success',\r\n  UpdateMultiSuccess: '[Ordercomment] Update Multi Success',\r\n  UpdateFail: '[Ordercomment] Update Fail',\r\n  ClearSelected: '[Ordercomment] Clear selected account',\r\n  GroupLoadedRequest: '[Ordercomment] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Ordercomment] Group Loaded Success',\r\n  GroupLoadedFail: '[Ordercomment] Group Loaded Fail',\r\n  GroupAddRequest: '[Ordercomment] GroupAddRequest',\r\n  GroupAddSuccess: '[Ordercomment] Group Add Success',\r\n  GroupAddFail: '[Ordercomment] Group Add Fail',\r\n  GroupDeleteRequest: '[Ordercomment] Group Delete Request',\r\n  GroupDeleteSuccess: '[Ordercomment] Group Delete Success',\r\n  SelectGroup: '[Ordercomment] Select Group',\r\n  DeleteOrderRequest: '[Ordercomment] Delete Order Request',\r\n  DeleteOrderSuccess: '[Ordercomment] Delete Order Success',\r\n  CheckedChange: '[Ordercomment] Checked Change',\r\n  CheckedAllChange: '[Ordercomment] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videocomment?.videoid) {\r\n            return action.payload?.videocomment\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videocomment.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videocomment: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videocomment } }),\r\n  requestUpdateThread: (videocomment: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videocomment } }),\r\n  updateSuccess: (videocomment: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videocomment } }),\r\n  updateMultiSuccess: (videocomment: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videocomment } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\r\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videocomment))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videocomment))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videocomment))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videocomment)\r\n    if (result && result.videocomment) {\r\n      yield put(actions.updateMultiSuccess(result.videocomment))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.videocomment)\r\n    if (result && result.videocomment) {\r\n      yield put(actions.updateMultiSuccess(result.videocomment))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videocomment)) {\r\n            yield put(actions.addOrderSuccess(result.videocomment))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videocomment) {\r\n          yield put(actions.updateMultiSuccess(result.videocomment))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateThread(payload)\r\n      if (result && result.videocomment) {\r\n        yield put(actions.updateMultiSuccess(result.videocomment))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\r\n      if (result&&result.videocomment!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\redux\\OrdersRedux.ts",["1678","1679","1680","1681","1682","1683","1684"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Orderhistory] Filter',\r\n  RequestOrders: '[Orderhistory] Requested',\r\n  OrdersLoadedSuccess: '[Orderhistory] Loaded succcess',\r\n  OrdersLoadedFail: '[Orderhistory] load fail',\r\n  AddOrderRequest: '[Orderhistory] Add Order Request',\r\n  AddOrderManualRequest: '[Orderhistory] Add Order Manual Request',\r\n  AddOrderSuccess: '[Orderhistory] Add Order Success',\r\n  AddOrdersSuccess: '[Orderhistory] Add Orders Success',\r\n  AddOrderFail: '[Orderhistory] Add Order Fail',\r\n  ShowcurrentOrder: '[Orderhistory] Show Order',\r\n  RequestUpdate: '[Orderhistory] Requested Update',\r\n  UpdateMultiOrderRequest: '[Orderhistory] Update Multi Order Request',\r\n  UpdateSuccess: '[Orderhistory] Update Success',\r\n  UpdateMultiSuccess: '[Orderhistory] Update Multi Success',\r\n  UpdateFail: '[Orderhistory] Update Fail',\r\n  ClearSelected: '[Orderhistory] Clear selected account',\r\n  GroupLoadedRequest: '[Orderhistory] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Orderhistory] Group Loaded Success',\r\n  GroupLoadedFail: '[Orderhistory] Group Loaded Fail',\r\n  GroupAddRequest: '[Orderhistory] GroupAddRequest',\r\n  GroupAddSuccess: '[Orderhistory] Group Add Success',\r\n  GroupAddFail: '[Orderhistory] Group Add Fail',\r\n  GroupDeleteRequest: '[Orderhistory] Group Delete Request',\r\n  GroupDeleteSuccess: '[Orderhistory] Group Delete Success',\r\n  SelectGroup: '[Orderhistory] Select Group',\r\n  DeleteOrderRequest: '[Orderhistory] Delete Order Request',\r\n  DeleteOrderSuccess: '[Orderhistory] Delete Order Success',\r\n  CheckedChange: '[Orderhistory] Checked Change',\r\n  CheckedAllChange: '[Orderhistory] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (item.videoid === action.payload?.videoid) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videoview?.videoid) {\r\n            return action.payload?.videoview\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videoview } }),\r\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\r\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\r\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videoview)) {\r\n            yield put(actions.addOrderSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videoview) {\r\n          yield put(actions.updateMultiSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.groupName\r\n      const { data: result } = yield addGroup(payload)\r\n      if (result && result.group) {\r\n        yield put(actions.addGroupSuccess(result.group))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.videoid\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\redux\\OrdersRedux.ts",["1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel,OrderModelCmt,OrderModelFollower, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrderCmt,\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n  updateOrderCmt,\r\n  updateOrderFollwer,\r\n  addOrder,\r\n  addGroup,\r\n  addOrderManual,\r\n  updateSetting,\r\n  deleteChannel,\r\n  addOrderMulti, getListOrderFollowerTiktok,\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[OrderhistoryFind] Filter',\r\n  RequestOrders: '[OrderhistoryFind] Requested',\r\n  RequestOrderCmt: '[OrderhistoryFind] Requested Cmt',\r\n  RequestOrderFollowerTiktok: '[OrderhistoryFind] Requested Follower Tiktok',\r\n  OrdersLoadedSuccess: '[OrderhistoryFind] Loaded succcess',\r\n  OrdersLoadedCmtSuccess: '[OrderhistoryFind] Loaded Cmt succcess',\r\n  OrdersLoadedFollowerTiktokSuccess: '[OrderhistoryFind] Loaded Follower Tiktok succcess',\r\n  OrdersLoadedFail: '[OrderhistoryFind] load fail',\r\n  AddOrderRequest: '[OrderhistoryFind] Add Order Request',\r\n  AddOrderManualRequest: '[OrderhistoryFind] Add Order Manual Request',\r\n  AddOrderSuccess: '[OrderhistoryFind] Add Order Success',\r\n  AddOrdersSuccess: '[OrderhistoryFind] Add Orders Success',\r\n  AddOrderFail: '[OrderhistoryFind] Add Order Fail',\r\n  ShowcurrentOrder: '[OrderhistoryFind] Show Order',\r\n  ShowcurrentOrderCmt: '[OrderhistoryFind] Show Order Cmt',\r\n  RequestUpdate: '[OrderhistoryFind] Requested Update',\r\n  RequestUpdateCmt: '[OrderhistoryFind] Requested Cmt Update',\r\n  RequestUpdateFollower: '[OrderhistoryFind] Requested Follower Update',\r\n  UpdateMultiOrderRequest: '[OrderhistoryFind] Update Multi Order Request',\r\n  UpdateSuccess: '[OrderhistoryFind] Update Success',\r\n  UpdateMultiSuccess: '[OrderhistoryFind] Update Multi Success',\r\n  UpdateMultiCmtSuccess: '[OrderhistoryFind] Update  Multi Cmt Success',\r\n  UpdateMultiFollowerSuccess: '[OrderhistoryFind] Update  Multi Follower Success',\r\n  UpdateFail: '[OrderhistoryFind] Update Fail',\r\n  ClearSelected: '[OrderhistoryFind] Clear selected account',\r\n  GroupLoadedRequest: '[OrderhistoryFind] Group Loaded Request',\r\n  GroupLoadedSuccess: '[OrderhistoryFind] Group Loaded Success',\r\n  GroupLoadedFail: '[OrderhistoryFind] Group Loaded Fail',\r\n  GroupAddRequest: '[OrderhistoryFind] GroupAddRequest',\r\n  GroupAddSuccess: '[OrderhistoryFind] Group Add Success',\r\n  GroupAddFail: '[OrderhistoryFind] Group Add Fail',\r\n  GroupDeleteRequest: '[OrderhistoryFind] Group Delete Request',\r\n  GroupDeleteSuccess: '[OrderhistoryFind] Group Delete Success',\r\n  SelectGroup: '[OrderhistoryFind] Select Group',\r\n  DeleteOrderRequest: '[OrderhistoryFind] Delete Order Request',\r\n  DeleteOrderSuccess: '[OrderhistoryFind] Delete Order Success',\r\n  CheckedChange: '[OrderhistoryFind] Checked Change',\r\n  CheckedChangeCmt: '[OrderhistoryFind] Checked Change Cmt',\r\n  CheckedChangeFollower: '[OrderhistoryFind] Checked Change Follower',\r\n  CheckedAllChange: '[OrderhistoryFind] Checked All Change',\r\n  CheckedAllChangeCmt: '[OrderhistoryFind] Checked All Change Cmt',\r\n  CheckedAllChangeFollower: '[OrderhistoryFind] Checked All Change Follower',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  ordersCmt: [],\r\n  ordersFollowerTiktok: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentOrderCmt: undefined,\r\n  currentOrderFollowerTiktok: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  ordersCmt: OrderModelCmt[]\r\n  ordersFollowerTiktok: OrderModelFollower[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  currentOrderCmt?: OrderModelCmt\r\n  currentOrderFollowerTiktok?: OrderModelFollower\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestOrderCmt: {\r\n        return {\r\n          ...state,\r\n          ordersCmt: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestOrderFollowerTiktok: {\r\n        return {\r\n          ...state,\r\n          ordersFollowerTiktok: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedCmtSuccess: {\r\n        return {\r\n          ...state,\r\n          ordersCmt: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFollowerTiktokSuccess: {\r\n        return {\r\n          ...state,\r\n          ordersFollowerTiktok: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (item.videoid === action.payload?.videoid) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateCmt: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateFollower: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videoview?.videoid) {\r\n            return action.payload?.videoview\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          adding: true,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\r\n            if(_item.orderid==item.orderid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiCmtSuccess: {\r\n        const remaporders = state.ordersCmt.map((item: OrderModelCmt) => {\r\n          const findItem = action.payload?.videocomment.find((_item:OrderModelCmt)=>{\r\n            if(_item.orderid==item.orderid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          ordersCmt: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrderCmt: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiFollowerSuccess: {\r\n        const remaporders = state.ordersFollowerTiktok.map((item: OrderModelFollower) => {\r\n          const findItem = action.payload?.channel_tiktok.find((_item:OrderModelFollower)=>{\r\n            if(_item.orderid==item.orderid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          ordersFollowerTiktok: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrderFollowerTiktok: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrderCmt: {\r\n        return {\r\n          ...state,\r\n          currentOrderCmt: action.payload?.currentOrderCmt\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder,\r\n          currentOrderCmt: action.payload?.currentOrderCmt\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.orderid===action.payload?.data?.orderid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedChangeCmt: {\r\n        return {\r\n          ...state,\r\n          ordersCmt:  state.ordersCmt.map(item=>{\r\n            if(item.orderid===action.payload?.data?.orderid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedChangeFollower: {\r\n        return {\r\n          ...state,\r\n          ordersFollowerTiktok:  state.ordersFollowerTiktok.map(item=>{\r\n            if(item.orderid===action.payload?.data?.orderid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChangeCmt: {\r\n        return {\r\n          ...state,\r\n          ordersCmt:  state.ordersCmt.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChangeFollower: {\r\n        return {\r\n          ...state,\r\n          ordersFollowerTiktok:  state.ordersFollowerTiktok.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\r\n  requestOrderCmt: (user:string) => ({ type: actionTypes.RequestOrderCmt ,payload:{user}}),\r\n  requestOrderFollowerTiktok: (user:string) => ({ type: actionTypes.RequestOrderFollowerTiktok ,payload:{user}}),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  fulfillorderCmt: (orders: OrderModelCmt[]) => ({ type: actionTypes.OrdersLoadedCmtSuccess, payload: { orders } }),\r\n  fulfillorderFollowerTiktok: (orders: OrderModelFollower[]) => ({ type: actionTypes.OrdersLoadedFollowerTiktokSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (orderid: string) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { orderid } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (orderid: string,mode:number,check:number) => ({ type: actionTypes.RequestUpdate, payload: { orderid,mode,check } }),\r\n  requestUpdateCmt: (orderid: string) => ({ type: actionTypes.RequestUpdateCmt, payload: { orderid } }),\r\n  requestUpdateFollower: (orderid: string) => ({ type: actionTypes.RequestUpdateFollower, payload: { orderid } }),\r\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\r\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\r\n  updateMultiCmtSuccess: (videocomment: OrderModelCmt[]) => ({ type: actionTypes.UpdateMultiCmtSuccess, payload: { videocomment } }),\r\n  updateMultiFollowerSuccess: (channel_tiktok: OrderModelFollower[]) => ({ type: actionTypes.UpdateMultiFollowerSuccess, payload: { channel_tiktok } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  showcurrentOrderCmt: (currentOrderCmt: OrderModelCmt) => ({ type: actionTypes.ShowcurrentOrderCmt, payload: { currentOrderCmt } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\r\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\r\n  checkedChange: (data:{orderid:number,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedChangeCmt: (data:{orderid:number,checked:boolean}) => ({ type: actionTypes.CheckedChangeCmt, payload: { data } }),\r\n  checkedChangeFollower: (data:{orderid:number,checked:boolean}) => ({ type: actionTypes.CheckedChangeFollower, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  checkedAllChangeCmt: (checked:boolean) => ({ type: actionTypes.CheckedAllChangeCmt, payload: { checked } }),\r\n  checkedAllChangeFollower: (checked:boolean) => ({ type: actionTypes.CheckedAllChangeFollower, payload: { checked } }),\r\n\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n    if(orders.videoview==null){\r\n      alert(\"Không tìm thấy thông tin đơn!\")\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.RequestOrderCmt, function* userRequestedcmt(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrderCmt(payload)\r\n    yield put(actions.fulfillorderCmt(orders.videocomment))\r\n    if(orders.videocomment==null){\r\n      alert(\"Không tìm thấy thông tin đơn!\")\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.RequestOrderFollowerTiktok, function* userRequestedcmt(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrderFollowerTiktok(payload)\r\n    yield put(actions.fulfillorderFollowerTiktok(orders.channel_tiktok))\r\n    if(orders.channel_tiktok==null){\r\n      alert(\"Không tìm thấy thông tin đơn!\")\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.orderid,param.payload.mode,param.payload.check)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      yield put(actions.updateFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateCmt, function* updateUserRequestedCmt(param: any) {\r\n    const { data: result } = yield updateOrderCmt(param.payload.orderid)\r\n    if (result && result.videocomment) {\r\n      yield put(actions.updateMultiCmtSuccess(result.videocomment))\r\n    } else {\r\n      yield put(actions.updateFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateFollower, function* updateUserRequestedFollower(param: any) {\r\n    const { data: result } = yield updateOrderFollwer(param.payload.orderid)\r\n    if (result && result.channel_tiktok) {\r\n      yield put(actions.updateMultiFollowerSuccess(result.channel_tiktok))\r\n    } else {\r\n      yield put(actions.updateFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videoview)) {\r\n            yield put(actions.addOrderSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* updateUserRequested(param: any) {\r\n    try {\r\n      const { data: result } = yield updateOrder(param.payload.orderid,param.payload.mode,param.payload.check)\r\n        if (result && result.videoview) {\r\n          yield put(actions.updateMultiSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.groupName\r\n      const { data: result } = yield addGroup(payload)\r\n      if (result && result.group) {\r\n        yield put(actions.addGroupSuccess(result.group))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.videoid\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\redux\\AccountRedux.ts",["1696","1697","1698","1699","1700","1701","1702","1703"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { AccountModel,AccountForm,AccountLimitModel,AccountLimitForm,ProxySettingModel,ProxySettingForm } from '../models/Account'\r\nimport {\r\n  getListAccount,\r\n  updateAccount,\r\n  deleteVps,\r\n  updateResetVPS,\r\n  getListLimitService,\r\n  updateAccountLimit,getListProxySetting,updateProxySetting\r\n} from './AccountCRUD'\r\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\r\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestAccounts: '[Setting] Requested',\r\n  RequestAccountLimit: '[Setting] Requested Limit',\r\n  RequestProxySetting: '[Proxy] Requested Setting',\r\n  AccountsLoadedSuccess: '[Setting] Loaded succcess',\r\n  AccountLimitLoadedSuccess: '[Setting] Loaded Limit succcess',\r\n  ProxySettingLoadedSuccess: '[Proxy] Loaded Setting succcess',\r\n  AccountsLoadedFail: '[Setting] load fail',\r\n  AccountLimitLoadedFail: '[Setting] load Limit fail',\r\n  ProxySettingLoadedFail: '[Proxy] load Setting fail',\r\n  ShowCurrentAccount: '[Setting] Show Account',\r\n  ShowCurrentAccountLimit: '[Setting] Show Account Limit',\r\n  ShowCurrentProxySetting: '[Proxy] Show Setting Limit',\r\n  RequestUpdate: '[Setting] Requested Update',\r\n  RequestUpdateLimit: '[Setting] Requested Update Limit',\r\n  RequestUpdateProxySetting: '[Proxy] Requested Update Setting',\r\n  UpdateSuccess: '[Setting] Update Success',\r\n  UpdateLimitSuccess: '[Setting] Update Limit Success',\r\n  UpdateProxySettingSuccess: '[Proxy] Update Setting Success',\r\n  UpdateFail: '[Setting] Update Fail',\r\n  ClearSelected:'[Setting] Clear selected account',\r\n  ClearSelectedLimit:'[Setting] Clear selected account limit',\r\n  ClearSelectedProxySetting:'[Proxy] Clear selected account Setting',\r\n  DeleteVpsRequest: '[Setting] Delete Account Request',\r\n  DeleteVpsSuccess: '[Setting] Delete Account Success',\r\n  DeleteMultiVpsRequest: '[Setting] Delete Account Request',\r\n  DeleteMultiVpsSuccess: '[Setting] Delete Account Success',\r\n  CheckedChange: '[Setting] Checked Change',\r\n  CheckedAllChange: '[Setting] Checked All Change',\r\n  UpdateMultiOrderRequest: '[Setting] Update Multi Account Request',\r\n  UpdateRestartMultiOrderRequest: '[Users] Update Restart Multi Account Request',\r\n  UpdateMultiSuccess: '[Setting] Update Multi Success',\r\n}\r\n\r\nconst initialAccountState: IAccountState = {\r\n  accounts: [],\r\n  accountlimit: [],\r\n  proxysetting: [],\r\n  loading: false,\r\n  adding:false,\r\n  currentAccount:undefined,\r\n  currentAccountLimit:undefined,\r\n  currentProxySetting:undefined\r\n}\r\n\r\nexport interface IAccountState {\r\n  accounts: AccountModel[]\r\n  accountlimit: AccountLimitModel[]\r\n  proxysetting: ProxySettingModel[]\r\n  loading: boolean\r\n  adding:boolean\r\n  currentAccount?:AccountModel\r\n  currentAccountLimit?:AccountLimitModel\r\n  currentProxySetting?:ProxySettingModel\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-accounts', whitelist: [] },\r\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestAccounts: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestAccountLimit: {\r\n        return {\r\n          ...state,\r\n          accountlimit: [],\r\n          loading: true\r\n        }\r\n      }\r\n            case actionTypes.RequestProxySetting: {\r\n        return {\r\n          ...state,\r\n          proxysetting: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.AccountsLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: action.payload?.accounts || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountLimitLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accountlimit: action.payload?.accountlimit || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ProxySettingLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          proxysetting: action.payload?.proxysetting || [],\r\n          loading: false\r\n        }\r\n      }\r\n\r\n      case actionTypes.AccountsLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountLimitLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accountlimit: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ProxySettingLoadedFail: {\r\n        return {\r\n          ...state,\r\n          proxysetting: [],\r\n          loading: false\r\n        }\r\n      }\r\n\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestAccountLimit: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestProxySetting: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n\r\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\r\n          if(item.id===action.payload?.account?.id){\r\n            return action.payload?.account\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remapAccounts,\r\n          loading: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateLimitSuccess: {\r\n\r\n        const remapAccounts = state.accountlimit.map((item: AccountLimitModel)=>{\r\n          if(item.id===action.payload?.accountlimit?.id){\r\n            return action.payload?.accountlimit\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accountlimit: remapAccounts,\r\n          loading: false,\r\n          currentAccountLimit: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateProxySettingSuccess: {\r\n\r\n        const remapAccounts = state.proxysetting.map((item: ProxySettingModel)=>{\r\n          if(item.id===action.payload?.proxysetting?.id){\r\n            return action.payload?.proxysetting\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          proxysetting: remapAccounts,\r\n          loading: false,\r\n          currentProxySetting: undefined\r\n        }\r\n      }\r\n      case actionTypes.DeleteVpsSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: state.accounts.filter((item: AccountModel) => {\r\n            if (action.payload?.id===item.id)  {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccount: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccountLimit: {\r\n        return {\r\n          ...state,\r\n          currentAccountLimit: action.payload?.currentAccountLimit\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentProxySetting: {\r\n        return {\r\n          ...state,\r\n          currentProxySetting: action.payload?.currentProxySetting\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ClearSelectedLimit: {\r\n        return {\r\n          ...state,\r\n          currentAccountLimit: action.payload?.currentAccountLimit\r\n        }\r\n      }\r\n      case actionTypes.ClearSelectedProxySetting: {\r\n        return {\r\n          ...state,\r\n          currentProxySetting: action.payload?.currentProxySetting\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            if(item.id===action.payload?.data?.id){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateRestartMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.accounts.map((item:AccountForm) => {\r\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\r\n            if(_item.id ===item.id){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\r\n  requestAccountLimit: () => ({ type: actionTypes.RequestAccountLimit }),\r\n  requestProxySetting: () => ({ type: actionTypes.RequestProxySetting }),\r\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\r\n  fulfillAccountLimit: (accountlimit: AccountLimitModel[]) => ({ type: actionTypes.AccountLimitLoadedSuccess, payload: { accountlimit } }),\r\n  fulfillProxySetting: (proxysetting: ProxySettingModel[]) => ({ type: actionTypes.ProxySettingLoadedSuccess, payload: { proxysetting } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\r\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\r\n  requestUpdateLimit: (accountlimit: AccountLimitModel) => ({ type: actionTypes.RequestUpdateLimit, payload: { accountlimit } }),\r\n  requestUpdateProxySetting: (proxysetting: ProxySettingModel) => ({ type: actionTypes.RequestUpdateProxySetting, payload: { proxysetting } }),\r\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\r\n  updateLimitSuccess: (accountlimit: AccountLimitModel) => ({ type: actionTypes.UpdateLimitSuccess, payload: { accountlimit } }),\r\n  updateProxySettingSuccess: (proxysetting: ProxySettingModel) => ({ type: actionTypes.UpdateProxySettingSuccess, payload: { proxysetting } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\r\n  showCurrentAccountLimit: (currentAccountLimit: AccountLimitModel) => ({ type: actionTypes.ShowCurrentAccountLimit, payload: { currentAccountLimit } }),\r\n  showCurrentProxySetting: (currentProxySetting: ProxySettingModel) => ({ type: actionTypes.ShowCurrentProxySetting, payload: { currentProxySetting } }),\r\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\r\n  clearCurrentAccountLimit: () => ({ type: actionTypes.ClearSelectedLimit}),\r\n  clearCurrentProxySetting: () => ({ type: actionTypes.ClearSelectedProxySetting}),\r\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\r\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\r\n  checkedChange: (data:{username:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\r\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\r\n    const {data: accounts} = yield getListAccount()\r\n    yield put(actions.fulfillAccounts(accounts.accounts))\r\n  })\r\n  yield takeLatest(actionTypes.RequestAccountLimit, function* userRequested(param: any) {\r\n    const {data: accountlimit} = yield getListLimitService()\r\n    yield put(actions.fulfillAccountLimit(accountlimit.accountlimit))\r\n  })\r\n  yield takeLatest(actionTypes.RequestProxySetting, function* userRequested(param: any) {\r\n    const {data: proxysetting} = yield getListProxySetting()\r\n    yield put(actions.fulfillProxySetting(proxysetting.proxysetting))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    //console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: account} = yield updateAccount(param.payload.account)\r\n    console.log(\"------update account res-----\",account.account)\r\n    yield put(actions.updateSuccess(account.account))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdateLimit, function* updateUserRequested(param: any) {\r\n    //console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: accountlimit} = yield updateAccountLimit(param.payload.accountlimit)\r\n    console.log(\"------update account res-----\",accountlimit.accountlimit)\r\n    yield put(actions.updateLimitSuccess(accountlimit.accountlimit))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdateProxySetting, function* updateUserRequested(param: any) {\r\n    //console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: proxysetting} = yield updateProxySetting(param.payload.proxysetting)\r\n    console.log(\"------update account res-----\",proxysetting.proxysetting)\r\n    yield put(actions.updateProxySettingSuccess(proxysetting.proxysetting))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.vps\r\n      const { data: result } = yield deleteVps(payload)\r\n      if (result&&result.vps!==null) {\r\n        yield put(actions.deleteVpsSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateAccount(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateResetVPS(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\redux\\AccountRedux.ts",["1704","1705","1706"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport {ComputerModel, HistoryModel, ChannelStaticModel, ProxyModel,AuthenModel,SockModel} from '../models/Account'\r\nimport {getList, getComputer, getStatics, getProxy, getProxySub, deleteProxy, getAuthen, getSock} from './AccountCRUD'\r\nimport {deleteChannel} from \"../../orderdone/redux/OrdersCRUD\";\r\nimport {OrderModel} from \"../../orderdone/models/Order\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestHistories: '[Histories] Requested',\r\n  HistoryLoadedSuccess: '[Histories] Loaded succcess',\r\n  HistoryLoadedFail: '[Histories] load fail',\r\n  ProxyLoadedFail: '[Proxy] load fail',\r\n  AuthenLoadedFail: '[Authen] load fail',\r\n  SockLoadedFail: '[Sock] load fail',\r\n  RequestComputers: '[Computers] Requested',\r\n  ComputersLoadedSuccess: '[Computers] Loaded succcess',\r\n  AuthenLoadedSuccess: '[Authen] Loaded succcess',\r\n  SockLoadedSuccess: '[Sock] Loaded succcess',\r\n  ProxyLoadedSuccess: '[Proxy] Loaded succcess',\r\n  RequestStatic: '[Static] Requested',\r\n  RequestProxy: '[Proxy] Requested',\r\n  RequestAuthen: '[Authen] Requested',\r\n  RequestSock: '[Sock] Requested',\r\n  RequestProxySub: '[Proxy] Sub Requested',\r\n  StaticLoadedSuccess: '[Static] Loaded succcess',\r\n  CheckedChange: '[Proxy] Checked Change',\r\n  CheckedAllChange: '[Proxy] Checked All Change',\r\n  DeleteIpv4Request: '[Proxy] Delete Proxy Request',\r\n}\r\n\r\n\r\nconst initialAccountState: IAccountState = {\r\n  histories: [],\r\n  loading: false,\r\n  computers:[],\r\n  statics:[],\r\n  proxies:[],\r\n  authens:[],\r\n  socks:[]\r\n}\r\n\r\nexport interface IAccountState {\r\n  histories: HistoryModel[]\r\n  loading: boolean\r\n  computers : ComputerModel[],\r\n  statics : ChannelStaticModel[]\r\n  proxies:ProxyModel[]\r\n  authens:AuthenModel[]\r\n  socks:SockModel[]\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n    { storage, key: 'v1-histories', whitelist: [] },\r\n    (state: IAccountState = initialAccountState, action: ActionWithPayload<IAccountState>) => {\r\n      switch (action.type) {\r\n        case actionTypes.RequestHistories: {\r\n          return {\r\n            ...state,\r\n            histories: [],\r\n            loading: true\r\n          }\r\n        }\r\n        case actionTypes.RequestProxy: {\r\n          return {\r\n            ...state,\r\n            proxies: [],\r\n            loading: true\r\n          }\r\n        }\r\n        case actionTypes.RequestAuthen: {\r\n          return {\r\n            ...state,\r\n            authens: [],\r\n            loading: true\r\n          }\r\n        }\r\n        case actionTypes.RequestSock: {\r\n          return {\r\n            ...state,\r\n            socks: [],\r\n            loading: true\r\n          }\r\n        }\r\n        case actionTypes.RequestProxySub: {\r\n          return {\r\n            ...state,\r\n            proxies: [],\r\n            loading: true\r\n          }\r\n        }\r\n        case actionTypes.RequestComputers: {\r\n          return {\r\n            ...state,\r\n            computers: []\r\n          }\r\n        }\r\n        case actionTypes.ComputersLoadedSuccess: {\r\n          return {\r\n            ...state,\r\n            computers: action.payload?.computers || [],\r\n          }\r\n        }\r\n        case actionTypes.RequestStatic: {\r\n          return {\r\n            ...state,\r\n            statics: []\r\n          }\r\n        }\r\n        case actionTypes.StaticLoadedSuccess: {\r\n          return {\r\n            ...state,\r\n            statics: action.payload?.statics || [],\r\n          }\r\n        }\r\n        case actionTypes.ProxyLoadedSuccess: {\r\n          return {\r\n            ...state,\r\n            proxies: action.payload?.proxies || [],\r\n          }\r\n        }\r\n        case actionTypes.AuthenLoadedSuccess: {\r\n          return {\r\n            ...state,\r\n            authens: action.payload?.authens || [],\r\n          }\r\n        }\r\n        case actionTypes.SockLoadedSuccess: {\r\n          return {\r\n            ...state,\r\n            socks: action.payload?.socks || [],\r\n          }\r\n        }\r\n\r\n        case actionTypes.HistoryLoadedSuccess: {\r\n          return {\r\n            ...state,\r\n            histories: action.payload?.histories || [],\r\n            loading: false\r\n          }\r\n        }\r\n        case actionTypes.HistoryLoadedFail: {\r\n          return {\r\n            ...state,\r\n            histories: [],\r\n            loading: false\r\n          }\r\n        }\r\n        case actionTypes.ProxyLoadedFail: {\r\n          return {\r\n            ...state,\r\n            proxies: [],\r\n            loading: false\r\n          }\r\n        }\r\n        case actionTypes.AuthenLoadedFail: {\r\n          return {\r\n            ...state,\r\n            authens: [],\r\n            loading: false\r\n          }\r\n        }\r\n        case actionTypes.SockLoadedFail: {\r\n          return {\r\n            ...state,\r\n            socks: [],\r\n            loading: false\r\n          }\r\n        }\r\n\r\n        default:\r\n          return state\r\n      }\r\n    }\r\n)\r\n\r\nexport const actions = {\r\n  requestHistories: (user_id: number) => ({ type: actionTypes.RequestHistories, payload: { user_id } }),\r\n  fulfillHistories: (histories: HistoryModel[]) => ({ type: actionTypes.HistoryLoadedSuccess, payload: { histories } }),\r\n  fulfillProxy: (proxies: ProxyModel[]) => ({ type: actionTypes.ProxyLoadedSuccess, payload: { proxies } }),\r\n  fulfillAuthen: (authens: AuthenModel[]) => ({ type: actionTypes.AuthenLoadedSuccess, payload: { authens } }),\r\n  fulfillSock: (socks: SockModel[]) => ({ type: actionTypes.SockLoadedSuccess, payload: { socks } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.HistoryLoadedFail, payload: { message } }),\r\n  requestComputers: () => ({ type: actionTypes.RequestComputers}),\r\n  requestProxies: () => ({ type: actionTypes.RequestProxy}),\r\n  requestAuthens: () => ({ type: actionTypes.RequestAuthen}),\r\n  requestSocks: () => ({ type: actionTypes.RequestSock}),\r\n  requestProxiesSub: () => ({ type: actionTypes.RequestProxySub}),\r\n  fulfillComputers: (computers: ComputerModel[]) => ({ type: actionTypes.ComputersLoadedSuccess, payload: { computers } }),\r\n  requestStatics: (user:string) => ({ type: actionTypes.RequestStatic,payload:{user}}),\r\n  fulfillStatics: (statics: ChannelStaticModel[]) => ({ type: actionTypes.StaticLoadedSuccess, payload: { statics } }),\r\n  checkedChange: (data:{vps:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  deleteIpv4Request: (ipv4: string) => ({ type: actionTypes.DeleteIpv4Request, payload: { ipv4} }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestHistories, function* userRequested(param: any) {\r\n    const {data: resutl} = yield getList()\r\n    console.log(resutl)\r\n    yield put(actions.fulfillHistories(resutl.histories))\r\n  })\r\n  yield takeLatest(actionTypes.RequestProxy, function* userRequested(param: any) {\r\n    const {data: resutl} = yield getProxy()\r\n    console.log(resutl)\r\n    yield put(actions.fulfillProxy(resutl.proxies))\r\n  })\r\n  yield takeLatest(actionTypes.RequestAuthen, function* userRequested(param: any) {\r\n    const {data: resutl} = yield getAuthen()\r\n    console.log(resutl)\r\n    yield put(actions.fulfillAuthen(resutl.authens))\r\n  })\r\n  yield takeLatest(actionTypes.RequestSock, function* userRequested(param: any) {\r\n    const {data: resutl} = yield getSock()\r\n    console.log(resutl)\r\n    yield put(actions.fulfillSock(resutl.socks))\r\n  })\r\n  yield takeLatest(actionTypes.RequestProxySub, function* userRequested(param: any) {\r\n    const {data: resutl} = yield getProxySub()\r\n    console.log(resutl)\r\n    yield put(actions.fulfillProxy(resutl.proxies))\r\n  })\r\n  yield takeLatest(actionTypes.RequestComputers, function* userRequested(param: any) {\r\n    const {data: resutl} = yield getComputer()\r\n    console.log(resutl)\r\n    yield put(actions.fulfillComputers(resutl.computers))\r\n  })\r\n  yield takeLatest(actionTypes.RequestStatic, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const {data: resutl} = yield getStatics(payload)\r\n    console.log(resutl)\r\n    yield put(actions.fulfillStatics(resutl.view7day))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteIpv4Request, function* DeleteIpv4Request(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteProxy(payload.ipv4)\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\redux\\AccountRedux.ts",["1707","1708","1709","1710"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { AccountModel,AccountForm } from '../models/Account'\r\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\r\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\r\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestAccounts: '[Services] Requested',\r\n  AccountsLoadedSuccess: '[Services] Loaded succcess',\r\n  AccountsLoadedFail: '[Services] load fail',\r\n  ShowCurrentAccount: '[Services] Show services',\r\n  RequestUpdate: '[Services] Requested Update',\r\n  UpdateSuccess: '[Services] Update Success',\r\n  UpdateFail: '[Services] Update Fail',\r\n  ClearSelected:'[Services] Clear selected services',\r\n  DeleteVpsRequest: '[Services] Delete services Request',\r\n  DeleteVpsSuccess: '[Services] Delete services Success',\r\n  DeleteMultiVpsRequest: '[Services] Delete services Request',\r\n  DeleteMultiVpsSuccess: '[Services] Delete services Success',\r\n  CheckedChange: '[Services] Checked Change',\r\n  CheckedAllChange: '[Services] Checked All Change',\r\n  UpdateMultiOrderRequest: '[Services] Update Multi services Request',\r\n  UpdateRestartMultiOrderRequest: '[Services] Update Restart Multi services Request',\r\n  UpdateMultiSuccess: '[Services] Update Multi Success',\r\n}\r\n\r\nconst initialAccountState: IAccountState = {\r\n  accounts: [],\r\n  loading: false,\r\n  adding:false,\r\n  currentAccount:undefined\r\n}\r\n\r\nexport interface IAccountState {\r\n  accounts: AccountModel[]\r\n  loading: boolean\r\n  adding:boolean\r\n  currentAccount?:AccountModel\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-accounts', whitelist: [] },\r\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestAccounts: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: action.payload?.accounts || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n\r\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\r\n          if(item.service===action.payload?.account?.service){\r\n            return action.payload?.account\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remapAccounts,\r\n          loading: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      case actionTypes.DeleteVpsSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: state.accounts.filter((item: AccountModel) => {\r\n            if (action.payload?.service.indexOf(item.service)>=0)  {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccount: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            if(item.service===action.payload?.data?.service){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateRestartMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.accounts.map((item:AccountForm) => {\r\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\r\n            if(_item.service===item.service){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\r\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\r\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\r\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\r\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\r\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\r\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\r\n  checkedChange: (data:{username:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\r\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\r\n    const {data: accounts} = yield getListAccount()\r\n    yield put(actions.fulfillAccounts(accounts.accounts))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    //console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: account} = yield updateAccount(param.payload.account)\r\n    console.log(\"------update account res-----\",account.account)\r\n    yield put(actions.updateSuccess(account.account))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.vps\r\n      const { data: result } = yield deleteVps(payload)\r\n      if (result&&result.vps!==null) {\r\n        yield put(actions.deleteVpsSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateAccount(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateResetVPS(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\redux\\OrdersRedux.ts",["1711","1712","1713","1714","1715","1716","1717"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Balance] Filter',\r\n  RequestOrders: '[Balance] Requested',\r\n  OrdersLoadedSuccess: '[Balance] Loaded succcess',\r\n  OrdersLoadedFail: '[Balance] load fail',\r\n  AddOrderRequest: '[Balance] Add Order Request',\r\n  AddOrderManualRequest: '[Balance] Add Order Manual Request',\r\n  AddOrderSuccess: '[Balance] Add Order Success',\r\n  AddOrdersSuccess: '[Balance] Add Orders Success',\r\n  AddOrderFail: '[Balance] Add Order Fail',\r\n  ShowcurrentOrder: '[Balance] Show Order',\r\n  RequestUpdate: '[Balance] Requested Update',\r\n  UpdateMultiOrderRequest: '[Balance] Update Multi Order Request',\r\n  UpdateSuccess: '[Balance] Update Success',\r\n  UpdateMultiSuccess: '[Balance] Update Multi Success',\r\n  UpdateFail: '[Balance] Update Fail',\r\n  ClearSelected: '[Balance] Clear selected account',\r\n  GroupLoadedRequest: '[Balance] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Balance] Group Loaded Success',\r\n  GroupLoadedFail: '[Balance] Group Loaded Fail',\r\n  GroupAddRequest: '[Balance] GroupAddRequest',\r\n  GroupAddSuccess: '[Balance] Group Add Success',\r\n  GroupAddFail: '[Balance] Group Add Fail',\r\n  GroupDeleteRequest: '[Balance] Group Delete Request',\r\n  GroupDeleteSuccess: '[Balance] Group Delete Success',\r\n  SelectGroup: '[Balance] Select Group',\r\n  DeleteOrderRequest: '[Balance] Delete Order Request',\r\n  DeleteOrderSuccess: '[Balance] Delete Order Success',\r\n  CheckedChange: '[Balance] Checked Change',\r\n  CheckedAllChange: '[Balance] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.id === action.payload?.videobuff?.id) {\r\n            return action.payload?.videobuff\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videobuff.find((_item:OrderModel)=>{\r\n            if(_item.id===item.id){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.id===action.payload?.data?.id){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videobuff: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videobuff } }),\r\n  updateSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videobuff } }),\r\n  updateMultiSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videobuff } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\r\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.balances))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videobuff))\r\n  })\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videobuff)\r\n    if (result && result.videobuff) {\r\n      yield put(actions.updateMultiSuccess(result.videobuff))\r\n    } else {\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videobuff)) {\r\n            yield put(actions.addOrderSuccess(result.videobuff))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.videobuff) {\r\n          yield put(actions.updateMultiSuccess(result.videobuff))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.groupName\r\n      const { data: result } = yield addGroup(payload)\r\n      if (result && result.group) {\r\n        yield put(actions.addGroupSuccess(result.group))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.videoid\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.videobuffh!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\redux\\AccountRedux.ts",["1718","1719","1720","1721"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { AccountModel,AccountForm } from '../models/Account'\r\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\r\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\r\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestAccounts: '[Users] Requested',\r\n  AccountsLoadedSuccess: '[Users] Loaded succcess',\r\n  AccountsLoadedFail: '[Users] load fail',\r\n  ShowCurrentAccount: '[Users] Show Account',\r\n  RequestUpdate: '[Users] Requested Update',\r\n  UpdateSuccess: '[Users] Update Success',\r\n  UpdateFail: '[Users] Update Fail',\r\n  ClearSelected:'[Users] Clear selected account',\r\n  DeleteVpsRequest: '[Users] Delete Account Request',\r\n  DeleteVpsSuccess: '[Users] Delete Account Success',\r\n  DeleteMultiVpsRequest: '[Users] Delete Account Request',\r\n  DeleteMultiVpsSuccess: '[Users] Delete Account Success',\r\n  CheckedChange: '[Users] Checked Change',\r\n  CheckedAllChange: '[Users] Checked All Change',\r\n  UpdateMultiOrderRequest: '[Users] Update Multi Account Request',\r\n  UpdateRestartMultiOrderRequest: '[Users] Update Restart Multi Account Request',\r\n  UpdateMultiSuccess: '[Users] Update Multi Success',\r\n}\r\n\r\nconst initialAccountState: IAccountState = {\r\n  accounts: [],\r\n  loading: false,\r\n  adding:false,\r\n  currentAccount:undefined\r\n}\r\n\r\nexport interface IAccountState {\r\n  accounts: AccountModel[]\r\n  loading: boolean\r\n  adding:boolean\r\n  currentAccount?:AccountModel\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-accounts', whitelist: [] },\r\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestAccounts: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: action.payload?.accounts || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n\r\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\r\n          if(item.username===action.payload?.account?.username){\r\n            return action.payload?.account\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remapAccounts,\r\n          loading: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      case actionTypes.DeleteVpsSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: state.accounts.filter((item: AccountModel) => {\r\n            if (action.payload?.username.indexOf(item.username)>=0)  {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccount: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            if(item.username===action.payload?.data?.username){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateRestartMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.accounts.map((item:AccountForm) => {\r\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\r\n            if(_item.username===item.username){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\r\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\r\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\r\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\r\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\r\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\r\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\r\n  checkedChange: (data:{username:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\r\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\r\n    const {data: accounts} = yield getListAccount()\r\n    yield put(actions.fulfillAccounts(accounts.accounts))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    //console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: account} = yield updateAccount(param.payload.account)\r\n    console.log(\"------update account res-----\",account.account)\r\n    yield put(actions.updateSuccess(account.account))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.vps\r\n      const { data: result } = yield deleteVps(payload)\r\n      if (result&&result.vps!==null) {\r\n        yield put(actions.deleteVpsSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateAccount(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateResetVPS(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\OrdersPage.tsx",["1722","1723"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n  const channel_prior: number = useSelector<RootState>(({ orders }) => orders.channel_prior, shallowEqual) as number || 0\r\n  const [channelPrior,setChannelPrior] =useState(channel_prior)\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orders }) => orders.currentOrder, shallowEqual) as OrderModel || undefined\r\n  useEffect(() => {\r\n    //dispatch(actions.requestSetting())\r\n    //dispatch(actions.requestGroups())\r\n    dispatch(actions.requestOrders())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setChannelPrior(channel_prior)\r\n  }, [channel_prior])\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12'>\r\n          <OrderList orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.channel_id} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\utils\\ApiHelper.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\UserList.tsx",["1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1751","1752","1753","1754","1755"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/users/models/Account'\r\n\r\nimport UserItem from './components/UserItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountModel[]\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const isShowFixMulti = accounts.find((item) => {\r\n    if (item.checked) {\r\n\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  useEffect(() => {\r\n  },[]);\r\n\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách User</span>\r\n              <span  className='ml-2 fw-bold fs-7'>({accounts.length} user)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n\r\n                <th className='w-5px'>STT</th>\r\n                <th className='min-w-100px '>Username</th>\r\n                <th className='min-w-100px'>Role</th>\r\n                <th className='min-w-100px'>Balance</th>\r\n                <th className='min-w-100px'>Rate</th>\r\n                <th className='min-w-100px'>Discount</th>\r\n                <th className='min-w-100px'>MaxOrder</th>\r\n                <th className='min-w-100px'>Vip</th>\r\n                <th className='min-w-100px'>Note</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\r\n                      return <UserItem key={item.id+index} item={item} index={index} />\r\n                    })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\nexport  { UserList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\UserList.tsx",["1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/accounts/models/Account'\r\n\r\nimport UserItem from './components/UserItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport EditMulti from \"./modals/EditMulti\";\r\nimport RestartMulti from \"./modals/RestartMulti\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport {randomInt} from \"crypto\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountModel[]\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const [statusVNTrue, setstatusVNTrue] = useState(0)\r\n  const [Checked, setChecked] = useState(false)\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const [list_vps,setList_VPS]=useState([{\r\n    id:0,\r\n    vps:\"\",\r\n  },])\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n\r\n  var icount=0;\r\n  const isShowFixMulti = accounts.find((item) => {\r\n\r\n    if (item.checked) {\r\n      icount=icount+1\r\n    }\r\n    if(icount>=2){\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  let total_waring=0;\r\n  let total_thread=0;\r\n  let total_view24h=0;\r\n  let total_thread_set=0;\r\n  let total_tool_warning=0;\r\n  let [totalvps, setTotalVps] = useState(0)\r\n  let [totaldvpsshow, setTotalVpsShow] = useState(0)\r\n  for(let i=0;i<accounts.length;i++){\r\n    if(parseInt(accounts[i].timegettask)>30){\r\n      total_tool_warning=total_tool_warning+1;\r\n    }\r\n    if((Date.now()-accounts[i].timecheck)/1000/60>6){\r\n      total_waring=total_waring+1;\r\n    }else{\r\n      total_thread_set=total_thread_set+(accounts[i].threads);\r\n      total_thread=total_thread+accounts[i].total;\r\n    }\r\n    total_view24h=total_view24h+accounts[i].view24h;\r\n  }\r\n  async function getcounts(){\r\n    const requestUrl = API_URL+'accview/countgmails';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {counts}=responseJson;\r\n    console.log(counts);\r\n    settotal_user(counts);\r\n  }\r\n  async function getcountsbyendtrial(){\r\n    const requestUrl = API_URL+'accview/sumgmails';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {counts}=responseJson;\r\n    console.log(counts);\r\n    settotal_user_endtrial(counts);\r\n  }\r\n  async function changer_vn(){\r\n    const requestUrl = API_URL+'vps/changer_vn';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {status}=responseJson;\r\n    if(parseInt(status)>0){\r\n      alert('Thay thành công '+status+' tài khoản mới!')\r\n    }else{\r\n      alert('Thay tài khoản thất bại!')\r\n    }\r\n  }\r\n  async function changer_kr(){\r\n    const requestUrl = API_URL+'vps/changer_kr';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {status}=responseJson;\r\n    if(parseInt(status)>0){\r\n      alert('Thay thành công '+status+' tài khoản mới!')\r\n    }else{\r\n      alert('Thay tài khoản thất bại!')\r\n    }\r\n  }\r\n  async function changer_us(){\r\n    const requestUrl = API_URL+'vps/changer_us';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {status}=responseJson;\r\n    if(parseInt(status)>0){\r\n      alert('Thay thành công '+status+' tài khoản mới!')\r\n    }else{\r\n      alert('Thay tài khoản thất bại!')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(accounts.length!=0){\r\n      setLoading(false)\r\n    }\r\n    console.log(list_vps)\r\n    setList_VPS([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldvpsshow=totalvps\r\n    setTotalVpsShow(totaldvpsshow)\r\n    setTotalVps(0)\r\n    if(useEff<=1){\r\n      getcountsbyendtrial();\r\n      getcounts();\r\n    }\r\n\r\n  },[keytrue,key,keystatus,vpstpye,accounts.length,,]);\r\n\r\n  const clickResetAllVN = async () => {\r\n    if (window.confirm(\"Bạn chắc chắn muốn thay acc VN?\") == true) {\r\n      await changer_vn()\r\n    }\r\n  }\r\n  const clickResetAllUS = async () => {\r\n    if (window.confirm(\"Bạn chắc chắn muốn thay acc US?\") == true) {\r\n      await changer_us()\r\n    }\r\n  }\r\n  const clickResetAllKR = async () => {\r\n    if (window.confirm(\"Bạn chắc chắn muốn thay acc KR?\") == true) {\r\n      await changer_kr()\r\n    }\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    accounts.forEach(item=>{\r\n      const myElem = list_vps.find(value => value.vps===item.vps)\r\n      if(myElem && item.checked){\r\n        arr.push(item.vps)\r\n      }\r\n    })\r\n    const vps=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" VPS!\") == true) {\r\n      dispatch(actions.deleteVpsRequest(vps))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-8 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>{totaldvpsshow} vps </span>\r\n              <span className='badge badge-warning' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_waring} vps warning</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_tool_warning} tool warning</span>\r\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_thread} thread</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_thread_set} thread set</span>\r\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_user_endtrial} sum user</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_user} user</span>\r\n              <span className='badge badge-danger' style={{ color:'white',margin:4,backgroundColor:\"#e57624\"}}>{total_user_endtrial-total_user} user die</span>\r\n            </div>\r\n            <div className=\"col-lg-4 col-sm-12 text-right\">\r\n              {\r\n                <button style={{backgroundColor:\"rgba(222,58,58,0.97)\"}}\r\n                        onClick={() => {\r\n                          clickResetAllVN()\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Change VN\r\n                </button>}\r\n              {\r\n                <button style={{margin:5,backgroundColor:\"rgba(34,126,231,0.97)\"}}\r\n                    onClick={() => {\r\n                      clickResetAllUS()\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Change US\r\n                </button>}\r\n              {\r\n                <button style={{margin:5,backgroundColor:\"rgba(3,37,80,0.97)\"}}\r\n                        onClick={() => {\r\n                          clickResetAllKR()\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Change KR\r\n                </button>}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              {isShowFixMulti && (\r\n                  <div>\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowEditMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Chỉnh sửa\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowRestartMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Restart\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={()=>clickDeleteHandler()}\r\n                            className='btn btn-light'>\r\n                      Xóa VPS\r\n                    </button>\r\n                  </div>\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setKeyStatus(e.target.value)\r\n                                             setKeyStatusTrue(1)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={keystatus}\r\n              >\r\n                <option key={'all'} value={'all'}>All</option>\r\n                <option key={'die'} value={'die'}>Die</option>\r\n                <option key={'live'} value={'live'}>Live</option>\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='w-5px'>STT</th>\r\n                <th className='min-w-100px '>VPS</th>\r\n                <th className='min-w-100px'>VPS Option</th>\r\n                <th className='min-w-100px'>Trạng thái</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\r\n                    console.log(keystatustrue,keytrue)\r\n                    if (keystatustrue==0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <UserItem key={item.id} item={item} index={index} />\r\n                    }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatustrue==0&&keytrue==1){\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <UserItem key={item.id} item={item} index={index} />\r\n                    }else if(keystatustrue==1&&keytrue==0){\r\n                        if(keystatus.indexOf(\"all\")>=0){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }\r\n                    }else if(keystatustrue==1&&keytrue==1){\r\n                      if(keystatus.indexOf(\"all\")>=0&&(item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }\r\n                    }\r\n                  })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      <EditMulti\r\n          list_vps={list_vps}\r\n          show={showEditMulti}\r\n          close={() => {\r\n            setShowEditMulti(false)\r\n          }}\r\n      />\r\n      <RestartMulti\r\n          list_vps={list_vps}\r\n          show={showRestartMulti}\r\n          close={() => {\r\n            setShowRestartMulti(false)\r\n          }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport  { UserList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\UserList.tsx",["1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/setting/models/Account'\r\n\r\nimport UserItem from './components/UserItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountModel[]\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [statusTrue, setstatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const isShowFixMulti = accounts.find((item) => {\r\n    if (item.checked) {\r\n\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  async function getcountsbyendtrial(){\r\n    const requestUrl = API_URL+'vps/DellALL';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {status}=responseJson;\r\n    if(status===\"true\"){\r\n      setstatusTrue(1)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n  },[]);\r\n\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Cài đặt hệ thống</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-100px'>Bonus</th>\r\n                <th className='min-w-100px'>MaxorderVN</th>\r\n                <th className='min-w-100px'>MaxorderUS</th>\r\n                <th className='min-w-100px'>MaxR BuffH VN</th>\r\n                <th className='min-w-100px'>MaxR BuffH US</th>\r\n                <th className='min-w-100px'>ThreadMin</th>\r\n                <th style={{color:\"red\"}} className='min-w-100px'>Redirect BuffH VN</th>\r\n                <th style={{color:\"red\"}} className='min-w-100px'>Redirect BuffH US</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\r\n                      return <UserItem key={item.id+index} item={item} index={index} />\r\n                    })\r\n              }\r\n            </tbody>\r\n            <br/>\r\n            {/* end::Table body */}\r\n          </table>\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\nexport  { UserList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\OrderList.tsx",["1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","1867","1868","1869","1870","1871","1872","1873","1874","1875","1876","1877","1878","1879","1880","1881","1882","1883","1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\n\r\n\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    videoid: '',\r\n    timebuff:0,\r\n    timebuffhtotal: 0,\r\n    viewtotal:0,\r\n    viewstart:0,\r\n    viewend:0,\r\n    insertdate: \"\",\r\n    enddate: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    price:0,\r\n\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [totalmoneyKR, setTotalMoneyKR] = useState(0)\r\n  let [totalmoneyKRshow, setTotalMoneyKRShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n  let [totalKr, setTotalKr] = useState(0)\r\n  let [totalKrshow, setTotalKrShow] = useState(0)\r\n\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalKrshow=totalKr\r\n    setTotalKrShow(totalKrshow)\r\n    setTotalKr(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totalmoneyKRshow=totalmoneyKR\r\n    setTotalMoneyKRShow(totalmoneyKRshow)\r\n    setTotalMoneyKR(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginTop:10,marginBottom:10,marginRight:5,marginLeft:5}}>\r\n              <div className=\"col-lg-5 col-sm-12 c-order__header\">\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{isMobile==false?(\"Hoàn thành \" +totaldordershow):\"Total Done\"} <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{format1((totalVnshow))} </span><span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{format1((totalUsshow))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{format1((totalKrshow))}</span></span>\r\n                </span>\r\n                </p>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Tổng tiền \" +(totalmoneyshow.toFixed(0))):\"\"}$ <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyshow-totalmoneyUSshow-totalmoneyKRshow).toFixed(0)}$ </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyUSshow.toFixed(0))}$</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyKRshow.toFixed(0))}$</span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <div style={{float:\"right\",fontWeight:\"bold\"}}>\r\n                  <DatePicker\r\n\r\n                      value={startDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\r\n                      }\r\n                      }\r\n\r\n                  />\r\n                  <DatePicker\r\n                      value={endDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{\r\n                        setEndDate(date)\r\n                      }\r\n                      }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)}\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {setKeyTrue(1)\r\n                          }}\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div style={{width:\"40%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Export\r\n                </button>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n\r\n                </Input>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-google'\r\n                >\r\n                  Đối soát\r\n                </button>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {\r\n                          setShowAddManual(true)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Tra cứu nhanh\r\n                </button>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Check</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keytrue==0&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)&&keytrue==0&&keyusertrue==0&&keydate==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n              {/* end::Table body */}\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\OrderList.tsx",["1899","1900","1901","1902","1903","1904","1905","1906","1907","1908","1909","1910","1911","1912","1913","1914","1915","1916","1917","1918","1919","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport DatePicker from 'react-date-picker';\r\nimport {DateRangePicker} from \"rsuite\";\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    if(n<0){\r\n      n=-n;\r\n    }\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    balance:0,\r\n    time:\"\",\r\n    totalbalance:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    service:0\r\n  }])\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const [startDate, setStartDate] = useState(today);\r\n  const [endDate, setEndDate] = useState(today);\r\n\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())+(startDate.getTimezoneOffset()*60*1000)):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(1)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())+(endDate.getTimezoneOffset()*60*1000)):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(1)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totaldordervn, setTotalOrderVN] = useState(0)\r\n  let [totaldorderkr, setTotalOrderKR] = useState(0)\r\n  let [totaldorderVnshow, setTotalOrderVNShow] = useState(0)\r\n  let [totaldorderKrshow, setTotalOrderKRShow] = useState(0)\r\n  let [totaladd, setTotalAdd] = useState(0)\r\n  let [totaladdshow, setTotalAddShow] = useState(0)\r\n  let [totaladdvn, setTotalAddVN] = useState(0)\r\n  let [totaladdkr, setTotalAddKR] = useState(0)\r\n  let [totaladdvnshow, setTotalAddVNShow] = useState(0)\r\n  let [totaladdkrshow, setTotalAddKRShow] = useState(0)\r\n  let [totalsub, setTotalSub] = useState(0)\r\n  let [totalsubshow, setTotalSubShow] = useState(0)\r\n  let [totalsubvn, setTotalSubVN] = useState(0)\r\n  let [totalsubkr, setTotalSubKR] = useState(0)\r\n  let [totalsubvnshow, setTotalSubVNShow] = useState(0)\r\n  let [totalsubkrshow, setTotalSubKRShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n  const role: string =\r\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaladdvnshow=totaladdvn\r\n    setTotalAddVNShow(totaladdvnshow)\r\n    setTotalAddVN(0)\r\n\r\n    totaladdkrshow=totaladdkr\r\n    setTotalAddKRShow(totaladdkrshow)\r\n    setTotalAddKR(0)\r\n\r\n    totalsubvnshow=totalsubvn\r\n    setTotalSubVNShow(totalsubvnshow)\r\n    setTotalSubVN(0)\r\n\r\n    totalsubkrshow=totalsubkr\r\n    setTotalSubKRShow(totalsubkrshow)\r\n    setTotalSubKR(0)\r\n\r\n\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n      }\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    totaldorder=0\r\n    totaldorderVnshow=totaldordervn\r\n    setTotalOrderVNShow(totaldorderVnshow)\r\n    totaldordervn=0\r\n    totaldorderKrshow=totaldorderkr\r\n    setTotalOrderKRShow(totaldorderKrshow)\r\n    totaldorderkr=0\r\n    totaladdshow=totaladd\r\n    setTotalAddShow(totaladdshow)\r\n    totaladd=0\r\n    totalsubshow=totalsub\r\n    setTotalSubShow(totalsubshow)\r\n    totalsub=0\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder()\r\n    }\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keydate,keydatestart,keydateend,startDate,endDate,keyuser,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\r\n              <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{isMobile==false?( \"Giao dịch \"+totaldordershow ):\"Total\"}  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{format1((totaldorderVnshow))} </span><span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{format1((totaldordershow-totaldorderVnshow-totaldorderKrshow))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{format1((totaldorderKrshow))}</span></span>\r\n                </span>\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\",marginLeft:5}}>{isMobile==false?\"Doanh thu \":\"Revenue \"}\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgba(255,255,255,0.97)\",marginLeft:2,padding:3}}>{(-totalsubshow-totaladdshow).toFixed(-totalsubshow-totaladdshow==0?0:2)}$</span></span>\r\n                </span>\r\n\r\n              </p>\r\n              <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(252,251,251,0.68)\",marginLeft:5,marginTop:3}}>{isMobile==false?\"Tổng chi \":\"\"}<span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(129,207,253,0.66)\",marginLeft:2,padding:3}}>{(-totalsubshow).toFixed(totalsubshow==0?0:2)}$</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(-totalsubvnshow).toFixed(totalsubvnshow==0?0:2)}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{((-totalsubshow+totalsubvnshow+totalsubkrshow).toFixed((-totalsubshow+totalsubvnshow+totalsubkrshow)==0?0:2))}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{(-totalsubkrshow.toFixed(totalsubkrshow==0?0:2))}</span>\r\n                  </span>\r\n                <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(248,248,248,0.97)\",marginLeft:5,marginTop:3}}>{isMobile==false?\"Tổng hoàn \":\"\"}<span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(250,185,103,0.97)\",marginLeft:2,padding:3}}>{(totaladdshow).toFixed(totaladdshow==0?0:2)}$</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totaladdvnshow).toFixed(totaladdvnshow==0?0:2)}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{((totaladdshow-totaladdvnshow-totaladdkrshow).toFixed((totaladdshow-totaladdvnshow-totaladdkrshow)==0?0:2))}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{(totaladdkrshow.toFixed(totaladdkrshow==0?0:2))}</span>\r\n                  </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",fontWeight:\"bold\",margin:10}}>\r\n            <div style={{width:\"70%\"}}>\r\n              <div style={{float:\"left\",marginRight:10}}>\r\n                <DatePicker\r\n                    value={startDate}\r\n                    onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\r\n                    }\r\n                    }\r\n\r\n                />\r\n                <DatePicker\r\n                    value={endDate}\r\n                    onChange={(date: React.SetStateAction<Date>) =>{\r\n                      setEndDate(date)}\r\n                    }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"30%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Export\r\n              </button>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                     onChange={(e) => {\r\n                       setKeyUser(e.target.value)\r\n                       setKeyUserTrue(1)\r\n                     }}\r\n                     className=\"form-control form-control-solid\"\r\n                     type=\"select\"\r\n                     value={keyuser}\r\n              >\r\n                {\r\n                  list_user.map((item, index) => {\r\n                    return(\r\n                        <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                          {item.user}</option>)\r\n                  })\r\n                }\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='card-body py-3'>\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Balance Change</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Balance</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Service</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {orders &&\r\n                orders.map((order: OrderModel, index: number) => {\r\n                  if (keyusertrue==0&&keydate==0) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      if(order.balance>0){\r\n                        totaladd=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totaladdkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totaladdvn=order.balance\r\n                        }\r\n\r\n                      }else{\r\n                        totalsub=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totalsubkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totalsubvn=order.balance\r\n                        }\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      if(order.balance>0){\r\n                        totaladd=totaladd+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totaladdkr=order.balance+totaladdkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totaladdvn=order.balance+totaladdvn\r\n                        }\r\n                      }else{\r\n                        totalsub=totalsub+order.balance\r\n                        console.log(totalsubvn)\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totalsubkr=order.balance+totalsubkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totalsubvn=order.balance+totalsubvn\r\n                        }\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      balance: order.balance,\r\n                      totalbalance:order.totalbalance,\r\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      service:order.service\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.id+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keydate==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      if(order.balance>0){\r\n                        totaladd=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totaladdkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totaladdvn=order.balance\r\n                        }\r\n\r\n                      }else{\r\n                        totalsub=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totalsubkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totalsubvn=order.balance\r\n                        }\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      if(order.balance>0){\r\n                        totaladd=totaladd+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totaladdkr=order.balance+totaladdkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totaladdvn=order.balance+totaladdvn\r\n                        }\r\n                      }else{\r\n                        totalsub=totalsub+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totalsubkr=order.balance+totalsubkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totalsubvn=order.balance+totalsubvn\r\n                        }\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      balance: order.balance,\r\n                      totalbalance:order.totalbalance,\r\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      service:order.service\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.id+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((keydatestart<=order.time&&order.time<=keydateend+24*60*60*1000-1)&&keyusertrue==0&&keydate==1){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      if(order.balance>0){\r\n                        totaladd=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totaladdkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totaladdvn=order.balance\r\n                        }\r\n\r\n                      }else{\r\n                        totalsub=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totalsubkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totalsubvn=order.balance\r\n                        }\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      if(order.balance>0){\r\n                        totaladd=totaladd+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totaladdkr=order.balance+totaladdkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totaladdvn=order.balance+totaladdvn\r\n                        }\r\n                      }else{\r\n                        totalsub=totalsub+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totalsubkr=order.balance+totalsubkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totalsubvn=order.balance+totalsubvn\r\n                        }\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      balance: order.balance,\r\n                      totalbalance:order.totalbalance,\r\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      service:order.service\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.id+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keydate==1&&\r\n                      (keydatestart<=order.time&&order.time<=keydateend+24*60*60*1000-1)\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      if(order.balance>0){\r\n                        totaladd=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totaladdkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totaladdvn=order.balance\r\n                        }\r\n\r\n                      }else{\r\n                        totalsub=order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1\r\n                          totalsubkr=order.balance\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1\r\n                          totalsubvn=order.balance\r\n                        }\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      if(order.balance>0){\r\n                        totaladd=totaladd+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totaladdkr=order.balance+totaladdkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totaladdvn=order.balance+totaladdvn\r\n                        }\r\n                      }else{\r\n                        totalsub=totalsub+order.balance\r\n                        if(order.geo.indexOf(\"kr\")>=0){\r\n                          totaldorderkr=1+totaldorderkr\r\n                          totalsubkr=order.balance+totalsubkr\r\n                        }else if(order.geo.indexOf(\"vn\")>=0){\r\n                          totaldordervn=1+totaldordervn\r\n                          totalsubvn=order.balance+totalsubvn\r\n                        }\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      balance: order.balance,\r\n                      totalbalance:order.totalbalance,\r\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      service:order.service\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.id+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                    return null\r\n                })}\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\OrderList.tsx",["1981","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\n\r\n\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    orderid:0,\r\n    videoid: '',\r\n    timebuff:0,\r\n    timebuffhtotal: 0,\r\n    viewtotal:0,\r\n    viewstart:0,\r\n    viewend:0,\r\n    insertdate: \"\",\r\n    enddate: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    price:0,\r\n\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [totalmoneyKR, setTotalMoneyKR] = useState(0)\r\n  let [totalmoneyKRshow, setTotalMoneyKRShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n  let [totalKr, setTotalKr] = useState(0)\r\n  let [totalKrshow, setTotalKrShow] = useState(0)\r\n\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    orderid:0,\r\n  },])\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n      console.log(list_user)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalKrshow=totalKr\r\n    setTotalKrShow(totalKrshow)\r\n    setTotalKr(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totalmoneyKRshow=totalmoneyKR\r\n    setTotalMoneyKRShow(totalmoneyKRshow)\r\n    setTotalMoneyKR(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-5 col-sm-12 c-order__header\">\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{isMobile==false?(\"Hoàn thành \" +totaldordershow):\"Total Done\"} <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{format1((totalVnshow))} </span><span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{format1((totalUsshow))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{format1((totalKrshow))}</span></span>\r\n                </span>\r\n                </p>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Tổng tiền \" +(totalmoneyshow.toFixed(0))):\"\"}$ <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyshow-totalmoneyUSshow-totalmoneyKRshow).toFixed(0)}$ </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyUSshow.toFixed(0))}$</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyKRshow.toFixed(0))}$</span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <div style={{float:\"right\",fontWeight:\"bold\"}}>\r\n                  <DatePicker\r\n\r\n                      value={startDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\r\n                      }\r\n                      }\r\n\r\n                  />\r\n                  <DatePicker\r\n                      value={endDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{\r\n                        setEndDate(date)\r\n                      }\r\n                      }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)}\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {setKeyTrue(1)\r\n                          }}\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div style={{width:\"40%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Export\r\n                </button>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n\r\n                </Input>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-google'\r\n                >\r\n                  Đối soát\r\n                </button>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {\r\n                          setShowAddManual(true)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Tra cứu nhanh\r\n                </button>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    console.log(order.user)\r\n                    if (keyusertrue==0&&keytrue==0&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        orderid:order.orderid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)&&keytrue==0&&keyusertrue==0&&keydate==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        orderid:order.orderid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        orderid:order.orderid,\r\n                        id: totaldorder,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalUs=1+totalUs\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalKr=1+totalKr\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        videoid: order.videoid,\r\n                        timebuff:order.timebuff,\r\n                        viewtotal:order.viewtotal,\r\n                        timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                        viewstart:order.viewstart,\r\n                        viewend:order.viewend,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n              {/* end::Table body */}\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_orderhistory}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrderList.tsx",["2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label, Modal} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    orderid:0,\r\n    videoid: '',\r\n    timebuff:0,\r\n    timebuffhtotal: 0,\r\n    viewtotal:0,\r\n    viewstart:0,\r\n    viewend:0,\r\n    insertdate: \"\",\r\n    enddate: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    price:0,\r\n\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n  const [showManual, setShowManual] = useState(false)\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n  let[copy,setCopy] =useState(\"\")\r\n  let[copyShow,setCopyShow] =useState(\"\")\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n  let [copy_check,setcopy_check]=useState(\"1111111111\");\r\n  let role: string =\r\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  let [list_refund,setRefund]=useState([{\r\n    id:\"0000000000\",\r\n    reponse:\"\"\r\n\r\n  },])\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setcopy_check(randomString(10))\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    copy=\"\"\r\n    setCopy(\"\")\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const isShowCopy = orders.find((item) => {\r\n    if (item.status!=null) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const clickRefund100Check = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn refund \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.requestUpdate(orderarr,0,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n  const clickRefund100 = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"WARRING!!! \" +\r\n        \"Bạn chắc chắn muốn refund 100%  \"+arr.length+\" đơn(No check view)!\") == true) {\r\n      dispatch(actions.requestUpdate(orderarr,0,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickRefund50 = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"WARRING!!! \" +\r\n        \"Bạn chắc chắn muốn refund 50%  \"+arr.length+\" đơn(No check view)!\") == true) {\r\n      dispatch(actions.requestUpdate(orderarr,0,-1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickRefundNoCheckTime = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"WARRING!!! \" +\r\n        \"Bạn chắc chắn muốn refund \"+arr.length+\" đơn(No check time)!\") == true) {\r\n      dispatch(actions.requestUpdate(orderarr,1,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n  let  clickCopy = () => {\r\n    const arr:string[]=[]\r\n    copy=\"\"\r\n    setCopy(\"\")\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.status.length>0){\r\n        copy=copy+item.orderid.toString()+\" | \"+item.status+\"\\n\"\r\n      }\r\n      setCopy(copy)\r\n    })\r\n  }\r\n  //console.log(list_refund)\r\n  const clickRefund = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn refund phần thiếu cho \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.requestUpdate(orderarr,1,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n  \r\n  return (\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#ffffff\",backgroundColor:\"rgb(9,9,9)\"}}>Views Video Youtube</span> <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tìm thấy {totaldordershow}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{format1((totalVnshow))} </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{format1((totalUsshow))}</span> </span>\r\n              <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng chạy {format1(totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tổng tiền {totalmoneyshow.toFixed(3)}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{((totalmoneyshow-totalmoneyUSshow).toFixed(3))}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{(totalmoneyUSshow.toFixed(3))}$</span></span>\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-5 col-sm-12 text-right\">\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5,backgroundColor:\"rgba(213,143,51,0.97)\"}}\r\n                          onClick={() => {\r\n                            clickRefund()\r\n                          }}\r\n                          className='btn btn-google'\r\n                  >\r\n                    Refunds\r\n                  </button>\r\n              )}\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5,backgroundColor:\"rgba(20,122,178,0.66)\"}}\r\n                          onClick={() => {\r\n                            clickRefundNoCheckTime()\r\n                          }}\r\n                          className='btn btn-google'\r\n                  >\r\n                    Refunds No Check\r\n                  </button>\r\n              )}\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5}}\r\n                      onClick={() => {\r\n                        clickRefund100Check()\r\n                      }}\r\n                      className='btn btn-google'\r\n                  >\r\n                    Check & R100%\r\n                  </button>\r\n              )}\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5,backgroundColor:\"rgba(2,24,49,0.66)\"}}\r\n                          onClick={() => {\r\n                            clickRefund100()\r\n                          }}\r\n                          className='btn btn-google'\r\n                  >\r\n                    R100%\r\n                  </button>\r\n              )}\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5,backgroundColor:\"rgba(16,85,159,0.66)\"}}\r\n                          onClick={() => {\r\n                            clickRefund50()\r\n                          }}\r\n                          className='btn btn-google'\r\n                  >\r\n                    R50%\r\n                  </button>\r\n              )}\r\n              { isShowCopy && role === \"ROLE_ADMIN\"&&(\r\n                  <CopyToClipboard\r\n                      text={copy}\r\n                      onCopy={() => {clickCopy()}}>\r\n                    <span className='btn btn-google' style={{backgroundColor:\"white\",color:\"black\"}}>{copy==\"\"?\"Copy Text\":\"Copied\"}</span>\r\n                  </CopyToClipboard>\r\n\r\n              )}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Export\r\n              </button>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                     onChange={(e) => {\r\n                       setKeyUser(e.target.value)\r\n                       setKeyUserTrue(1)\r\n                     }}\r\n                     className=\"form-control form-control-solid\"\r\n                     type=\"select\"\r\n                     value={keyuser}\r\n              >\r\n                {\r\n                  list_user.map((item, index) => {\r\n                    return(\r\n                        <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                          {item.user}</option>)\r\n                  })\r\n                }\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-google'\r\n              >\r\n                Đối soát\r\n              </button>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {\r\n                        setShowAddManual(true)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Tra cứu nhanh\r\n              </button>\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='card-body py-3'>\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span  style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                <th className='min-w-15px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Check</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {Array.isArray(orders)&&\r\n                orders.map((order: OrderModel, index: number) => {\r\n                  if (keyusertrue==0&&keytrue==0) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                      &&keytrue==1&&keyusertrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(keytrue==0&&keyusertrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                      &&keytrue==1&&keyusertrue==0\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                      &&keytrue==1&&keyusertrue==1) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                      &&keytrue==1&&keyusertrue==1) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                    return null\r\n                })}\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      {showManual && (\r\n        <AddManualModal\r\n          show={true}\r\n          close={() => {\r\n            setShowManual(false)\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <EditMulti\r\n        show={showEditMulti}\r\n        close={() => {\r\n          setShowEditMulti(false)\r\n        }}\r\n      />\r\n      <AddManualModal\r\n        show={showAddManual}\r\n        close={() => {\r\n          setShowAddManual(false)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\OrderList.tsx",["2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209","2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223","2224","2225","2226","2227","2228","2229","2230","2231","2232","2233","2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimeorderus, setTotalTimeOrderUs] = useState(0)\r\n  let [totaltimeorderusshow, setTotalTimeOrderUsShow] = useState(0)\r\n  let [totaltimeorderkr, setTotalTimeOrderKr] = useState(0)\r\n  let [totaltimeorderkrshow, setTotalTimeOrderKrShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaltimebuffedorderus, setTotalTimeBuffedOrderUs] = useState(0)\r\n  let [totaltimebuffedorderusshow, setTotalTimeBuffedOrderUsShow] = useState(0)\r\n  let [totaltimebuffedorderkr, setTotalTimeBuffedOrderKr] = useState(0)\r\n  let [totaltimebuffedorderkrshow, setTotalTimeBuffedOrderKrShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [totalmoneyKR, setTotalMoneyKR] = useState(0)\r\n  let [totalmoneyKRshow, setTotalMoneyKRShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthreadusset, setTotalThreadUsSet] = useState(0)\r\n  let [totalthreadsetusshow, setTotalThreadSetUsShow] = useState(0)\r\n  let [totalthreadkrset, setTotalThreadKrSet] = useState(0)\r\n  let [totalthreadsetkrshow, setTotalThreadSetKrShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalthreadus, setTotalThreadUs] = useState(0)\r\n  let [totalthreadusshow, setTotalThreadUsShow] = useState(0)\r\n  let [totalthreadkr, setTotalThreadKr] = useState(0)\r\n  let [totalthreadkrshow, setTotalThreadKrShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n  let [totalKr, setTotalKr] = useState(0)\r\n  let [totalKrshow, setTotalKrShow] = useState(0)\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtime=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let summoneyKR=0;\r\n  let sumthreadset=0;\r\n  let sumthread=0;\r\n  let sumvn=0;\r\n  let sumkr=0;\r\n  let sumus=0;\r\n  let sumtimedone=0;\r\n  const arr:string[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    videoid:\"\",\r\n  },])\r\n  orders.forEach(item=>{\r\n    sumthreadset=sumthreadset +item.maxthreads;\r\n    sumthread=sumthread+item.total;\r\n    sumtime=sumtime+item.commenttotal;\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    sumtimedone=sumtimedone+Math.round(Number(item.commenttotal==null?0:item.commenttotal))\r\n    if(item.service>1000){\r\n      summoneyKR=summoneyKR+item.price\r\n      sumkr=sumkr+1;\r\n    }else if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n    }\r\n  })\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  let videos=''\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totaltimeorderusshow=totaltimeorderus\r\n    setTotalTimeOrderUsShow(totaltimeorderusshow)\r\n    totaltimeorderus=0\r\n    setTotalTimeOrderUs(0)\r\n\r\n    totaltimeorderkrshow=totaltimeorderkr\r\n    setTotalTimeOrderKrShow(totaltimeorderkrshow)\r\n    totaltimeorderkr=0\r\n    setTotalTimeOrderKr(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    console.log(\"Thread SET \"+totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadsetusshow=totalthreadusset\r\n    setTotalThreadSetUsShow(totalthreadsetusshow)\r\n    setTotalThreadUsSet(0)\r\n\r\n    totalthreadsetkrshow=totalthreadkrset\r\n    setTotalThreadSetKrShow(totalthreadsetkrshow)\r\n    setTotalThreadKrSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalthreadusshow=totalthreadus\r\n    setTotalThreadUsShow(totalthreadusshow)\r\n    setTotalThreadUs(0)\r\n\r\n    totalthreadkrshow=totalthreadkr\r\n    setTotalThreadKrShow(totalthreadkrshow)\r\n    setTotalThreadKr(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalKrshow=totalKr\r\n    setTotalKrShow(totalKrshow)\r\n    setTotalKr(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totalmoneyKRshow=totalmoneyKR\r\n    setTotalMoneyKRShow(totalmoneyKRshow)\r\n    setTotalMoneyKR(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n\r\n    totaltimebuffedorderusshow=totaltimebuffedorderus\r\n    setTotalTimeBuffedOrderUsShow(totaltimebuffedorderusshow)\r\n    totaltimebuffedorderus=0\r\n    setTotalTimeBuffedOrderUs(0)\r\n\r\n    totaltimebuffedorderkrshow=totaltimebuffedorderkr\r\n    setTotalTimeBuffedOrderKrShow(totaltimebuffedorderkrshow)\r\n    totaltimebuffedorderkr=0\r\n    setTotalTimeBuffedOrderKr(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickDeleteOrderDoneHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hoàn thành \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{isMobile==false?(\"Đang chạy \" +totaldordershow):\"Total Order\"} <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{format1((totalVnshow))} </span><span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{format1((totalUsshow))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{format1((totalKrshow))}</span></span>\r\n                </span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Tổng tiền \" +(totalmoneyshow.toFixed(2))):\"\"}$ <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyshow-totalmoneyUSshow-totalmoneyKRshow).toFixed(2)}$ </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyUSshow.toFixed(2))}$</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyKRshow.toFixed(2))}$</span>\r\n                  </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Luồng cấp \" + ((totalthreadsetshow>=1000?(format1((totalthreadsetshow/1000))+\"K \"):(format1((totalthreadsetshow)))))):\"Set\"} <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totalthreadsetshow-totalthreadsetusshow-totalthreadsetkrshow)<1000?format1((totalthreadsetshow-totalthreadsetusshow-totalthreadsetkrshow)):(format1((totalthreadsetshow-totalthreadsetusshow-totalthreadsetkrshow)/1000)+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totalthreadsetusshow<1000?format1((totalthreadsetusshow)):(format1((totalthreadsetusshow/1000))+\"K\")}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totalthreadsetkrshow<1000?format1((totalthreadsetkrshow)):(format1((totalthreadsetkrshow/1000))+\"K\")}</span>\r\n                  </span>\r\n\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Luồng chạy \" +((totalthreadshow)>=1000?(format1((totalthreadshow/1000))+\"K \"):(format1((totalthreadshow))))):\"Run\"} <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{totalthreadshow-totalthreadusshow-totalthreadkrshow<1000?format1((totalthreadshow-totalthreadusshow-totalthreadkrshow)):(format1((totalthreadshow-totalthreadusshow-totalthreadkrshow)/1000)+\"K\")} </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totalthreadusshow<1000?format1((totalthreadusshow)):(format1((totalthreadusshow/1000))+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totalthreadkrshow<1000?format1((totalthreadkrshow)):(format1((totalthreadkrshow/1000))+\"K\")}</span>\r\n                  </span>\r\n\r\n                  </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' >\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Tổng đặt \"+ ((totaltimeordershow)>=1000?(format1((totaltimeordershow/1000))+\"K \"):(format1((totaltimeordershow))))):\"Quantity\"} <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow<1000?format1((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)):(format1((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)/1000)+\"K\")} </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderusshow<1000?format1((totaltimeorderusshow)):(format1((totaltimeorderusshow/1000))+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderkrshow<1000?format1((totaltimeorderkrshow)):(format1((totaltimeorderkrshow/1000))+\"K\")}</span>\r\n                  </span>\r\n\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Còn tồn \"+ (((totaltimeordershow)-(totaltimebuffedordershow))>=1000?(format1(((totaltimeordershow)-(totaltimebuffedordershow))/1000)+\"K \"):(format1(((totaltimeordershow)-(totaltimebuffedordershow)))))):\"Remains\"} <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)-(totaltimebuffedordershow-totaltimebuffedorderusshow-totaltimebuffedorderkrshow))<1000?format1(((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)-(totaltimebuffedordershow-totaltimebuffedorderusshow-totaltimebuffedorderkrshow))):(format1(((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)-(totaltimebuffedordershow-totaltimebuffedorderusshow-totaltimebuffedorderkrshow))/1000)+\"K\")} </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderusshow-totaltimebuffedorderusshow<1000?format1((totaltimeorderusshow-totaltimebuffedorderusshow)):(format1((totaltimeorderusshow-totaltimebuffedorderusshow)/1000)+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderkrshow-totaltimebuffedorderkrshow<1000?format1((totaltimeorderkrshow-totaltimebuffedorderkrshow)):(format1((totaltimeorderkrshow-totaltimebuffedorderkrshow)/1000)+\"K\")}</span>\r\n                  </span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Sửa luồng\r\n                    </button>\r\n                )}\r\n\r\n                {isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickDeleteOrderDoneHandler()\r\n                            }}\r\n                            className='btn btn-light'\r\n                    >\r\n                      Hoàn thành\r\n                    </button>\r\n                )}\r\n                {role === \"ROLE_ADMIN111\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                   onClick={() => {\r\n                                                     setShowBhManual(true)\r\n                                                   }}\r\n                                                   className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n                {role === \"ROLE_ADMIN111\"&&<button\r\n                    onClick={() => {\r\n                      setShowAddManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm đơn\r\n                </button>}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={100} value={100}>\r\n                    {\"100\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                               //setKeyRate(keyrate)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>}\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.commenttotal==null?0:order.commenttotal))/order.commentorder*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && Math.round((Math.round(Number(order.commenttotal==null?0:order.commenttotal))/order.commentorder*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.commenttotal==null?0:order.commenttotal))/order.commentorder*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.commenttotal==null?0:order.commenttotal))/order.commentorder*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.commentorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.commentorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.commentorder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.commentorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.commenttotal==null?0:order.commenttotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.commentorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.commentorder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.commenttotal==null?0:order.commenttotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\OrderList.tsx",["2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\nimport CheckBhManualModal from \"./modals/CheckBhManualModal\";\r\nimport CheckBhVideoIdManualModal from \"./modals/CheckBhVideoIdManualModal\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showCheckBhManual, setShowCheckBhManual] = useState(false)\r\n  const [showCheckBhVideoIdManual, setShowCheckBhVideoIdManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtime=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let sumthreadset=0;\r\n  let sumthread=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n  let sumtimedone=0;\r\n  const arr:string[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    videoid:\"\",\r\n  },])\r\n  orders.forEach(item=>{\r\n    sumthreadset=sumthreadset +item.maxthreads;\r\n    sumthread=sumthread+item.total;\r\n    sumtime=sumtime+item.viewtotal;\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    sumtimedone=sumtimedone+Math.round(Number(item.viewtotal==null?0:item.viewtotal))\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n    }\r\n  })\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  let videos=''\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickDeleteOrderDoneHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hoàn thành \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Đang chạy {totaldordershow}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{format1((useEff<=1?sumvn:totalVnshow))} </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{format1((useEff<=1?sumvn:totalUsshow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Luồng cấp {format1((useEff<=1?sumthreadset:totalthreadsetshow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(241,133,133,0.97)\"}}>Luồng chạy {format1((useEff<=1?sumthread:totalthreadshow))}</span></span>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng đặt {format1((useEff<=1?sumtime:totaltimeordershow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(241,133,133,0.97)\"}}>Đã chạy {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(141,133,133,0.97)\"}}>Còn tồn {format1((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tổng tiền {useEff<=1?summoney.toFixed(3):totalmoneyshow.toFixed(3)}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{(useEff<=1?(summoney-summoneyUS).toFixed(3):(totalmoneyshow-totalmoneyUSshow).toFixed(3))}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{(useEff<=1?summoneyUS.toFixed(3):totalmoneyUSshow.toFixed(3))}$</span></span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Sửa luồng\r\n                    </button>\r\n                )}\r\n\r\n                {isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickDeleteOrderDoneHandler()\r\n                            }}\r\n                            className='btn btn-light'\r\n                    >\r\n                      Hoàn thành\r\n                    </button>\r\n                )}\r\n\r\n                {role === \"ROLE_ADMIN\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                onClick={() => {\r\n                                                  setShowCheckBhVideoIdManual(true)\r\n                                                }}\r\n                                                className='btn btn-success'\r\n                >Check BH\r\n                </button>}\r\n                {role === \"ROLE_ADMIN\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                onClick={() => {\r\n                                                  setShowCheckBhManual(true)\r\n                                                }}\r\n                                                className='btn btn-google'\r\n                >Check Hoàn Tiền\r\n                </button>}\r\n                {role === \"ROLE_ADMIN_Pending\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                        onClick={() => {\r\n                                                          setShowBhManual(true)\r\n                                                        }}\r\n                                                        className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={100} value={100}>\r\n                    {\"101\"}\r\n                  </option>\r\n                  <option key={104} value={104}>\r\n                    {\"104\"}\r\n                  </option>\r\n                  <option key={106} value={106}>\r\n                    {\"106\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN111'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                                onChange={(e) => {\r\n                                                  setKeyUser(e.target.value)\r\n                                                  setKeyUserTrue(1)\r\n                                                  //setKeyRate(keyrate)\r\n                                                }}\r\n                                                className=\"form-control form-control-solid\"\r\n                                                type=\"select\"\r\n                                                value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}}  className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>}\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                {role==\"ROLE_USER111\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n                <th   className='min-w-150px text-sm'>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n        <CheckBhManualModal\r\n            show={showCheckBhManual}\r\n            close={() => {\r\n              setShowCheckBhManual(false)\r\n            }}\r\n        />\r\n        <CheckBhVideoIdManualModal\r\n            show={showCheckBhVideoIdManual}\r\n            close={() => {\r\n              setShowCheckBhVideoIdManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\OrderList.tsx",["2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391","2392","2393","2394","2395","2396","2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    if(n>=0){\r\n      return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n      });\r\n    }else{\r\n      return 0;\r\n    }\r\n\r\n  }\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showManual, setShowManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimeorderus, setTotalTimeOrderUs] = useState(0)\r\n  let [totaltimeorderusshow, setTotalTimeOrderUsShow] = useState(0)\r\n  let [totaltimeorderkr, setTotalTimeOrderKr] = useState(0)\r\n  let [totaltimeorderkrshow, setTotalTimeOrderKrShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaltimebuffedorderus, setTotalTimeBuffedOrderUs] = useState(0)\r\n  let [totaltimebuffedorderusshow, setTotalTimeBuffedOrderUsShow] = useState(0)\r\n  let [totaltimebuffedorderkr, setTotalTimeBuffedOrderKr] = useState(0)\r\n  let [totaltimebuffedorderkrshow, setTotalTimeBuffedOrderKrShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [totalmoneyKR, setTotalMoneyKR] = useState(0)\r\n  let [totalmoneyKRshow, setTotalMoneyKRShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthreadusset, setTotalThreadUsSet] = useState(0)\r\n  let [totalthreadsetusshow, setTotalThreadSetUsShow] = useState(0)\r\n  let [totalthreadkrset, setTotalThreadKrSet] = useState(0)\r\n  let [totalthreadsetkrshow, setTotalThreadSetKrShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalthreadus, setTotalThreadUs] = useState(0)\r\n  let [totalthreadusshow, setTotalThreadUsShow] = useState(0)\r\n  let [totalthreadkr, setTotalThreadKr] = useState(0)\r\n  let [totalthreadkrshow, setTotalThreadKrShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n  let [totalKr, setTotalKr] = useState(0)\r\n  let [totalKrshow, setTotalKrShow] = useState(0)\r\n\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n\r\n  const arr:string[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    videoid:\"\",\r\n  },])\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  let videos=''\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totaltimeorderusshow=totaltimeorderus\r\n    setTotalTimeOrderUsShow(totaltimeorderusshow)\r\n    totaltimeorderus=0\r\n    setTotalTimeOrderUs(0)\r\n\r\n    totaltimeorderkrshow=totaltimeorderkr\r\n    setTotalTimeOrderKrShow(totaltimeorderkrshow)\r\n    totaltimeorderkr=0\r\n    setTotalTimeOrderKr(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    console.log(\"Thread SET \"+totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadsetusshow=totalthreadusset\r\n    setTotalThreadSetUsShow(totalthreadsetusshow)\r\n    setTotalThreadUsSet(0)\r\n\r\n    totalthreadsetkrshow=totalthreadkrset\r\n    setTotalThreadSetKrShow(totalthreadsetkrshow)\r\n    setTotalThreadKrSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalthreadusshow=totalthreadus\r\n    setTotalThreadUsShow(totalthreadusshow)\r\n    setTotalThreadUs(0)\r\n\r\n    totalthreadkrshow=totalthreadkr\r\n    setTotalThreadKrShow(totalthreadkrshow)\r\n    setTotalThreadKr(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalKrshow=totalKr\r\n    setTotalKrShow(totalKrshow)\r\n    setTotalKr(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totalmoneyKRshow=totalmoneyKR\r\n    setTotalMoneyKRShow(totalmoneyKRshow)\r\n    setTotalMoneyKR(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n\r\n    totaltimebuffedorderusshow=totaltimebuffedorderus\r\n    setTotalTimeBuffedOrderUsShow(totaltimebuffedorderusshow)\r\n    totaltimebuffedorderus=0\r\n    setTotalTimeBuffedOrderUs(0)\r\n\r\n    totaltimebuffedorderkrshow=totaltimebuffedorderkr\r\n    setTotalTimeBuffedOrderKrShow(totaltimebuffedorderkrshow)\r\n    totaltimebuffedorderkr=0\r\n    setTotalTimeBuffedOrderKr(0)\r\n\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickDeleteOrderDoneHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hoàn thành \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginTop:10,marginBottom:10,marginRight:5,marginLeft:5}}>\r\n             <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{isMobile==false?(\"Đang chạy \" +totaldordershow):\"Total Order\"} <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{format1((totalVnshow))} </span><span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{format1((totalUsshow))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{format1((totalKrshow))}</span></span>\r\n                </span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Tổng tiền \" +(totalmoneyshow.toFixed(0))):\"\"}$ <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyshow-totalmoneyUSshow-totalmoneyKRshow).toFixed(0)}$ </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyUSshow.toFixed(0))}$</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{(totalmoneyKRshow.toFixed(0))}$</span>\r\n                  </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Luồng cấp \" + ((totalthreadsetshow>=1000?(format1((totalthreadsetshow/1000))+\"K \"):(format1((totalthreadsetshow)))))):\"Set\"}\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{(totalthreadsetshow-totalthreadsetusshow-totalthreadsetkrshow)<1000?format1((totalthreadsetshow-totalthreadsetusshow-totalthreadsetkrshow)):(format1((totalthreadsetshow-totalthreadsetusshow-totalthreadsetkrshow)/1000)+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totalthreadsetusshow<1000?format1((totalthreadsetusshow)):(format1((totalthreadsetusshow/1000))+\"K\")}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totalthreadsetkrshow<1000?format1((totalthreadsetkrshow)):(format1((totalthreadsetkrshow/1000))+\"K\")}</span>\r\n                  </span>\r\n\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Luồng chạy \" +((totalthreadshow)>=1000?(format1((totalthreadshow/1000))+\"K \"):(format1((totalthreadshow))))):\"Run\"}\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{totalthreadshow-totalthreadusshow-totalthreadkrshow<1000?format1((totalthreadshow-totalthreadusshow-totalthreadkrshow)):(format1((totalthreadshow-totalthreadusshow-totalthreadkrshow)/1000)+\"K\")} </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totalthreadusshow<1000?format1((totalthreadusshow)):(format1((totalthreadusshow/1000))+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totalthreadkrshow<1000?format1((totalthreadkrshow)):(format1((totalthreadkrshow/1000))+\"K\")}</span>\r\n                  </span>\r\n\r\n                  </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' >\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Tổng đặt \"+ ((totaltimeordershow)>=1000?(format1((totaltimeordershow/1000))+\"K \"):(format1((totaltimeordershow))))):\"Quantity\"}\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow<1000?format1((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)):(format1((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)/1000)+\"K\")} </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderusshow<1000?format1((totaltimeorderusshow)):(format1((totaltimeorderusshow/1000))+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderkrshow<1000?format1((totaltimeorderkrshow)):(format1((totaltimeorderkrshow/1000))+\"K\")}</span>\r\n                  </span>\r\n\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695c\",marginLeft:5,marginTop:3}}>{isMobile==false?(\"Còn tồn \"+ (((totaltimeordershow)-(totaltimebuffedordershow))>=1000?(format1(((totaltimeordershow)-(totaltimebuffedordershow))/1000)+\"K \"):(format1(((totaltimeordershow)-(totaltimebuffedordershow)))))):\"Remains\"}\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginLeft:2,padding:3}}>{((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)-(totaltimebuffedordershow-totaltimebuffedorderusshow-totaltimebuffedorderkrshow))<1000?format1(((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)-(totaltimebuffedordershow-totaltimebuffedorderusshow-totaltimebuffedorderkrshow))):(format1(((totaltimeordershow-totaltimeorderusshow-totaltimeorderkrshow)-(totaltimebuffedordershow-totaltimebuffedorderusshow-totaltimebuffedorderkrshow))/1000)+\"K\")} </span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderusshow-totaltimebuffedorderusshow<1000?format1((totaltimeorderusshow-totaltimebuffedorderusshow)):(format1((totaltimeorderusshow-totaltimebuffedorderusshow)/1000)+\"K\")}</span>\r\n                    <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginLeft:2,padding:3}}>{totaltimeorderkrshow-totaltimebuffedorderkrshow<1000?format1((totaltimeorderkrshow-totaltimebuffedorderkrshow)):(format1((totaltimeorderkrshow-totaltimebuffedorderkrshow)/1000)+\"K\")}</span>\r\n                  </span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Sửa luồng\r\n                    </button>\r\n                )}\r\n\r\n                {isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickDeleteOrderDoneHandler()\r\n                            }}\r\n                            className='btn btn-light'\r\n                    >\r\n                      Hoàn thành\r\n                    </button>\r\n                )}\r\n                {role === \"ROLE_ADMIN111\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                   onClick={() => {\r\n                                                     setShowBhManual(true)\r\n                                                   }}\r\n                                                   className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n                <button\r\n                    onClick={() => {\r\n                      setShowAddManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm video\r\n                </button>\r\n                <button style={{margin:5,backgroundColor:\"#da6f6f\"}}\r\n                    onClick={() => {\r\n                      setShowManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm channel ID\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={101} value={101}>\r\n                    {\"101\"}\r\n                  </option>\r\n                  <option key={104} value={104}>\r\n                    {\"104\"}\r\n                  </option>\r\n                  <option key={106} value={106}>\r\n                    {\"106\"}\r\n                  </option>\r\n                  <option key={110} value={110}>\r\n                    {\"110\"}\r\n                  </option>\r\n                  <option key={120} value={120}>\r\n                    {\"120\"}\r\n                  </option>\r\n                  <option key={130} value={130}>\r\n                    {\"130\"}\r\n                  </option>\r\n                  <option key={140} value={140}>\r\n                    {\"140\"}\r\n                  </option>\r\n                  <option key={150} value={150}>\r\n                    {\"150\"}\r\n                  </option>\r\n                  <option key={160} value={160}>\r\n                    {\"160\"}\r\n                  </option>\r\n                  <option key={170} value={170}>\r\n                    {\"170\"}\r\n                  </option>\r\n                  <option key={180} value={180}>\r\n                    {\"180\"}\r\n                  </option>\r\n                  <option key={190} value={190}>\r\n                    {\"190\"}\r\n                  </option>\r\n                  <option key={200} value={200}>\r\n                    {\"200\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                               //setKeyRate(keyrate)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>}\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n                <th   className='min-w-150px text-sm'>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || key.indexOf(order.geo)>=0  ||  order.note.indexOf(key)>=0 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 ||  order.note.indexOf(key)>=0  || key.indexOf(order.geo)>=0 || key.indexOf(order.orderid.toString()) >=0|| order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(order.geo)>=0 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(order.geo)>=0 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.vieworder\r\n                          totaltimebuffedorderus=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=order.price\r\n                          totalKr=1\r\n                          totalthreadkr=order.total\r\n                          totalthreadkrset=order.maxthreads\r\n                          totaltimeorderkr=order.vieworder\r\n                          totaltimebuffedorderkr=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.geo.indexOf(\"vn\")>=0){\r\n                          totalvn=1+totalvn\r\n                        }else if(order.geo.indexOf(\"us\")>=0){\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.vieworder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }else if(order.geo.indexOf(\"kr\")>=0){\r\n                          totalmoneyKR=totalmoneyKR+order.price\r\n                          totalKr=1+totalKr\r\n                          totalthreadkr=totalthreadkr+order.total\r\n                          totalthreadkrset=totalthreadkrset+order.maxthreads\r\n                          totaltimeorderkr=totaltimeorderkr+order.vieworder\r\n                          totaltimebuffedorderkr=totaltimebuffedorderkr+Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <AddModal\r\n            show={showManual}\r\n            close={() => {\r\n              setShowManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\OrderList.tsx",["2420","2421","2422","2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434","2435","2436","2437","2438","2439","2440","2441","2442","2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464","2465","2466","2467","2468","2469","2470","2471","2472","2473","2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\nimport {updateOrderCheck} from \"./redux/OrdersCRUD\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtime=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let sumthreadset=0;\r\n  let sumthread=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n  let sumtimedone=0;\r\n  const arr:string[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    videoid:\"\",\r\n  },])\r\n  orders.forEach(item=>{\r\n    sumthreadset=sumthreadset +item.maxthreads;\r\n    sumthread=sumthread+item.total;\r\n    sumtime=sumtime+item.viewtotal;\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    sumtimedone=sumtimedone+Math.round(Number(item.viewtotal==null?0:item.viewtotal))\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      sumus=sumus+1;\r\n    }\r\n  })\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  let videos=''\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickDeleteOrderDoneHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn duyệt \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.updateOrderCheckRequest(orderarr))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n         <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Đang chạy {totaldordershow}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{format1((useEff<=1?sumvn:totalVnshow))} </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{format1((useEff<=1?sumvn:totalUsshow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Luồng cấp {format1((useEff<=1?sumthreadset:totalthreadsetshow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(241,133,133,0.97)\"}}>Luồng chạy {format1((useEff<=1?sumthread:totalthreadshow))}</span></span>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng đặt {format1((useEff<=1?sumtime:totaltimeordershow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(241,133,133,0.97)\"}}>Đã chạy {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(141,133,133,0.97)\"}}>Còn tồn {format1((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tổng tiền {useEff<=1?summoney.toFixed(3):totalmoneyshow.toFixed(3)}$ </span> </span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN1222\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Sửa luồng\r\n                    </button>\r\n                )}\r\n\r\n                {isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickDeleteOrderDoneHandler()\r\n                            }}\r\n                            className='btn btn-light'\r\n                    >\r\n                      Duyệt đơn\r\n                    </button>\r\n                )}\r\n                {role === \"ROLE_ADMIN122221\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                      onClick={() => {\r\n                                                        setShowBhManual(true)\r\n                                                      }}\r\n                                                      className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n                {role === \"ROLE_ADMIN122221\"&&<button\r\n                    onClick={() => {\r\n                      setShowAddManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm đơn\r\n                </button>}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={100} value={100}>\r\n                    {\"100\"}\r\n                  </option>\r\n                  <option key={104} value={104}>\r\n                    {\"104\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                               //setKeyRate(keyrate)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>}\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n                <th   className='min-w-150px text-sm'>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\UserList.tsx",["2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519","2520","2521","2522","2523","2524","2525","2526","2527","2528","2529","2530","2531","2532","2533"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel ,OrderModelChecked} from 'app/modules/services/models/Account'\r\nimport UserItem from './components/UserItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountModel[]\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  let [totalService, setTotalService] = useState(0)\r\n  let [totalServiceShow, setTotalServiceShow] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const [category, setCategory] = useState(\"Category\")\r\n  const [geo, setGeo] = useState(\"Geo\")\r\n  const [platform, setPlatform] = useState(\"Platform\")\r\n  const [enabled, setEnabled] = useState(\"1\")\r\n  const [type, setType] = useState(\"Type\")\r\n  let [useEff, setuseEff] = useState(0)\r\n  const [nameExport, setNameExport] = useState('Services')\r\n  const [listcategory,setlistCategory]=useState([{\r\n    category:\"Category\"\r\n  },])\r\n  const [listplatform,setlistPlatform]=useState([{\r\n    platform:\"Platform\"\r\n  },])\r\n  const [listgeo,setlistGeo]=useState([{\r\n    geo:\"Geo\"\r\n  },])\r\n  const [listtype,setlistType]=useState([{\r\n    type:\"Type\"\r\n  },])\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const isShowFixMulti = accounts.find((item) => {\r\n    if (item.checked) {\r\n\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  const [listService,setListService]=useState([{\r\n    id: 0,\r\n    service: 0,\r\n    platform:\"\",\r\n    category:\"\",\r\n    type:\"\",\r\n    quantity:\"\",\r\n    name:\"\",\r\n    source:\"\",\r\n    geo:\"\",\r\n    rate: 0,\r\n    guarantee:\"\",\r\n    retention:\"\"\r\n  }])\r\n  async function getOptionService() {\r\n    let  requestUrl = API_URL+'servive/getOptionService';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    console.log(response)\r\n    const responseJson = await response.json();\r\n    const {listType} = responseJson;\r\n    const {listGeo} = responseJson;\r\n    const {listPlatform} = responseJson;\r\n    const {listCategory} = responseJson;\r\n    let typeList =listType.split(',');\r\n    for(var i=0;i<typeList.length;i++){\r\n      let typeItem = {\r\n        type: typeList[i]\r\n      }\r\n      setlistType([...listtype, typeItem])\r\n      listtype.push(typeItem)\r\n    }\r\n    let geoList =listGeo.split(',');\r\n    for(var i=0;i<geoList.length;i++){\r\n      let geoItem = {\r\n        geo: geoList[i]\r\n      }\r\n      setlistGeo([...listgeo, geoItem])\r\n      listgeo.push(geoItem)\r\n    }\r\n    let platformList =listPlatform.split(',');\r\n    for(var i=0;i<platformList.length;i++){\r\n      let platformItem = {\r\n        platform: platformList[i]\r\n      }\r\n      setlistPlatform([...listplatform, platformItem])\r\n      listplatform.push(platformItem)\r\n    }\r\n    let categoryList =listCategory.split(',');\r\n    for(var i=0;i<categoryList.length;i++){\r\n      let categoryItem = {\r\n        category: categoryList[i]\r\n      }\r\n      setlistCategory([...listcategory, categoryItem])\r\n      listcategory.push(categoryItem)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(accounts.length!=0){\r\n      setLoading(false)\r\n    }\r\n    totalServiceShow=totalService\r\n    setTotalServiceShow(totalServiceShow)\r\n    setTotalService(0)\r\n    setListService([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(useEff<=1){\r\n    getOptionService()\r\n    }\r\n  },[enabled,keytrue,key,geo,category,type,platform,accounts.length,,]);\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách Service</span>\r\n              <span  className='ml-2 fw-bold fs-7'>({totalServiceShow})</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n\r\n\r\n            <div style={{width:\"100%\"}}>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:200,height:40,fontSize:12,backgroundColor:'rgba(57,121,77,0.68)',color:\"white\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setGeo(e.target.value)\r\n                                             //setKeyRate(keyrate)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={geo}\r\n              >\r\n                {\r\n                  listgeo.map((item, index) => {\r\n                    return(\r\n                        <option key={item.geo.indexOf(\"All\")>=0?\"\":item.geo} value={item.geo.indexOf(\"Al\")>=0?\"\":item.geo}>\r\n                          {item.geo.toUpperCase()}</option>)\r\n                  })\r\n                }\r\n              </Input>}\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:200,height:40,fontSize:12,backgroundColor:'rgba(57,121,77,0.68)',color:\"white\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setType(e.target.value)\r\n                                             //setKeyRate(keyrate)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={type}\r\n              >\r\n                {\r\n                  listtype.map((item, index) => {\r\n                    return(\r\n                        <option key={item.type.indexOf(\"All\")>=0?\"\":item.type} value={item.type.indexOf(\"Al\")>=0?\"\":item.type}>\r\n                          {item.type.toUpperCase()}</option>)\r\n                  })\r\n                }\r\n              </Input>}\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:200,height:40,fontSize:12,backgroundColor:'rgba(57,121,77,0.68)',color:\"white\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setCategory(e.target.value)\r\n                                             //setKeyRate(keyrate)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={category}\r\n              >\r\n                {\r\n                  listcategory.map((item, index) => {\r\n                    return(\r\n                        <option key={item.category.indexOf(\"All\")>=0?\"\":item.category} value={item.category.indexOf(\"Al\")>=0?\"\":item.category}>\r\n                          {item.category.toUpperCase()}</option>)\r\n                  })\r\n                }\r\n              </Input>}\r\n\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:200,height:40,fontSize:12,backgroundColor:'rgba(57,121,77,0.68)',color:\"white\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setPlatform(e.target.value)\r\n                                             //setKeyRate(keyrate)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={platform}\r\n              >\r\n                {\r\n                  listplatform.map((item, index) => {\r\n                    return(\r\n                        <option key={item.platform.indexOf(\"All\")>=0?\"\":item.platform} value={item.platform.indexOf(\"Al\")>=0?\"\":item.platform}>\r\n                          {item.platform.toUpperCase()}</option>)\r\n                  })\r\n                }\r\n              </Input>}\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'rgba(57,121,77,0.68)',color:\"white\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setEnabled(e.target.value)\r\n                                             //setKeyRate(keyrate)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={enabled}\r\n              >\r\n\r\n                <option key={\"on\"} value={\"1\"}>\r\n                  ON</option>)\r\n                <option key={\"off\"} value={\"0\"}>\r\n                  OFF</option>)\r\n\r\n              </Input>}\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)\r\n                       }\r\n                       type=\"text\"\r\n                />\r\n                <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {\r\n                          setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(listService,nameExport+\"_\"+(new Date().toLocaleDateString('vn-VN')).toString())\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Export\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n\r\n                <th className='w-5px'>STT</th>\r\n                <th className='min-w-200px '>Service</th>\r\n                <th className='min-w-500px'>Option</th>\r\n                <th className='min-w-100px'>MaxOrder</th>\r\n                <th className='min-w-100px'>Threads</th>\r\n                <th className='min-w-100px'>Geo</th>\r\n                <th className='min-w-100px'>Enabled</th>\r\n                <th className='min-w-100px'>Guarantee</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {accounts&&\r\n                  accounts?.map((item: AccountModel,index:number) => {\r\n                    console.log(geo)\r\n                    if (keytrue==0&&((geo.indexOf(\"Geo\")>=0?true:item.geo.indexOf(geo)>=0)\r\n                            &&(type.indexOf(\"Type\")>=0?true:item.type.indexOf(type)>=0))\r\n                        &&(platform.indexOf(\"Platform\")>=0?true:item.platform.indexOf(platform)>=0)\r\n                        &&(category.indexOf(\"Category\")>=0?true:item.category.indexOf(category)>=0)\r\n                        &&(enabled.indexOf(\"Enabled\")>=0?true:item.enabled.toString().indexOf(enabled)>=0)\r\n                    ) {\r\n                      // @ts-ignore\r\n                      totalService=totalService+1;\r\n                      let orderitem = {\r\n                        id: totalService,\r\n                        service: item.service,\r\n                        platform:item.platform,\r\n                        category:item.category,\r\n                        type:item.type,\r\n                        quantity:item.min+\"-\"+item.max,\r\n                        name:item.name,\r\n                        source:(item.dtn>0?(\"Browse features \"+item.dtn+\"%\"):\"\")+\r\n                            (item.direct>0?(\" Direct \"+item.direct+\"%\"):\"\")+\r\n                            (item.suggest>0?((item.platform.indexOf(\"Website\")>=0?\" Referral \":\" Suggest \")+item.suggest+\"%\"):\"\")+\r\n                            (item.external>0?((item.platform.indexOf(\"Website\")>=0?\" Social  \":\" External\")+item.external+\"%\"):\"\")+\r\n                            (item.search>0?(\" Search \"+item.search+\"%\"):\"\")+\r\n                            (item.embed>0?(\" Embed \"+item.embed+\"%\"):\"\")+\r\n                            (item.platform.indexOf(\"Website\")>=0?(\" CTR \"+item.click_web+\"%\"):\"\")\r\n                                ,\r\n                        geo:item.geo,\r\n                        rate: item.rate,\r\n                        guarantee:item.refill==0?(\"No Refill\"):(item.maxtimerefill+\" days Refill\"),\r\n                        retention:item.mintime+\"-\"+item.maxtime+\" minutes\",\r\n                      }\r\n                      listService.push(orderitem)\r\n                      return (\r\n                          <UserItem key={item.service+index} item={item} index={index} />\r\n                      )\r\n                    }else if ((keytrue==1&&(item.service==parseInt(key)))&&((geo.indexOf(\"Geo\")>=0?true:item.geo.indexOf(geo)>=0)\r\n                            &&(type.indexOf(\"Type\")>=0?true:item.type.indexOf(type)>=0))\r\n                        &&(platform.indexOf(\"Platform\")>=0?true:item.platform.indexOf(platform)>=0)\r\n                        &&(category.indexOf(\"Category\")>=0?true:item.category.indexOf(category)>=0)\r\n                        &&(enabled.indexOf(\"Enabled\")>=0?true:item.enabled.toString().indexOf(enabled)>=0)\r\n                    ) {\r\n                      // @ts-ignore\r\n                      totalService=totalService+1;\r\n                      let orderitem = {\r\n                        id: totalService,\r\n                        service: item.service,\r\n                        platform:item.platform,\r\n                        category:item.category,\r\n                        type:item.type,\r\n                        quantity:item.min+\"-\"+item.max,\r\n                        name:item.name,\r\n                        source:(item.dtn>0?(\"Browse features \"+item.dtn+\"%\"):\"\")+\r\n                            (item.direct>0?(\" Direct \"+item.direct+\"%\"):\"\")+\r\n                            (item.suggest>0?((item.platform.indexOf(\"Website\")>=0?\" Referral \":\" Suggest \")+item.suggest+\"%\"):\"\")+\r\n                            (item.external>0?((item.platform.indexOf(\"Website\")>=0?\" Social  \":\" External\")+item.external+\"%\"):\"\")+\r\n                            (item.search>0?(\" Search \"+item.search+\"%\"):\"\")+\r\n                            (item.embed>0?(\" Embed \"+item.embed+\"%\"):\"\")+\r\n                            (item.platform.indexOf(\"Website\")>=0?(\" CTR \"+item.click_web+\"%\"):\"\")\r\n                        ,\r\n                        geo:item.geo,\r\n                        rate: item.rate,\r\n                        guarantee:item.refill==0?(\"No Refill\"):(item.maxtimerefill+\" days Refill\"),\r\n                        retention:item.mintime+\"-\"+item.maxtime+\" minutes\",\r\n                      }\r\n                      listService.push(orderitem)\r\n                      return (\r\n                          <UserItem key={item.service+index} item={item} index={index} />\r\n                      )\r\n                    }\r\n\r\n                    return null\r\n              })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n    </div>\r\n\r\n  )\r\n}\r\nexport  { UserList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\header\\Topbar.tsx",["2534","2535","2536","2537","2538","2539","2540","2541","2542","2543","2544","2545","2546","2547","2548","2549","2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569","2570","2571","2572"],"import clsx from 'clsx'\r\nimport React, {FC, useEffect, useState} from 'react'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\r\nimport {HeaderNotificationsMenu, HeaderUserMenu, QuickLinks, Search} from '../../../partials'\r\nimport {useLayout} from '../../core'\r\nimport {UserModel} from \"../../../../app/modules/auth/models/UserModel\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../../../setup\";\r\nimport {auto} from \"@popperjs/core\";\r\nimport moment from \"moment\";\r\nconst API_URL = process.env.REACT_APP_API_URL\r\nlet total_user=0\r\nconst toolbarButtonMarginClass = 'ms-2 ms-lg-3',\r\n  toolbarButtonHeightClass = 'w-30px h-30px w-md-40px h-md-40px',\r\n  toolbarUserAvatarHeightClass = 'symbol-30px symbol-md-40px',\r\n  toolbarButtonIconSizeClass = 'svg-icon-1'\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst Topbar: FC = () => {\r\n    const [toggle, setToggle] = useState(false)\r\n    const [toggle5m, setToggle5m] = useState(false)\r\n    let [total_user, settotal_user] = useState(\"\")\r\n    let [fluctuationsNow, sefluctuationsNow] = useState(\"\")\r\n    let [now, setnow] = useState(moment().format(\"hh:mm:s A\").toString())\r\n    let [useEff, setuseEff] = useState(0)\r\n    const [isMobile, setIsMobile] = useState(false);\r\n    const [countPrice, setCountPrice] = useState(0);\r\n    async function getcounts(){\r\n        settotal_user(\"\")\r\n\r\n        const requestUrl = API_URL+'auth/balanceNow';\r\n        const response= await fetch(requestUrl,{\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson= await  response.json();\r\n        const {balance}=responseJson;\r\n        settotal_user(balance)\r\n        setnow(moment().format(\"hh:mm:s A\").toString())\r\n    }\r\n    async function getnow(){\r\n        const requestUrl = API_URL+'auth/fluctuationsNow';\r\n        const response= await fetch(requestUrl,{\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson= await  response.json();\r\n        const {noti}=responseJson;\r\n\r\n        if(noti!=fluctuationsNow){\r\n            sefluctuationsNow(noti)\r\n        }\r\n    }\r\n    async function get5M(){\r\n        const requestUrl = API_URL+'auth/fluctuations5M';\r\n        const response= await fetch(requestUrl,{\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson= await  response.json();\r\n        const {price}=responseJson;\r\n        setCountPrice(-price)\r\n    }\r\n    const handleWindowResize = () => {\r\n        setIsMobile(window.innerWidth <= 800);\r\n    };\r\n    useEffect(() => {\r\n        useEff=useEff+1\r\n        setuseEff(useEff)\r\n        if(useEff<=1&&user.role==='ROLE_ADMIN'){\r\n            getcounts()\r\n        }\r\n        handleWindowResize();\r\n        window.addEventListener('resize', handleWindowResize);\r\n    }, []);\r\n    useEffect(() => {\r\n        if(user.role==='ROLE_ADMIN'){\r\n            setTimeout(() => setToggle((prevToggle) => !prevToggle), 10000);\r\n            handleWindowResize();\r\n            // Thêm sự kiện lắng nghe để kiểm tra kích thước cửa sổ khi cửa sổ thay đổi\r\n            window.addEventListener('resize', handleWindowResize);\r\n            if(window.innerWidth > 800){\r\n                getnow()\r\n            }\r\n        }\r\n\r\n    }, [toggle]);\r\n\r\n    useEffect(() => {\r\n        if(user.role==='ROLE_ADMIN'){\r\n            setTimeout(() => setToggle5m((prevToggle) => !prevToggle), 60000);\r\n            handleWindowResize();\r\n            // Thêm sự kiện lắng nghe để kiểm tra kích thước cửa sổ khi cửa sổ thay đổi\r\n            window.addEventListener('resize', handleWindowResize);\r\n            if(window.innerWidth > 800){\r\n                get5M()\r\n            }\r\n        }\r\n\r\n    }, [toggle5m]);\r\n    function animate_string() {\r\n        const element = document.getElementById('target');\r\n        // @ts-ignore\r\n        const textNode = element.firstChild;\r\n        // @ts-ignore\r\n        let text = textNode.data;\r\n        setInterval(() => {\r\n            text = text[text.length - 1] + text.substring(0, text.length - 1);\r\n            // @ts-ignore\r\n            textNode.data = text;\r\n        }, 100);\r\n    }\r\n\r\n  const {config} = useLayout()\r\n  const user: UserModel = useSelector<RootState>(({auth}) => auth.user, shallowEqual) as UserModel\r\n  return (\r\n\r\n    <div className='d-flex align-items-stretch flex-lg-shrink-1'>\r\n      {/* begin::User */}\r\n        {user.role==='ROLE_ADMIN111'&&<div className=\"align-items-top row\" style={{marginRight:15}}>\r\n            <div style={{width:\"100%\",margin:auto}}>\r\n                <div className=\"pl-0 text-left\">\r\n                        <div dangerouslySetInnerHTML={{ __html: now }} style={{color:\"rgb(9,9,9)\",fontSize:13,fontWeight:\"bold\",fontFamily:\"monospace\",textAlign:\"center\",margin:auto}}>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        {isMobile==false&&(user.role==='ROLE_ADMIN')&&<div className=\"align-items-top row\" style={{marginRight:15}}>\r\n            <div style={{width:\"100%\",display: \"flex\",alignItems:\"center\",justifyItems:\"center\"}}>\r\n                <div className=\"pl-0 text-left\">\r\n                   <span  style={{textAlign:\"center\",fontWeight:\"bold\",fontFamily:\"cursive\"}}>{fluctuationsNow +\" 🕐 𝐋𝐀𝐒𝐓 𝟓𝐌 \"} <span style={{color:\"#bb0707\",fontFamily:\"cursive\",fontSize:15}}>{countPrice.toFixed(3)+\"$\"}</span></span>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        {user.role==='ROLE_ADMIN'&&<div className=\"align-items-top row\" style={{backgroundColor:\"#9de3bb\",marginRight:15}}>\r\n            <div style={{width:\"100%\"}}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    height: \"100%\"\r\n                }} className=\"pl-0 text-left\">\r\n                    <button\r\n                            onClick={() => {getcounts()\r\n                            }}\r\n                            className='btn btn-sm'\r\n                    >\r\n                        <div style={{width:\"100%\",display: \"flex\",alignItems:\"center\",justifyItems:\"center\"}}>\r\n                            <span style={{textAlign:\"center\",fontWeight:\"bold\",fontSize:isMobile==false?11:11,color:\"rgb(9,9,9)\",backgroundColor:\"rgb(255,255,255)\",padding:4,paddingRight:isMobile==false?7:2,paddingLeft:isMobile==false?6:2,flex: 1,alignItems: 'center',borderRadius:10}}>{total_user!=\"\"?(isMobile==false?total_user.split(\",\")[0]:(parseInt(total_user.split(\",\")[0]).toFixed(0))):\"\"}{isMobile==true?\"$\":\"\"}</span>\r\n                            <span style={{textAlign:\"center\",fontSize:isMobile==false?11:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",padding:4,paddingRight:isMobile==false?7:2,paddingLeft:isMobile==false?6:2,flex: 1,alignItems: 'center',borderRadius:10,marginLeft:3}}>{total_user!=\"\"?(isMobile==false?total_user.split(\",\")[1]:(parseInt(total_user.split(\",\")[1]).toFixed(0))):\"\"}</span>\r\n                            <span  style={{textAlign:\"center\",fontSize:isMobile==false?11:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",padding:4,paddingRight:isMobile==false?7:2,paddingLeft:isMobile==false?6:2,flex: 1,alignItems: 'center',borderRadius:10,marginLeft:3}}>{total_user!=\"\"?(isMobile==false?total_user.split(\",\")[2]:(parseInt(total_user.split(\",\")[2]).toFixed(0))):\"\"}</span>\r\n                            <span  style={{textAlign:\"center\",fontSize:isMobile==false?11:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",padding:4,paddingRight:isMobile==false?7:2,paddingLeft:isMobile==false?6:2,flex: 1,alignItems: 'center',borderRadius:10,marginLeft:3}}>{total_user!=\"\"?(isMobile==false?total_user.split(\",\")[3]:(parseInt(total_user.split(\",\")[3]).toFixed(0))):\"\"}</span>\r\n                        </div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n      <div className=\"align-items-center row\" style={{backgroundColor:\"#c0e1ce\"}}>\r\n        {/* begin::Toggle */}\r\n        <div style={{width:\"70%\"}}>\r\n            <div className=\"pl-2 text-left\">\r\n                <div style={{color:\"#26695c\",fontWeight:\"bold\"}}>{user.username.substring(0,15)}...</div>\r\n                <span style={{color:\"#b7080f\",fontWeight:\"bold\"}}  className=\"font-weight-bold\" >{user.role}</span>\r\n                <div style={{color:\"#000000\",fontWeight:\"bold\"}} className=\"font-weight-bold\">{user.balance.toPrecision()}$</div>\r\n            </div>\r\n        </div>\r\n\r\n          <div style={{width:\"30%\"}}\r\n               data-kt-menu-trigger='click'\r\n               data-kt-menu-attach='parent'\r\n               data-kt-menu-placement='bottom-end'\r\n               data-kt-menu-flip='bottom'\r\n          >\r\n              <button className=\"d-block p-0 avatar-icon-wrapper\">\r\n                  <div className=\"avatar-icon avatar-icon--custom\">\r\n                      <img style={{width:40,height:40,borderImage:\"-moz-initial\",borderRadius:\"50%\"}} src={toAbsoluteUrl('/media/avatars/Blank-Avatar.jpg')} alt='metronic' />\r\n                  </div>\r\n              </button>\r\n          </div>\r\n\r\n        <HeaderUserMenu />\r\n        {/* end::Toggle */}\r\n      </div>\r\n      {/* end::User */}\r\n\r\n      {/* begin::Aside Toggler */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Topbar}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts",["2573"],"import axios from 'axios'\r\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\r\nimport { AccountModel } from '../models/Account'\r\n\r\n\r\n\r\nexport async function getListAccount() {\r\n  const res:any = await getFunciton(\"vps/list\")\r\n  return res\r\n}\r\n\r\n\r\nexport async function updateAccount(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"vps/update\",account)\r\n  return res\r\n}\r\n\r\nexport async function updateResetVPS(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"vps/updaterestart\",account)\r\n  return res\r\n}\r\n\r\nexport async function deleteVps(vps:string) {\r\n  const res:any = await deleteFunciton(\"/vps/delete?vps=\"+vps)\r\n  return res\r\n}\r\n\r\nexport async function allAccount() {\r\n  const res:any = await getFunciton(\"/gmails/countgmails\")\r\n  return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\redux\\OrdersCRUD.ts",["2574","2575"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videocomment/getorderviewhhistory?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(orderid:string) {\r\n  const res:any = await getFunciton(\"videocomment/updateRefundHis?orderid=\"+orderid)\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function findorder( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\n\r\n\r\nexport async function addGroup(groupName:string) {\r\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\r\n    name: groupName\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function deleteGroup(id:number) {\r\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(videoid:string) {\r\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\redux\\OrdersCRUD.ts",["2576"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderview?user=baohanh01@gmail.com\")\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/orderview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhordervideoidv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/bhviewbyvideoid\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function htorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/htview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\nexport async function ht100orderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/ht100view\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function htordervideoidv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/htviewbyvideoid\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function checkbhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/checkbhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function checkbhordervideoidv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/checkbhvideoidview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(videoid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/videoview/delete?videoid=\"+videoid+'&cancel='+cancel)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\redux\\OrdersCRUD.ts",["2577"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderviewcheckcannel?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/orderview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(videoid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/videoview/delete?videoid=\"+videoid+'&cancel='+cancel)\r\n  return res\r\n}\r\n\r\nexport async function updateOrderCheck(videoid:string) {\r\n  const res:any = await getFunciton(\"/videoview/updateordercheck?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts",["2578"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder() {\r\n  const res:any = await getFunciton(\"channel/getorder\")\r\n  return res\r\n}\r\n\r\n\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"channel/updatesingle\",order)\r\n  return res\r\n}\r\n\r\nexport async function addorderv2( channel_id:string,\r\n                                  list_video:string,\r\n                                  home_rate:number,\r\n                                  direct_rate:number,\r\n                                  search_rate:number,\r\n                                  enabled:number,\r\n                                  max_thread:number,\r\n                                  suggest_rate:number,\r\n                                  view_percent:number) {\r\n  const res = await postWithoutTokenFunciton(\"channel/orderbuffh\", {\r\n    channel_id:channel_id,\r\n    list_video:list_video,\r\n    direct_rate:direct_rate,\r\n    search_rate:search_rate,\r\n    enabled:enabled,\r\n    max_thread:max_thread,\r\n    suggest_rate:suggest_rate,\r\n    view_percent:view_percent\r\n  })\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"channel/orderbuffh\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"channel/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(channel_id:string) {\r\n  const res:any = await deleteFunciton(\"/channel/delete?channelid=\"+channel_id)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\redux\\OrdersCRUD.ts",["2579"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videocomment/getorderview?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videocomment/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"videocomment/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videocomment/orderview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videocomment/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videocomment/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videocomment/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videocomment/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(videoid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/videocomment/delete?videoid=\"+videoid+'&cancel='+cancel)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\redux\\OrdersCRUD.ts",["2580"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderview?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/orderview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function addorderbychannelv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/orderchannelview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(videoid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/videoview/delete?videoid=\"+videoid+'&cancel='+cancel)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\redux\\OrdersCRUD.ts",["2581"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderviewhhistory?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function findorder( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\n\r\n\r\nexport async function addGroup(groupName:string) {\r\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\r\n    name: groupName\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function deleteGroup(id:number) {\r\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(videoid:string) {\r\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\redux\\OrdersCRUD.ts",["2582","2583","2584"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(videoid:string) {\r\n  const res:any = await getFunciton(\"videoview/findorder?videoid=\"+videoid)\r\n  return res\r\n}\r\nexport async function getListOrderCmt(videoid:string) {\r\n  const res:any = await getFunciton(\"videocomment/findorder?videoid=\"+videoid)\r\n  return res\r\n}\r\n\r\nexport async function getListOrderFollowerTiktok(tiktok_id:string) {\r\n  const res:any = await getFunciton(\"channel_tiktok/findorder?tiktok_id=\"+tiktok_id)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(orderid:string,mode:number,check:number) {\r\n  if(mode==0){\r\n    const res:any = await getFunciton(\"videoview/updateRefundHis?orderid=\"+orderid+\"&checkview=\"+check)\r\n    return res\r\n  }else{\r\n    const res:any = await getFunciton(\"videoview/updateRefillHis?orderid=\"+orderid+\"&check_time=\"+check)\r\n    return res\r\n  }\r\n\r\n}\r\n\r\nexport async function updateOrderCmt(orderid:string) {\r\n  const res:any = await getFunciton(\"videocomment/updateRefundHis?orderid=\"+orderid)\r\n  return res\r\n}\r\n\r\nexport async function updateOrderFollwer(orderid:string) {\r\n  const res:any = await getFunciton(\"channel_tiktok/updateRefundHis?orderid=\"+orderid)\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function findorder( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\n\r\n\r\nexport async function addGroup(groupName:string) {\r\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\r\n    name: groupName\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function deleteGroup(id:number) {\r\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(videoid:string) {\r\n  const res:any = await deleteFunciton(\"/videoview/delete?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\redux\\AccountCRUD.ts",["2585"],"import axios from 'axios'\r\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\r\nimport { AccountModel,AccountLimitModel,ProxySettingModel } from '../models/Account'\r\n\r\n\r\n\r\nexport async function getListAccount() {\r\n  const res:any = await getFunciton(\"auth/setting\")\r\n  return res\r\n}\r\n\r\nexport async function getListLimitService() {\r\n  const res:any = await getFunciton(\"auth/limitservice\")\r\n  return res\r\n}\r\nexport async function getListProxySetting() {\r\n  const res:any = await getFunciton(\"proxy/proxysetting\")\r\n  return res\r\n}\r\n\r\n\r\nexport async function updateAccount(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"auth/updatesetting\",account)\r\n  return res\r\n}\r\n\r\nexport async function updateAccountLimit(accountlimit:AccountLimitModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"auth/updatelimit\",accountlimit)\r\n  return res\r\n}\r\n\r\nexport async function updateProxySetting(proxysetting:ProxySettingModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"proxy/updateProxySetting\",proxysetting)\r\n  return res\r\n}\r\n\r\nexport async function updateResetVPS(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"auth/updaterestart\",account)\r\n  return res\r\n}\r\n\r\nexport async function deleteVps(vps:string) {\r\n  const res:any = await deleteFunciton(\"auth/delete?username=\"+vps)\r\n  return res\r\n}\r\n\r\nexport async function allAccount() {\r\n  const res:any = await getFunciton(\"auth/gmails/countgmails\")\r\n  return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\redux\\AccountCRUD.ts",["2586"],"import axios from 'axios'\r\nimport {deleteFunciton, getFunciton} from 'utils/ApiHelper'\r\n\r\nexport async function getList() {\r\n  const res:any = await getFunciton(\"history/list\")\r\n  return res\r\n}\r\n\r\nexport async function getComputer() {\r\n  const res:any = await getFunciton(\"historyview/vpsrunning\")\r\n  return res\r\n}\r\n\r\nexport async function getProxy() {\r\n  const res:any = await getFunciton(\"/proxy/list_v4\")\r\n  return res\r\n}\r\nexport async function getAuthen() {\r\n  const res:any = await getFunciton(\"/proxy/list_authen\")\r\n  return res\r\n}\r\nexport async function getSock() {\r\n  const res:any = await getFunciton(\"/proxy/list_sock\")\r\n  return res\r\n}\r\nexport async function getProxySub() {\r\n  const res:any = await getFunciton(\"/proxysub/list_v4\")\r\n  return res\r\n}\r\nexport async function deleteProxy(ipv4:string) {\r\n  const res:any = await deleteFunciton(\"/proxy/delete?ipv4=\"+ipv4)\r\n  return res\r\n}\r\n\r\nexport async function resetComputer(computer_name:string) {\r\n  const res:any = await getFunciton(\"history/reset_com?computer_name=\"+computer_name)\r\n  return res\r\n}\r\n\r\nexport async function getStatics(user:string) {\r\n  const res:any = await getFunciton(\"auth/getbalance7day?user=\"+user)\r\n  return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\redux\\AccountCRUD.ts",["2587"],"import axios from 'axios'\r\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\r\nimport {AccountModel} from '../models/Account'\r\n\r\n\r\nexport async function getListAccount() {\r\n    const res: any = await getFunciton(\"servive/list\")\r\n    return res\r\n}\r\n\r\nexport async function addorderv2(service: number,\r\n                                 category: string,\r\n                                 name: number,\r\n                                 rate: number,\r\n                                 min: string,\r\n                                 max: number,\r\n                                 geo: string,\r\n                                 enabled: number,\r\n                                 maxorder: number,\r\n                                 search: number,\r\n                                 suggest: number,\r\n                                 dtn: number,\r\n                                 mintime: number,\r\n                                 maxtime: number,\r\n                                 maxtimerefill: number,\r\n                                 refill: number,\r\n                                 thread: number,\r\n                                 type: string,\r\n                                 checktime: number) {\r\n    const res = await postWithoutTokenFunciton(\"service/addservice\", {\r\n        service: service,\r\n        category: category,\r\n        name: name,\r\n        rate: rate,\r\n        min: min,\r\n        max: max,\r\n        geo: geo,\r\n        enabled: enabled,\r\n        maxorder: maxorder,\r\n        search: search,\r\n        suggest: suggest,\r\n        dtn: dtn,\r\n        mintime: mintime,\r\n        maxtime: maxtime,\r\n        maxtimerefill: maxtimerefill,\r\n        refill: refill,\r\n        thread: thread,\r\n        type: type,\r\n        checktime: checktime\r\n    })\r\n    return res\r\n}\r\n\r\nexport async function updateAccount(account: AccountModel) {\r\n    const res: any = await postWithoutTokenFunciton(\"servive/update\", account)\r\n    return res\r\n}\r\n\r\nexport async function updateResetVPS(account: AccountModel) {\r\n    const res: any = await postWithoutTokenFunciton(\"servive/updaterestart\", account)\r\n    return res\r\n}\r\n\r\nexport async function deleteVps(vps: string) {\r\n    const res: any = await deleteFunciton(\"servive/delete?username=\" + vps)\r\n    return res\r\n}\r\n\r\nexport async function allAccount() {\r\n    const res: any = await getFunciton(\"servive/gmails/countgmails\")\r\n    return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\redux\\AccountCRUD.ts",["2588"],"import axios from 'axios'\r\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\r\nimport { AccountModel } from '../models/Account'\r\n\r\n\r\n\r\nexport async function getListAccount() {\r\n  const res:any = await getFunciton(\"auth/list\")\r\n  return res\r\n}\r\n\r\n\r\nexport async function updateAccount(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"auth/update\",account)\r\n  return res\r\n}\r\n\r\nexport async function updateResetVPS(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"auth/updaterestart\",account)\r\n  return res\r\n}\r\n\r\nexport async function deleteVps(vps:string) {\r\n  const res:any = await deleteFunciton(\"auth/delete?username=\"+vps)\r\n  return res\r\n}\r\n\r\nexport async function allAccount() {\r\n  const res:any = await getFunciton(\"auth/gmails/countgmails\")\r\n  return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\redux\\OrdersCRUD.ts",["2589"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"auth/balance?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function addGroup(groupName:string) {\r\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\r\n    name: groupName\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function deleteGroup(id:number) {\r\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(videoid:string) {\r\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\Video.tsx",["2590","2591","2592","2593"],"import React, { useState,useRef, useEffect, } from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nexport function Video() {\r\n  // @ts-ignore\r\n  let {videoId}  = useParams();\r\n    return (\r\n      <div >\r\n          <iframe\r\n              width=\"300\"\r\n              height=\"auto\"\r\n              src={`https://www.youtube.com/embed/`+videoId+'?autoplay=1'}\r\n              frameBorder=\"0\"\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n              allowFullScreen\r\n              title=\"Embedded youtube\"\r\n          />\r\n      </div>\r\n  )\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\OrderList.tsx",["2594","2595","2596","2597","2598","2599"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\n\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\n\r\ntype Props = {\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n\r\n  const [groupName, setGroupName] = useState('')\r\n  const role: string =\r\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className='card-header border-0 pt-5'>\r\n        <h3 className='card-title align-items-start flex-column'>\r\n          <span className='card-label fw-bolder fs-3 mb-1'>Danh sách đơn của bạn</span>\r\n          <span className='text-muted mt-1 fw-bold fs-7'>{orders.length} Đơn</span>\r\n        </h3>\r\n        <div className='card-toolbar'>\r\n          <div className='card-toolbar w-100'>\r\n            {/* begin::Menu */}\r\n            {isShowFixMulti && (\r\n\r\n              <button style={{fontWeight:'bold',margin:5,color:\"white\",backgroundColor:\"#26695c\"}}\r\n                onClick={() => {\r\n                  setShowEditMulti(true)\r\n                }}\r\n                className='btn btn-sm '\r\n              >\r\n                Sửa nhiều\r\n              </button>\r\n            )}\r\n            <button style={{fontWeight:'bold',color:\"white\",backgroundColor:\"#26695c\"}}\r\n              onClick={() => {\r\n                setShowAddManual(true)\r\n              }}\r\n              className='btn btn-sm '\r\n            >\r\n              Tạo đơn\r\n            </button>\r\n\r\n            <Popover className='z-0 relative'>\r\n              {({open}) => (\r\n                <>\r\n                  <Transition\r\n                    as={Fragment}\r\n                    enter='transition ease-out duration-200'\r\n                    enterFrom='opacity-0 -translate-y-1'\r\n                    enterTo='opacity-100 translate-y-0'\r\n                    leave='transition ease-in duration-150'\r\n                    leaveFrom='opacity-100 translate-y-0'\r\n                    leaveTo='opacity-0 -translate-y-1'\r\n                  >\r\n                    <Popover.Panel className='absolute z-10 inset-x-0 transform shadow-lg'>\r\n                      <div className='absolute inset-0 flex' aria-hidden='true'>\r\n                        <div className='bg-white w-full' />\r\n                      </div>\r\n                      <div className='relative max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-2'>\r\n                        <nav\r\n                          className='grid gap-y-10 px-4 py-8 bg-white'\r\n                          aria-labelledby='solutions-heading'\r\n                        >\r\n                          <div>\r\n                            <ul role='list' className='space-y-2 flex flex-col'>\r\n                              {groups.map((item: Group) => {\r\n                                return (\r\n                                  <li\r\n                                    key={item.id}\r\n                                    onClick={() => {\r\n                                      selectGroup(item)\r\n                                    }}\r\n                                    className='flex-1 w-96 cursor-pointer hover:text-blue focus:bg-blue'\r\n                                  >\r\n                                    {item.name}{' '}\r\n                                    <button\r\n                                      className='w-12 rounded-sm bg-danger text-white p-1 ml-5 cursor-pointer '\r\n                                      onClick={() => {\r\n                                        if (\r\n                                          window.confirm('bạn có chắc chắn muốn xóa nhóm này') ==\r\n                                          true\r\n                                        ) {\r\n                                          dispatch(actions.deleteGroupRequest(item.id))\r\n                                        }\r\n                                      }}\r\n                                    >\r\n                                      Xóa\r\n                                    </button>\r\n                                  </li>\r\n                                )\r\n                              })}\r\n                            </ul>\r\n                            <div>\r\n                              <div className='mt-1 flex rounded-md shadow-sm w-80'>\r\n                                <div className='relative flex items-stretch flex-grow focus-within:z-10'>\r\n                                  <input\r\n                                    value={groupName}\r\n                                    onChange={(e) => setGroupName(e.target.value)}\r\n                                    type='email'\r\n                                    name='email'\r\n                                    id='email'\r\n                                    className='focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300'\r\n                                    placeholder='Nhập tên nhóm '\r\n                                  />\r\n                                </div>\r\n                                <button\r\n                                  type='button'\r\n                                  onClick={addGroup}\r\n                                  className='-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500'\r\n                                >\r\n                                  <SortAscendingIcon\r\n                                    className='h-5 w-5 text-gray-400'\r\n                                    aria-hidden='true'\r\n                                  />\r\n                                  <span>Thêm</span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </nav>\r\n                      </div>\r\n                    </Popover.Panel>\r\n                  </Transition>\r\n                </>\r\n              )}\r\n            </Popover>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                      onChange={(evt) => {\r\n                        dispatch(actions.checkedAllChange(evt.target.checked))\r\n                      }}\r\n                      className='form-check-input'\r\n                      type='checkbox'\r\n                      value='1'\r\n                      data-kt-check='true'\r\n                      data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span className='text-sm'># Tênh kênh</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span className='text-sm'>Đang chạy</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span className='text-sm'>Status</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {orders &&\r\n                orders.map((order: OrderModel, index: number) => {\r\n                  if (currentGroup === undefined) {\r\n                    return (\r\n                      <OrderItem\r\n                        index={index}\r\n                        showEdit={role === 'ROLE_ADMIN'}\r\n                        key={order.channel_id}\r\n                        item={order}\r\n                      />\r\n                    )\r\n                  }\r\n                  if (order.group_id === currentGroup.id) {\r\n                    return (\r\n                      <OrderItem\r\n                        index={index}\r\n                        showEdit={role === 'ROLE_ADMIN'}\r\n                        key={order.channel_id}\r\n                        item={order}\r\n                      />\r\n                    )\r\n                  }\r\n                  return null\r\n                })}\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {/* end::Table */}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      {showAdd && (\r\n        <AddModal\r\n          show={true}\r\n          close={() => {\r\n            setShowAdd(false)\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <EditMulti\r\n        show={showEditMulti}\r\n        close={() => {\r\n          setShowEditMulti(false)\r\n        }}\r\n      />\r\n      <AddManualModal\r\n        show={showAddManual}\r\n        close={() => {\r\n          setShowAddManual(false)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\dataExamples.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\chat\\ChatInner.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx",["2600","2601","2602","2603","2604","2605","2606","2607","2608","2609","2610","2611"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/accounts/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\n\r\ntype Props = {\r\n    item: AccountModel\r\n}\r\nconst EditModal: React.FC<Props> = ({ item }) => {\r\n    console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [vpsoption, setvpsoption] = useState(item.vpsoption)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(item.get_account)\r\n    const [threads, setthreads] = useState(item.threads)\r\n    const [ext, setext] = useState(item.ext)\r\n    const [cmt, setcmt] = useState(item.cmt)\r\n    const [proxy, setproxy] = useState(item.proxy)\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'accview/dellAccViewByVPS?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'accview/dellAccCmtByVPS?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const updateUser = () => {\r\n        if(vpsreset==3){\r\n            resetrunningacc(item.vps.trim())\r\n        }\r\n        if(vpsreset==5){\r\n            resetrunningacccmt(item.vps.trim())\r\n        }\r\n        if(vpsreset==10){\r\n            resetrunningacc(item.vps.trim())\r\n            resetrunningacccmt(item.vps.trim())\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            vpsoption:vpsoption,\r\n            threads:threads,\r\n            vpsreset:vpsreset,\r\n            get_account:get_account,\r\n            ext:ext,\r\n            proxy:proxy,\r\n            cmt:cmt\r\n        }))\r\n    }\r\n    const handleChange = (e:any) => {\r\n        setthreads(parseInt(e.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update cho VPS IP:  {item?.vps}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Nhập số luồng</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={threads} onChange={handleChange} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsoption}\r\n                        >\r\n                            {\r\n                                list_geo.map((item, index) => {\r\n                                    return(\r\n                                        <option key={item.geo} value={item.geo}>\r\n                                            {item.geo.toUpperCase()}</option>)\r\n                                })\r\n                            }\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>VPS có dùng proxy?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setproxy(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={proxy}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>VPS có comments?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setcmt(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={cmt}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={3} value={3}>\r\n                                {\"Restart & DelAcc View\"}\r\n                            </option>\r\n                            <option key={5} value={5}>\r\n                                {\"Restart & DelAcc Cmt\"}\r\n                            </option>\r\n                            <option key={10} value={10}>\r\n                                {\"Restart & DelAcc All\"}\r\n                            </option>\r\n                            <option key={6} value={6}>\r\n                                {\"Restart & Off VPS\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Get Account?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setget_account(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={get_account}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có bât EXT?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setext(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={ext}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\modals\\EditModal\\index.tsx",["2612","2613","2614","2615","2616","2617","2618","2619","2620","2621"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/users/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\ntype Props = {\r\n    item: AccountModel\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst EditModal: React.FC<Props> = ({ item }) => {\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    let [balance, setbalance] = useState(0)\r\n    const [discount, setdiscount] = useState(item.discount)\r\n    const [maxorder, setmaxorder] = useState(item.maxorder)\r\n    const [note, setnote] = useState(item.note)\r\n    const [rate, setrate] = useState(item.rate)\r\n    const [vip, setvip] = useState(item.vip)\r\n    const [add, setadd] = useState(1)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const updateUser = () => {\r\n        if(rate<100){\r\n            alert(\"% rate không hợp lệ!\")\r\n            return\r\n        }\r\n        if(discount>100 || discount<0){\r\n            alert(\"% Discount không hợp lệ!\")\r\n            return\r\n        }\r\n        if(maxorder<0){\r\n            alert(\"Giá trị số đơn max không hợp lệ!\")\r\n            return\r\n        }\r\n        console.log(add)\r\n        if(add==0){\r\n           balance=-balance\r\n        }\r\n        console.log(balance)\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            balance,\r\n            discount,\r\n            maxorder,\r\n            vip,\r\n            note,\r\n            rate,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update:  {item?.username}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Change Balance</p>\r\n\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setadd(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold',maxWidth:150,fontSize:12}}\r\n                            value={add}\r\n                        >\r\n                            <option key={1} value={1}>\r\n                                {\"+\"}\r\n                            </option>\r\n                            <option key={0} value={0}>\r\n                                {\"-\"}\r\n                            </option>\r\n\r\n                        </Input>\r\n                        <input style={{fontWeight:'bold'}} value={balance} type=\"number\" className=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setbalance(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">$</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Rate</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={rate} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setrate(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">%</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Discount</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={discount} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setdiscount(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">%</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn max</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxorder} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxorder(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>User Vip</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvip(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vip}\r\n                        >\r\n                            <option key={1} value={1}>\r\n                                {\"True\"}\r\n                            </option>\r\n                            <option key={0} value={0}>\r\n                                {\"False\"}\r\n                            </option>\r\n\r\n                        </Input>\r\n                    </div>\r\n\r\n                    <p style={{fontWeight:'bold'}}>Note</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={note} type=\"text\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setnote(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\components\\KTSVG.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\EditModal\\index.tsx",["2622","2623","2624","2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderhistory/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(item.homerate)\r\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\r\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\r\n    const [directrate,setDirect_rate]=useState(item.directrate)\r\n    //\r\n    const [likerate,setLike_rate]=useState(item.likerate)\r\n    const [commentrate,setComment_rate]=useState(item.commentrate)\r\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\r\n    const [user,setUser]=useState(username)\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(item.timebuff)\r\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\r\n    const [enabled,setEnabled]=useState(item.enabled)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n\r\n    const submit = () => {\r\n\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>1000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            homerate,\r\n            note,\r\n            directrate,\r\n            commentrate,\r\n            mobilerate,\r\n            searchrate,\r\n            enabled,\r\n            maxthreads,\r\n            viewstart,\r\n            likerate,\r\n            suggestrate,\r\n            timebuff,\r\n            optionbuff,\r\n            user,\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Cài đặt danh sách đơn</p>\r\n                    <Form>\r\n                        <p>Nguồn view tổng = 100%</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Home \r\n                                </Label>\r\n                                <Input\r\n                                    id=\"home_rate\"\r\n                                    name=\"home_rate\"\r\n                                    value={homerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Search\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"search_rate\"\r\n                                    name=\"search_rate\"\r\n                                    value={searchrate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Suggest\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"suggest_rate\"\r\n                                    name=\"suggest_rate\"\r\n                                    value={suggestrate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Direct\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"direct_rate\"\r\n                                    name=\"direct_rate\"\r\n                                    value={directrate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <p>Cài đặt tương tác</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Like\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"like_rate\"\r\n                                    name=\"like_rate\"\r\n                                    value={likerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Comment\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"comment_rate\"\r\n                                    name=\"comment_rate\"\r\n                                    value={commentrate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Mobile\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobilerate\"\r\n                                    name=\"mobilerate\"\r\n                                    value={mobilerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                   Time(h)\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={timebuff}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Chế độ buff\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={optionbuff}\r\n                            >\r\n                                <option key={10} value={10}>\r\n                                    {\"10 phút\"}\r\n                                </option>\r\n                                <option key={30} value={30}>\r\n                                    {\"30 phút\"}\r\n                                </option>\r\n                                <option key={60} value={60}>\r\n                                    {\"60 phút\"}\r\n                                </option>\r\n                                <option key={120} value={120}>\r\n                                    {\"120 phút\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Auto\"}\r\n                                </option>\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Trạng thái\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={enabled}\r\n                            >\r\n                                <option key={1} value={1}>\r\n                                    {\"Chạy\"}\r\n                                </option>\r\n                                <option key={2} value={2}>\r\n                                    {\"Test1\"}\r\n                                </option>\r\n                                <option key={3} value={3}>\r\n                                    {\"Test2\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Ngừng\"}\r\n                                </option>\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\EditModal\\index.tsx",["2639","2640","2641","2642","2643","2644","2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2680","2681","2682","2683","2684","2685","2686"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/ordercommenthistory/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(item.homerate)\r\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\r\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\r\n    const [directrate,setDirect_rate]=useState(item.directrate)\r\n    //\r\n    const [likerate,setLike_rate]=useState(item.likerate)\r\n    const [commentrate,setComment_rate]=useState(item.commentrate)\r\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\r\n    const [user,setUser]=useState(username)\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(item.timebuff)\r\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\r\n    const [enabled,setEnabled]=useState(item.enabled)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate(item.orderid.toString()))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Bạn muốn refund ${item.price} cho OrderId {item.orderid}?</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Refund</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx",["2687","2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698"],"import React from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport {ComputerModel, ProxyModel} from 'app/modules/history/models/Account'\r\nimport {resetComputer} from 'app/modules/history/redux/AccountCRUD'\r\nimport moment from 'moment'\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport {actions} from \"../../../orderdone\";\r\ntype Props = {\r\n    item: ProxyModel,\r\n    index: number\r\n}\r\n\r\nconst ComputerItem: React.FC<Props> = ({ item, index }) => {\r\n    \r\n\r\n    return (\r\n        <tr style={{margin:100}}>\r\n            <td>\r\n                <div className='d-flex flex-stack mb-2'>\r\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                {item.geo.indexOf(\"null\")<0&&<span style={{fontSize:11,marginRight:5,backgroundColor:(item.geo.indexOf(\"vn\")>=0 ||item.geo.indexOf(\"sub\")>=0 )?\"#dc272c\":\"#2ea6da\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.geo.toUpperCase()}\r\n                </span>}\r\n                <span style={{fontSize:11,backgroundColor:item.state==1?\"#03d96e\":\"#e57624\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.ipv4}\r\n                </span>\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\",}} className='badge badge-danger'>\r\n                    {item.option_setting.toUpperCase()}\r\n                </span>\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\",}} className='badge badge-danger'>\r\n                    {item.timecheck==0?'-':round((Date.now()-item.timecheck)/1000/60)}m\r\n                </span>\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:item.state==1?\"#03d96e\":\"#e57624\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.state==0?'Die':'Live'}\r\n                </span>\r\n                <span style={{fontSize:11,margin:5,backgroundColor:\"#9ca1a0\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.numcheck==0?'':item.numcheck}{item.numcheck==0?'':'m'}\r\n                </span>\r\n            </td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ComputerItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\ChannelStaticItem\\index.tsx",["2699","2700","2701","2702","2703","2704"],"import React from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport {ComputerModel} from 'app/modules/history/models/Account'\r\nimport {resetComputer} from 'app/modules/history/redux/AccountCRUD'\r\nimport moment from 'moment'\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: ComputerModel,\r\n    index: number\r\n}\r\n\r\nconst ChannelStaticItem: React.FC<Props> = ({ item, index }) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td className='w-25px'>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex align-items-center'>\r\n                    <div className='d-flex justify-content-start flex-column'>\r\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\r\n                            {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length).length!=0&&<span style={{marginRight:2,backgroundColor:\"#26695c\"}} className='badge badge-dark'>\r\n                                <text style={{fontSize:11}}>\r\n                                {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length)}\r\n                                </text>\r\n                            </span>}\r\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"black\"}}>\r\n                                {item.vps.substring(0,item.vps.lastIndexOf('-'))}\r\n                                </text>\r\n                            </span>\r\n                            <span style={{marginRight:2,backgroundColor:item.time<5?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"white\"}}>\r\n                                    {item.time}{'m'}\r\n                                </text>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{item.total}</span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ChannelStaticItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\EditModal\\index.tsx",["2705","2706","2707","2708","2709","2710","2711","2712","2713","2714","2715","2716","2717","2718","2719","2720","2721","2722","2723","2724","2725","2726","2727"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderbaohanh/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [vieworder, setvieworder] = useState(item.vieworder)\r\n    const [user,setUser]=useState(username)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n\r\n        if (vieworder<parseInt((item.viewtotal).toFixed(0))+100) {\r\n            alert(\"Số giờ thay đổi phải lớn hơn tổng giờ đã chạy ít nhất 100h! (>=\"+(item.vieworder+100).toFixed(0)+\"view)\")\r\n            return\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            maxthreads,\r\n            vieworder,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid} | Đã chạy {format1((item.viewtotal==null?0:item.viewtotal))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {vieworder<item.vieworder?\"hoàn\": \"trả thêm\"}: {format1(((vieworder<item.vieworder?(item.vieworder-vieworder):(vieworder-item.vieworder))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\EditModal\\index.tsx",["2728","2729","2730","2731","2732","2733","2734","2735","2736","2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747","2748","2749","2750"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/ordercomment/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ ordercomment }) => ordercomment.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [commentorder, setcommentorder] = useState(item.commentorder)\r\n    const [user,setUser]=useState(username)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            maxthreads,\r\n            commentorder,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid} | Đã chạy {format1((item.commenttotal==null?0:item.commenttotal))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={commentorder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setcommentorder(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {commentorder<item.commentorder?\"hoàn\": \"trả thêm\"}: {format1(((commentorder<item.commentorder?(item.commentorder-commentorder):(commentorder-item.commentorder))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\EditModal\\index.tsx",["2751","2752","2753","2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderdone/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [vieworder, setvieworder] = useState(item.vieworder)\r\n    const [user,setUser]=useState(item.user)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            maxthreads,\r\n            vieworder,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid} | Đã chạy {format1((item.viewtotal==null?0:item.viewtotal))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {vieworder<item.vieworder?\"hoàn\": \"trả thêm\"}: {format1(((vieworder<item.vieworder?(item.vieworder-vieworder):(vieworder-item.vieworder))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\modals\\EditModal\\index.tsx",["2775","2776","2777","2778","2779","2780","2781","2782","2783"],"import React, {useState, useEffect} from 'react'\r\nimport {KTSVG, toAbsoluteUrl} from '_metronic/helpers'\r\nimport {AccountModel} from 'app/modules/services/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input, FormGroup, Label\r\n} from \"reactstrap\"\r\n\r\n\r\ntype Props = {\r\n    item: AccountModel\r\n}\r\n\r\nfunction format1(n: number) {\r\n    return n.toFixed(0).replace(/./g, function (c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({item}) => {\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [min, setmin] = useState(item.min)\r\n    const [max, setmax] = useState(item.max)\r\n    const [rate, setrate] = useState(item.rate)\r\n    const [geo, setgeo] = useState(item.geo)\r\n    const [name, setname] = useState(item.name)\r\n    const [enabled, setenabled] = useState(item.enabled)\r\n    const [maxorder, setmaxorder] = useState(item.maxorder)\r\n    const [search, setsearch] = useState(item.search)\r\n    const [suggest, setsuggest] = useState(item.suggest)\r\n    const [dtn, setdtn] = useState(item.dtn)\r\n    const [direct, setdirect] = useState(item.direct)\r\n    const [external, setexternal] = useState(item.external)\r\n    const [embed, setembed] = useState(item.embed)\r\n    const [mintime, setmintime] = useState(item.mintime)\r\n    const [maxtime, setmaxtime] = useState(item.maxtime)\r\n    const [refill, setrefill] = useState(item.refill)\r\n    const [maxtimerefill, setmaxtimerefill] = useState(item.maxtimerefill)\r\n    const [thread, setthread] = useState(item.thread)\r\n    const [type, settype] = useState(item.type)\r\n    const [live, setlive] = useState(item.live)\r\n    const [checktime, setchecktime] = useState(item.checktime)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const updateUser = () => {\r\n        if (rate < 0) {\r\n            alert(\"rate phải lớsn hơn 0!\")\r\n            return\r\n        }\r\n        if (min < 0) {\r\n            alert(\"Giá trị min không hợp lệ!\")\r\n            return\r\n        }\r\n        if (max < 0) {\r\n            alert(\"Giá trị max không hợp lệ!\")\r\n            return\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            min,\r\n            max,\r\n            rate,\r\n            name,\r\n            geo,\r\n            enabled,\r\n            maxorder,\r\n            search,\r\n            suggest,\r\n            dtn,\r\n            direct,\r\n            external,\r\n            embed,\r\n            mintime,\r\n            maxtime,\r\n            maxtimerefill,\r\n            refill,\r\n            thread,\r\n            type,\r\n            live,\r\n            checktime,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n               modalTransition={{timeout: 500}}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight: 'bold', fontFamily: 'monospace'}}\r\n                        className=\"modal-title\">Update Service: {item?.service}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className='modal-body'>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Name Service\r\n                        </Label>\r\n                        <Input style={{fontWeight: 'bold'}} value={name} type=\"text\" className=\"form-control\"\r\n                               aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setname(e.target.value)}></Input>\r\n                    </FormGroup>\r\n\r\n                </div>\r\n                <div className='modal-body flex flex-row justify-between space-x-6'>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Suggest\r\n                        </Label>\r\n                        <Input\r\n                            id=\"suggest\"\r\n                            name=\"suggest\"\r\n                            value={suggest}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setsuggest(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Search\r\n                        </Label>\r\n                        <Input\r\n                            id=\"search\"\r\n                            name=\"search\"\r\n                            value={search}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setsearch(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Browse Features\r\n                        </Label>\r\n                        <Input\r\n                            id=\"dtn\"\r\n                            name=\"dtn\"\r\n                            value={dtn}\r\n                            onChange={(e) => setdtn(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            External\r\n                        </Label>\r\n                        <Input\r\n                            id=\"external\"\r\n                            name=\"external\"\r\n                            value={external}\r\n                            onChange={(e) => setexternal(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Embed\r\n                        </Label>\r\n                        <Input\r\n                            id=\"embed\"\r\n                            name=\"embed\"\r\n                            value={embed}\r\n                            onChange={(e) => setembed(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Direct\r\n                        </Label>\r\n                        <Input\r\n                            id=\"direct\"\r\n                            name=\"direct\"\r\n                            value={direct}\r\n                            onChange={(e) => setdirect(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                <div className='modal-body flex flex-row justify-between space-x-6'>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Min Quantity\r\n                        </Label>\r\n                        <Input\r\n                            id=\"suggest\"\r\n                            name=\"suggest\"\r\n                            value={min}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setmin(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Max Quantity\r\n                        </Label>\r\n                        <Input\r\n                            id=\"search\"\r\n                            name=\"search\"\r\n                            value={max}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setmax(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Max Orders\r\n                        </Label>\r\n                        <Input\r\n                            id=\"suggest\"\r\n                            name=\"suggest\"\r\n                            value={maxorder}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setmaxorder(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Default Threads\r\n                        </Label>\r\n                        <Input\r\n                            id=\"thread\"\r\n                            name=\"thread\"\r\n                            value={thread}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setthread(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Min Retention\r\n                        </Label>\r\n                        <Input\r\n                            id=\"suggest\"\r\n                            name=\"suggest\"\r\n                            value={mintime}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setmintime(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Max Retention\r\n                        </Label>\r\n                        <Input\r\n                            id=\"maxtime\"\r\n                            name=\"maxtime\"\r\n                            value={maxtime}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setmaxtime(parseInt(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n\r\n\r\n                <div className='modal-body flex flex-row justify-between space-x-8'>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Live-Pre\r\n                        </Label>\r\n                        <Input style={{fontWeight: \"bold\"}}\r\n                               onChange={(e) => setlive(parseInt(e.target.value))}\r\n                               className=\"form-control form-control-solid\"\r\n                               type=\"select\"\r\n                               value={live}\r\n                        >\r\n                            <option key={\"0\"} value={0}>\r\n                                No\r\n                            </option>\r\n                            <option key={\"1\"} value={1}>\r\n                                Yes\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Geo\r\n                        </Label>\r\n                        <Input\r\n                            id=\"thread\"\r\n                            name=\"thread\"\r\n                            value={geo}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setgeo(e.target.value)}\r\n                            type=\"text\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Type Service\r\n                        </Label>\r\n                        <Input style={{fontWeight: \"bold\"}}\r\n                               onChange={(e) => settype(e.target.value)}\r\n                               className=\"form-control form-control-solid\"\r\n                               type=\"select\"\r\n                               value={type}\r\n                        >\r\n                            <option key={\"Default\"} value={\"Default\"}>\r\n                                Default\r\n                            </option>\r\n                            <option key={\"Special\"} value={\"Special\"}>\r\n                                Special\r\n                            </option>\r\n                            <option key={\"Custom Comments\"} value={\"Custom Comments\"}>\r\n                                Custom Comments\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Guarantee\r\n                        </Label>\r\n                        <Input style={{fontWeight: \"bold\"}}\r\n                               onChange={(e) => setrefill(parseInt(e.target.value))}\r\n                               className=\"form-control form-control-solid\"\r\n                               type=\"select\"\r\n                               value={refill}\r\n                        >\r\n                            <option key={\"1\"} value={1}>\r\n                                Yes Guarantee\r\n                            </option>\r\n                            <option key={\"0\"} value={0}>\r\n                                No Guarantee\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Max Day Refill\r\n                        </Label>\r\n                        <Input style={{fontWeight: \"bold\"}}\r\n                               onChange={(e) => setmaxtimerefill(parseInt(e.target.value))}\r\n                               className=\"form-control form-control-solid\"\r\n                               type=\"select\"\r\n                               value={maxtimerefill}\r\n                        >\r\n                            <option key={\"0\"} value={0}>\r\n                                No Refill\r\n                            </option>\r\n                            <option key={\"7\"} value={7}>\r\n                                7 days Refill\r\n                            </option>\r\n                            <option key={\"15\"} value={15}>\r\n                                15 days Refill\r\n                            </option>\r\n                            <option key={\"30\"} value={30}>\r\n                                30 days Refill\r\n                            </option>\r\n                            <option key={\"60\"} value={60}>\r\n                                60 days Refill\r\n                            </option>\r\n                            <option key={\"90\"} value={90}>\r\n                                90 days Refill\r\n                            </option>\r\n                            <option key={\"-1\"} value={-1}>\r\n                                Lifetime\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Check Time\r\n                        </Label>\r\n                        <Input style={{fontWeight: \"bold\"}}\r\n                               onChange={(e) => setchecktime(parseInt(e.target.value))}\r\n                               className=\"form-control form-control-solid\"\r\n                               type=\"select\"\r\n                               value={checktime}\r\n                        >\r\n                            <option key={\"1\"} value={1}>\r\n                                Yes\r\n                            </option>\r\n                            <option key={\"0\"} value={0}>\r\n                                No\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Rate($)\r\n                        </Label>\r\n                        <Input\r\n                            id=\"rate\"\r\n                            name=\"rate\"\r\n                            value={rate}\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder=\"ví dụ : 100\"\r\n                            onChange={(e) => setrate(parseFloat(e.target.value))}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label style={{fontWeight: 'bold'}} for=\"exampleEmail\" className=\"required form-label\">\r\n                            Enabled\r\n                        </Label>\r\n                        <Input style={{fontWeight: \"bold\"}}\r\n                               onChange={(e) => setenabled(parseInt(e.target.value))}\r\n                               className=\"form-control form-control-solid\"\r\n                               type=\"select\"\r\n                               value={enabled}\r\n                        >\r\n                            <option key={\"on\"} value={1}>\r\n                                ON\r\n                            </option>\r\n                            <option key={\"off\"} value={0}>\r\n                                OFF\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\">Thoát</button>\r\n                <button type=\"button\" onClick={updateUser} style={{backgroundColor: \"#26695c\", color: \"white\"}}\r\n                        className=\"btn \">Lưu\r\n                </button>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\EditModal\\index.tsx",["2784","2785","2786","2787","2788","2789","2790","2791","2792","2793","2794","2795","2796","2797","2798","2799","2800","2801","2802","2803","2804","2805","2806"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/ordercheckcancel/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [vieworder, setvieworder] = useState(item.vieworder)\r\n    const [user,setUser]=useState(username)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n\r\n        if (vieworder<parseInt((item.viewtotal).toFixed(0))+100) {\r\n            alert(\"Số giờ thay đổi phải lớn hơn tổng giờ đã chạy ít nhất 100h! (>=\"+(item.vieworder+100).toFixed(0)+\"view)\")\r\n            return\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            maxthreads,\r\n            vieworder,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid} | Đã chạy {format1((item.viewtotal==null?0:item.viewtotal))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {vieworder<item.vieworder?\"hoàn\": \"trả thêm\"}: {format1(((vieworder<item.vieworder?(item.vieworder-vieworder):(vieworder-item.vieworder))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\modals\\EditModal\\index.tsx",["2807","2808","2809","2810","2811","2812","2813","2814","2815","2816","2817"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/setting/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\n\r\ntype Props = {\r\n    item: AccountModel\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst EditModal: React.FC<Props> = ({ item }) => {\r\n    console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [pricerate, setpricerate] = useState(item.pricerate)\r\n    const [bonus, setbonus] = useState(item.bonus)\r\n    const [maxordervn, setmaxordervn] = useState(item.maxordervn)\r\n    const [maxorderus, setmaxorderus] = useState(item.maxorderus)\r\n    const [maxorderbuffhus, setmaxorderbuffhus] = useState(item.maxorderbuffhus)\r\n    const [maxorderbuffhvn, setmaxorderbuffhvn] = useState(item.maxorderbuffhvn)\r\n    const [threadmin, setthreadmin] = useState(item.threadmin)\r\n    const [redirectvn, setredirectvn] = useState(item.redirectvn)\r\n    const [redirectus, setredirectus] = useState(item.redirectus)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const updateUser = () => {\r\n        if(pricerate<0){\r\n            alert(\"Số tiền nhỏ nhất là 0đ!\")\r\n            return\r\n        }\r\n        if(bonus>100 || bonus<0){\r\n            alert(\"Giá trị bonus không hợp lệ!\")\r\n            return\r\n        }\r\n        if(maxordervn<0 || maxorderus <0){\r\n            alert(\"Giá trị số đơn max không hợp lệ!\")\r\n            return\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            pricerate,\r\n            bonus,\r\n            maxordervn,\r\n            maxorderus,\r\n            maxorderbuffhvn,\r\n            maxorderbuffhus,\r\n            threadmin,\r\n            redirectvn,\r\n            redirectus,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update Setting</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Bonus</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={bonus} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setbonus(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">%</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn max(VN)</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxordervn} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxordervn(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn max(US)</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxorderus} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxorderus(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn max(US)</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxorderus} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxorderus(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn giờ VN chạy(MAX)</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxorderbuffhvn} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxorderbuffhvn(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn giờ US chạy(MAX)</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxorderbuffhus} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxorderbuffhus(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Min Thread View(%)</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={threadmin} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setthreadmin(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">%</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Redirect VN BuffH</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={redirectvn} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setredirectvn(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">/1000</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Redirect US BuffH</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={redirectus} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setredirectus(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">/1000</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx",["2818","2819","2820"],"/* eslint-disable react/jsx-no-target-blank */\r\nimport React , { useState } from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { KTSVG } from '../../../helpers'\r\nimport { AsideMenuItemWithSub } from './AsideMenuItemWithSub'\r\nimport { AsideMenuItem } from './AsideMenuItem'\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\n\r\nexport function AsideMenuMain() {\r\n  const intl = useIntl()\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n\r\n    const [isVPS, setIsVPS] = useState(false);\r\n    const [isProxy, setIsProxy] = useState(false);\r\n    const [isView, setIsView] = useState(false);\r\n    const [isCmt, setIsCmt] = useState(false);\r\n    const [isTraffic, setIsTraffic] = useState(false);\r\n    const [isFollowerTiktok, setFollowerTiktok] = useState(false);\r\n\r\n    // State to track button active state\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [isActiveProxy, setIsActiveProxy] = useState(false);\r\n    const [isActiveView, setIsActiveView] = useState(false);\r\n    const [isActiveCmt, setIsActiveCmt] = useState(false);\r\n    const [isActiveTraffic, setIsActiveTraffic] = useState(false);\r\n    const [isActiveFollowerTiktok, setIsActiveFollowerTiktok] = useState(false);\r\n\r\n    // Function to toggle the isAdmin state\r\n    const toggleVPS = () => {\r\n        setIsVPS(!isVPS);\r\n        setIsActive( !isActive);\r\n    };\r\n    const toggleProxy = () => {\r\n        setIsProxy(!isProxy);\r\n        setIsActiveProxy( !isActiveProxy);\r\n    };\r\n    const toggleView = () => {\r\n        setIsView(!isView);\r\n        setIsActiveView( !isActiveView);\r\n    };\r\n    const toggleCmt = () => {\r\n        setIsCmt(!isCmt);\r\n        setIsActiveCmt( !isActiveCmt);\r\n    };\r\n    const toggleTraffic = () => {\r\n        setIsTraffic(!isTraffic);\r\n        setIsActiveTraffic( !isActiveTraffic);\r\n    };\r\n    const toggleFollowerTiktok = () => {\r\n        setFollowerTiktok(!isFollowerTiktok);\r\n        setIsActiveFollowerTiktok( !isActiveFollowerTiktok);\r\n    };\r\n    return (\r\n    <>\r\n        <AsideMenuItem\r\n            to='/crafted/orderfindhistory'\r\n            title='Tìm kiếm nhanh'\r\n            icon='/media/icons/duotune/general/gen004.svg'\r\n            fontIcon='bi-app-indicator'\r\n        />\r\n        {/*danh sach*/}\r\n        {role === \"ROLE_ADMIN\" &&<button style={{backgroundColor:\"rgba(175,202,234,0.97)\"}}  onClick={toggleVPS} className={isActive ? \"header-cus__active\" : \"\"}> <div className=\"header-cus__menu-item \">\r\n            <div className=\"header-cus__menu-link header-cus__without-sub\"  style={{textDecorationLine: 'none', fontWeight: 'bold',marginLeft:9}}>\r\n                      <span className=\"header-cus__menu-icon\">\r\n                         <span style={{fill:\"red\"}} className=\"svg-icon svg-icon-2\">\r\n                                <KTSVG  path=\"/media/icons/duotune/ecommerce/ecm009.svg\" className='svg-icon-2' />\r\n                         </span>\r\n                      </span>\r\n                <span className=\"header-cus__menu-title\">Danh Sách VPS</span>\r\n                <span className=\"header-cus__down\">⇑</span>\r\n            </div>\r\n        </div>\r\n        </button>}\r\n        { isVPS && (\r\n            <div>\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/vps'\r\n                        title='Danh sách VPS View'\r\n                        icon='/media/icons/duotune/ecommerce/ecm009.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/listvpssub'\r\n                        title='Danh sách VPS Sub'\r\n                        icon='/media/icons/duotune/ecommerce/ecm009.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/listvpstiktok'\r\n                        title='Danh sách VPS TikTok'\r\n                        icon='/media/icons/duotune/ecommerce/ecm009.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n            </div>\r\n\r\n        ) }\r\n\r\n        {role === \"ROLE_ADMIN\" &&<button style={{backgroundColor:\"rgba(198,240,246,0.84)\"}}  onClick={toggleProxy} className={isActiveProxy ? \"header-cus__active\" : \"\"}>\r\n            <div className=\"header-cus__menu-item\">\r\n                <div className=\"header-cus__menu-link header-cus__without-sub\"  style={{textDecorationLine: 'none', fontWeight: 'bold',marginLeft:9}}>\r\n                      <span className=\"header-cus__menu-icon\">\r\n                         <span className=\"svg-icon svg-icon-2\">\r\n                                <KTSVG path=\"/media/icons/duotune/abstract/abs018.svg\" className='svg-icon-2' />\r\n                         </span>\r\n                      </span>\r\n                    <span className=\"header-cus__menu-title\">Danh Sách Proxy</span>\r\n                    <span className=\"header-cus__down\">⇑</span>\r\n                </div>\r\n            </div>\r\n        </button>}\r\n        { isProxy && (\r\n            <div>\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/proxyview'\r\n                        title='Danh sách Proxy View'\r\n                        icon='/media/icons/duotune/abstract/abs018.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/proxysub'\r\n                        title='Danh sách Proxy Sub'\r\n                        icon='/media/icons/duotune/abstract/abs018.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/socklist'\r\n                        title='Danh sách Proxy Socks5'\r\n                        icon='/media/icons/duotune/abstract/abs018.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n                {\r\n                    role === \"ROLE_ADMIN\" && <AsideMenuItem\r\n                        to='/crafted/authenlist'\r\n                        title='Danh sách IP Authen'\r\n                        icon='/media/icons/duotune/abstract/abs018.svg'\r\n                        fontIcon='bi-person'\r\n                    />\r\n                }\r\n            </div>\r\n        ) }\r\n        <button style={{backgroundColor:\"rgba(238,184,184,0.97)\"}}  onClick={toggleView} className={isActiveView ? \"header-cus__active\" : \"\"}>\r\n            <div className=\"header-cus__menu-item\">\r\n                <div className=\"header-cus__menu-link header-cus__without-sub\"  style={{textDecorationLine: 'none', fontWeight: 'bold',marginLeft:9}}>\r\n                      <span className=\"header-cus__menu-icon\">\r\n                         <span className=\"svg-icon svg-icon-2\">\r\n                                <KTSVG path=\"/media/icons/duotune/social/soc007.svg\" className='svg-icon-2' />\r\n                         </span>\r\n                      </span>\r\n                    <span className=\"header-cus__menu-title\">View Youtube</span>\r\n                    <span className=\"header-cus__down\">⇑</span>\r\n                </div>\r\n            </div>\r\n        </button>\r\n        { isView && (\r\n            <div>\r\n                <AsideMenuItem\r\n                    children={AsideMenuMain}\r\n                    to='/crafted/orders'\r\n                    title='Đơn Views'\r\n                    icon='/media/icons/duotune/social/soc007.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n                <AsideMenuItem\r\n                    children={AsideMenuMain}\r\n                    to='/crafted/orderpending'\r\n                    title='Đơn Views Pending'\r\n                    icon='/media/icons/duotune/social/soc007.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n                {\r\n                    (role === \"ROLE_ADMIN\" || role===\"ROLE_SUPPORT\") &&  <AsideMenuItem\r\n                        to='/crafted/ordercheck'\r\n                        title='Đơn Views duyệt hủy'\r\n                        icon='/media/icons/duotune/social/soc007.svg'\r\n                        fontIcon='bi-app-indicator'\r\n                    />\r\n                }\r\n\r\n                {\r\n                    (role === \"ROLE_ADMIN\" || role===\"ROLE_SUPPORT\") &&  <AsideMenuItem\r\n                        to='/crafted/orderbaohanh'\r\n                        title='Bảo hành & Hoàn Tiền'\r\n                        icon='/media/icons/duotune/social/soc007.svg'\r\n                        fontIcon='bi-app-indicator'\r\n                    />\r\n                }\r\n                <AsideMenuItem\r\n                    to='/crafted/orderhistory'\r\n                    title='Lịch sử Views'\r\n                    icon='/media/icons/duotune/social/soc007.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n            </div>\r\n        ) }\r\n        <button style={{backgroundColor:\"rgba(243,238,224,0.46)\"}}  onClick={toggleCmt} className={isActiveCmt ? \"header-cus__active\" : \"\"}>\r\n            <div className=\"header-cus__menu-item\">\r\n                <div className=\"header-cus__menu-link header-cus__without-sub\"  style={{textDecorationLine: 'none', fontWeight: 'bold',marginLeft:9}}>\r\n                      <span className=\"header-cus__menu-icon\">\r\n                         <span className=\"svg-icon svg-icon-2\">\r\n                                <KTSVG path=\"/media/icons/duotune/communication/com003.svg\" className='svg-icon-2' />\r\n                         </span>\r\n                      </span>\r\n                    <span className=\"header-cus__menu-title\">Comment Youtube</span>\r\n                    <span className=\"header-cus__down\">⇑</span>\r\n                </div>\r\n            </div>\r\n        </button>\r\n        { isCmt && (\r\n            <div>\r\n                <AsideMenuItem\r\n                    to='/crafted/ordercomments'\r\n                    title='Đơn Comments'\r\n                    icon='/media/icons/duotune/communication/com003.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n                <AsideMenuItem\r\n                    to='/crafted/ordercommenthistory'\r\n                    title='Lịch sử Comments'\r\n                    icon='/media/icons/duotune/communication/com003.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n            </div>\r\n        ) }\r\n        <button  style={{backgroundColor:\"rgba(245,228,206,0.97)\"}}  onClick={toggleTraffic} className={isActiveTraffic ? \"header-cus__active\" : \"\"}>\r\n            <div className=\"header-cus__menu-item\">\r\n                <div className=\"header-cus__menu-link header-cus__without-sub\"  style={{textDecorationLine: 'none', fontWeight: 'bold',marginLeft:9}}>\r\n                      <span className=\"header-cus__menu-icon\">\r\n                         <span className=\"svg-icon svg-icon-2\">\r\n                                <KTSVG path=\"/media/icons/duotune/graphs/gra005.svg\" className='svg-icon-2' />\r\n                         </span>\r\n                      </span>\r\n                    <span className=\"header-cus__menu-title\">Traffic Website</span>\r\n                    <span className=\"header-cus__down\">⇑</span>\r\n                </div>\r\n            </div>\r\n        </button>\r\n        { isTraffic && (\r\n            <div>\r\n                <AsideMenuItem\r\n                    to='/crafted/ordertraffic'\r\n                    title='Đơn Traffic Website'\r\n                    icon='/media/icons/duotune/graphs/gra005.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n\r\n                <AsideMenuItem\r\n                    to='/crafted/ordertraffiwebhistory'\r\n                    title='Lịch sử Traffic Website'\r\n                    icon='/media/icons/duotune/graphs/gra005.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n            </div>\r\n        ) }\r\n        <button  style={{backgroundColor:\"rgb(236,227,253)\"}}  onClick={toggleFollowerTiktok} className={isActiveFollowerTiktok ? \"header-cus__active\" : \"\"}>\r\n            <div className=\"header-cus__menu-item\">\r\n                <div className=\"header-cus__menu-link header-cus__without-sub\"  style={{textDecorationLine: 'none', fontWeight: 'bold',marginLeft:9}}>\r\n                      <span className=\"header-cus__menu-icon\">\r\n                         <span className=\"svg-icon svg-icon-2\">\r\n                                <KTSVG path=\"/media/icons/duotune/social/soc008.svg\" className='svg-icon-2' />\r\n                         </span>\r\n                      </span>\r\n                    <span className=\"header-cus__menu-title\">Follower TikTok</span>\r\n                    <span className=\"header-cus__down\">⇑</span>\r\n\r\n                </div>\r\n            </div>\r\n        </button>\r\n        { isFollowerTiktok && (\r\n            <div>\r\n                <AsideMenuItem\r\n                    to='/crafted/orderfollowertiktok'\r\n                    title='Đơn Follower TikTok'\r\n                    icon='/media/icons/duotune/social/soc008.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n                <AsideMenuItem\r\n                    to='/crafted/orderfollowerstiktokhistory'\r\n                    title='Lịch sử Follower Tiktok'\r\n                    icon='/media/icons/duotune/social/soc008.svg'\r\n                    fontIcon='bi-app-indicator'\r\n                />\r\n            </div>\r\n        ) }\r\n        {role != \"ROLE_SUPPORT\"&&<AsideMenuItem\r\n            to='/crafted/balance'\r\n            title='Biến động số dư'\r\n            icon='/media/icons/duotune/finance/fin002.svg'\r\n            fontIcon='bi-app-indicator'\r\n        />}\r\n        {\r\n            role === \"ROLE_ADMIN\" &&       <AsideMenuItem\r\n                to='/dashboard'\r\n                icon='/media/icons/duotune/general/gen032.svg'\r\n                title='Thống kê doanh thu'\r\n                fontIcon='bi-app-indicator'\r\n            />\r\n        }\r\n        <AsideMenuItem\r\n            to='/crafted/service'\r\n            title='Danh sách dịch vụ'\r\n            icon='/media/icons/duotune/general/gen025.svg'\r\n            fontIcon='bi-app-indicator'\r\n        />\r\n        {\r\n            (role === \"ROLE_ADMIN\" || role===\"ROLE_SUPPORT\") && <AsideMenuItem\r\n                to='/crafted/user'\r\n                title='Danh sách User'\r\n                icon='/media/icons/duotune/communication/com006.svg'\r\n                fontIcon='bi-person'\r\n            />\r\n        }\r\n        {\r\n            (role === \"ROLE_ADMIN\" || role===\"ROLE_SUPPORT\") && <AsideMenuItem\r\n                to='/crafted/setting'\r\n                title='Cài đặt hệ thống'\r\n                icon='/media/icons/duotune/coding/cod001.svg'\r\n                fontIcon='bi-person'\r\n            />\r\n        }\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\StaticList.tsx",["2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832","2833"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport {ChannelStaticModel, HistoryModel} from 'app/modules/history/models/Account'\r\nimport ChannelStaticItem from './components/ChannelStaticItem'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { actions } from './redux/AccountRedux'\r\nimport { RootState } from 'setup'\r\nimport HistoryItem from \"./components/HistoryItem\";\r\ntype Props = {\r\n  className: string,\r\n}\r\n\r\nconst StaticList: React.FC<Props> = ({ className }) => {\r\n  const dispatch = useDispatch()\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  let [useEff, setuseEff] = useState(0)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const statics:HistoryModel[] = useSelector<RootState>(({ histories }) => histories.statics, shallowEqual) as HistoryModel[] || []\r\n  let count_money=0;\r\n  let count_moneysub=0;\r\n  let count_order=0;\r\n\r\nasync function getbyday(){\r\n  if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n    await dispatch(actions.requestStatics(''))\r\n  }else{\r\n    await dispatch(actions.requestStatics(user))\r\n  }\r\n}\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(useEff<=1){\r\n      getbyday()\r\n    }\r\n    if(statics.length>0){\r\n      setLoading(false)\r\n    }\r\n  }, [statics])\r\n  statics&&statics?.map((item: HistoryModel,index:number) => {\r\n    count_money=item.count_view\r\n    count_moneysub=item.count_viewsub\r\n    count_order=item.count_order\r\n  })\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-8 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Thống Kê Doanh Thu</span>\r\n              <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span ><span className='badge badge-success 1' style={{fontSize:11,color:\"black\",backgroundColor:\"white\",marginRight:3,marginBottom:5}}>Tổng đơn {count_order}</span><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\",marginRight:3,marginBottom:5}}>Tổng tiền {count_money.toFixed(3)}$</span><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\",marginRight:3,marginBottom:5}}>Hoàn {count_moneysub.toFixed(3)}$</span><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(3,37,80,0.97)\",marginRight:3,marginBottom:5}}>Còn lại {(count_money-count_moneysub).toFixed(3)}$</span></span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr>\r\n                <th className='min-w-30px' style={{fontWeight:\"bold\",fontSize:12}}>#</th>\r\n                <th className='min-w-100px'  style={{fontWeight:\"bold\",fontSize:12}}>Date</th>\r\n                <th className='min-w-100px'  style={{fontWeight:\"bold\",fontSize:12}}>Payments</th>\r\n                <th className='min-w-100px'  style={{fontWeight:\"bold\",fontSize:12}}>Refunds</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {\r\n                statics&&statics?.map((item: HistoryModel,index:number) => {\r\n                  return <HistoryItem key={+index} item={item} index={index}/>\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { StaticList }\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx",["2834","2835","2836","2837","2838","2839","2840","2841","2842","2843"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orders/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [max_thread, setMax_thread] = useState(item.max_threads)\r\n    const [view_percent,setView_percent]=useState(item.view_percent)\r\n    const [home_rate,setHome_rate]=useState(0)\r\n    const [search_rate,setSearch_rate]=useState(80)\r\n    const [suggest_rate,setSuggest_rate]=useState(0)\r\n    const [direct_rate,setDirect_rate]=useState(20)\r\n    const [enabled,setEnabled]=useState(item.enabled)\r\n    const [like_rate,setLike_rate]=useState(25)\r\n    const [comment_rate,setComment_rate]=useState(25)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n\r\n    const submit = () => {\r\n\r\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(like_rate>100||like_rate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>1000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            home_rate,\r\n            direct_rate,\r\n            search_rate,\r\n            enabled,\r\n            max_thread,\r\n            view_percent,\r\n            suggest_rate\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ cho {item.channel_title}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Cài đặt danh sách đơn</p>\r\n                    <Form>\r\n                        <p>Nguồn view tổng = 100%</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Home \r\n                                </Label>\r\n                                <Input\r\n                                    id=\"home_rate\"\r\n                                    name=\"home_rate\"\r\n                                    value={home_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Search\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"search_rate\"\r\n                                    name=\"search_rate\"\r\n                                    value={search_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Suggest\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"suggest_rate\"\r\n                                    name=\"suggest_rate\"\r\n                                    value={suggest_rate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Direct\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"direct_rate\"\r\n                                    name=\"direct_rate\"\r\n                                    value={direct_rate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <p>Cài đặt tương tác</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Tỉ lệ Like\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"like_rate\"\r\n                                    name=\"like_rate\"\r\n                                    value={like_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Tỉ lệ comment\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"comment_rate\"\r\n                                    name=\"comment_rate\"\r\n                                    value={comment_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng max\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={max_thread}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                   Time Buff(h)\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={view_percent}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Trạng thái\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={enabled}\r\n                            >\r\n                                <option key={1} value={1}>\r\n                                    {\"Chạy\"}\r\n                                </option>\r\n                                <option key={2} value={2}>\r\n                                    {\"Test1-Vt-Off-Seach\"}\r\n                                </option>\r\n                                <option key={3} value={3}>\r\n                                    {\"Test2-Vt-Off-Direct\"}\r\n                                </option>\r\n                                <option key={4} value={4}>\r\n                                    {\"Test3-Vt-On-Seach\"}\r\n                                </option>\r\n                                <option key={5} value={5}>\r\n                                    {\"Test4-Vt-On-Direct\"}\r\n                                </option>\r\n                                <option key={6} value={6}>\r\n                                    {\"Test5-Hc-Off-Seach\"}\r\n                                </option>\r\n                                <option key={7} value={7}>\r\n                                    {\"Test6-Hc-Off-Direct\"}\r\n                                </option>\r\n                                <option key={8} value={8}>\r\n                                    {\"Test7-Hc-On-5p\"}\r\n                                </option>\r\n                                <option key={9} value={9}>\r\n                                    {\"Test8-Hc-On-finger\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Ngừng\"}\r\n                                </option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  style={{color:'white',backgroundColor:\"#26695c\"}}   onClick={submit} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\AssetHelpers.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\BhManualModal\\index.tsx",["2844","2845","2846","2847","2848","2849","2850","2851","2852","2853","2854","2855","2856","2857","2858","2859","2860","2861","2862","2863","2864","2865","2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {addorderv2, bhorderv2} from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst BhManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [homerate,setHome_rate]=useState(0)\r\n    //\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await bhorderv2(video)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + timebuff;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (timebuff < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        if (homerate + searchrate + suggestrate + directrate != 100) {\r\n            alert(\"Tổng nguồn view không đúng!\")\r\n            return\r\n        }\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Bảo hành với DS VideoId hoặc OrderId':'Bảo hành thành công: '+sumorder+' | Giờ: '+sumtime.toPrecision()+'view | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách VideoId hoặc Orderid\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 VideoId hoặc Orderid một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time} view</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BhManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\CheckBhVideoIdManualModal\\index.tsx",["2880","2881","2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899","2900","2901","2902","2903","2904","2905","2906","2907","2908","2909","2910","2911","2912","2913","2914","2915","2916","2917","2918","2919","2920","2921","2922","2923","2924","2925","2926","2927","2928"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {\r\n    checkbhordervideoidv2,\r\n    htordervideoidv2,\r\n    bhordervideoidv2\r\n} from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\nimport {randomInt} from \"crypto\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst CheckBhVideoIdManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.groups, shallowEqual) as Group[] || []\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [homerate,setHome_rate]=useState(0)\r\n    //\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n\r\n    async function clickBHHandler (videoid:string,id:string){\r\n        await bh_video_ver2(videoid)\r\n        //onst newList = list_order.filter((item) => item.id.indexOf(id)<0);\r\n        //setList_Todo(newList);\r\n    }\r\n    async function clickHTHandler (videoid:string,id:string){\r\n        await ht_video_ver2(videoid)\r\n        //onst newList = list_order.filter((item) => item.id.indexOf(id)<0);\r\n        //setList_Todo(newList);\r\n    }\r\n\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        orderid:0,\r\n        videoid:\"\",\r\n        state:\"\",\r\n        timestart:0,\r\n        timeend:0,\r\n        vieworder:0,\r\n        viewcount:0,\r\n        viewstart:0,\r\n        viewbh:0,\r\n        refund:0,\r\n\r\n    },])\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        setSumOrder(0)\r\n        let or={\r\n            id:\"0000000000\",\r\n            orderid:0,\r\n            videoid:\"\",\r\n            state:\"\",\r\n            timestart:0,\r\n            timeend:0,\r\n            vieworder:0,\r\n            viewcount:0,\r\n            viewbh:0,\r\n            viewstart:0,\r\n            refund:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function sleep(ms:number) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    async function bh_video_ver2(video: string) {\r\n        await bhordervideoidv2(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview == \"true\") {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0\r\n                    ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: \"BH thành công!\",\r\n                            };\r\n\r\n                            return updatedItem;\r\n                        }\r\n\r\n                        return item;\r\n                    });\r\n\r\n                    setList_Todo(newList);\r\n                } else {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0|| item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: data.data.videoview\r\n                            };\r\n                            return updatedItem;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setList_Todo(newList);\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n\r\n    async function ht_video_ver2(video: string) {\r\n        await htordervideoidv2(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview == \"true\") {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: \"Đã hoàn \"+data.data.price+ \"$\",\r\n                            };\r\n\r\n                            return updatedItem;\r\n                        }\r\n\r\n                        return item;\r\n                    });\r\n\r\n                    setList_Todo(newList);\r\n                } else {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0|| item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: data.data.videoview\r\n                            };\r\n                            console.log(updatedItem)\r\n                            return updatedItem;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setList_Todo(newList);\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n\r\n    async function order_video_ver2(video: string) {\r\n            await checkbhordervideoidv2(video)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        const index = list_order.findIndex(list_order => list_order.videoid.indexOf(data.data.videoid)>=0);\r\n                        if(index<0){\r\n                            setOrderDoneNum(orderdonenum + 1)\r\n                            let orderitem = {\r\n                                id: randomString(10),\r\n                                videoid: data.data.videoid,\r\n                                state: \"OK\",\r\n                                timestart:data.data.timestart,\r\n                                timeend: data.data.timeend,\r\n                                vieworder: data.data.vieworder,\r\n                                viewcount: data.data.viewcount,\r\n                                viewbh: data.data.viewbh,\r\n                                viewstart:data.data.viewstart,\r\n                                orderid: data.data.orderid,\r\n                                refund:data.data.refund\r\n                            }\r\n\r\n                            //sumprice = sumprice + data.data.price\r\n                            //setSumPrice(sumprice)\r\n                            //sumtime = sumtime + timebuff;\r\n                            //setSumTime(sumtime)\r\n                            sumorder = sumorder + 1\r\n                            setSumOrder(sumorder)\r\n                            setList_Todo([...list_order, orderitem])\r\n                            list_order.push(orderitem)\r\n                        }\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            orderid:0,\r\n                            videoid:video,\r\n                            state:data.data.videoview,\r\n                            timestart:0,\r\n                            timeend:0,\r\n                            vieworder:0,\r\n                            viewcount:0,\r\n                            viewstart:0,\r\n                            viewbh:0,\r\n                            refund:0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        orderid:0,\r\n                        videoid:video,\r\n                        state:\"Error\",\r\n                        timestart:0,\r\n                        timeend:0,\r\n                        vieworder:0,\r\n                        viewcount:0,\r\n                        viewstart:0,\r\n                        viewbh:0,\r\n                        refund:0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            const videoidOnColum = videoidlist[i].split(',')\r\n            for(var j=0;j<videoidOnColum.length;j++)\r\n            {\r\n                let videos = videoidOnColum[j]\r\n                await order_video_ver2(videos)\r\n                await sleep(200);\r\n\r\n            }\r\n            //await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Check bảo hành với DS VideoId hoặc OrderId':'Check thành công: '+sumorder}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách VideoId\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 VideoId hoặc Orderid một dòng( Hoặc phân cách bằng dấu phẩy)\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid+randomString(10)} key={item.videoid+randomString(10)}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-1 col-sm-auto align-items-center\">{item.orderid!=0?item.orderid+' | ':''}{item.videoid}</div>\r\n                                                <div style={{color:(item.state.indexOf('OK')>=0 || item.state.indexOf('$')>=0 || item.state.indexOf('BH')>=0)?'green':'red'}} className=\"col-1 col-sm-auto align-items-center\">{(item.refund>0?\"Refunded \":\"\")+ item.state}</div>\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{new Date(item.timestart).toLocaleDateString('vn-VN') +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')}</div>}\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{new Date(item.timeend).toLocaleDateString('vn-VN') +\" \"+ new Date(item.timeend).toLocaleTimeString('vn-VN')}</div>}\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{item.viewstart}</div>}\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{item.viewcount}/{item.vieworder+item.viewstart}</div>}\r\n                                                {item.timestart>0&&<div style={{color:item.viewbh>0?\"red\":\"black\"}} className=\"col-1 col-sm-auto align-items-center\">\r\n                                                    {item.viewbh>0?item.viewbh:0}\r\n                                                </div>}\r\n                                                {item.viewbh<=0&&<div style={{color:\"green\"\r\n                                                }} className=\"col-1 col-sm-auto align-items-center\">Không cần BH</div>}\r\n                                                {item.viewbh>0&&<button onClick={()=>clickBHHandler(item.videoid,item.id)} style={{backgroundColor:\"red\",borderRadius:10,color:\"white\",marginRight:5}} type=\"button\"  className=\"col-1 col-sm-auto align-items-center\" >Bảo hành</button>}\r\n                                                {item.viewbh>0&&<button onClick={()=>clickHTHandler(item.videoid,item.id)} style={{backgroundColor:\"orange\",borderRadius:10,color:\"black\"}} type=\"button\"  className=\"col-1 col-sm-auto align-items-center\" >Hoàn tiền</button>}\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thực hiện\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CheckBhVideoIdManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\BhManualModal\\index.tsx",["2929","2930","2931","2932","2933","2934","2935","2936","2937","2938","2939","2940","2941","2942","2943","2944","2945","2946","2947","2948","2949","2950","2951","2952","2953","2954","2955","2956","2957","2958","2959","2960","2961","2962","2963","2964"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\BhManualModal\\index.tsx",["2965","2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977","2978","2979","2980","2981","2982","2983","2984","2985","2986","2987","2988","2989","2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {addorderv2, bhorderv2} from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst BhManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.groups, shallowEqual) as Group[] || []\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [homerate,setHome_rate]=useState(0)\r\n    //\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await bhorderv2(video)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + timebuff;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (timebuff < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        if (homerate + searchrate + suggestrate + directrate != 100) {\r\n            alert(\"Tổng nguồn view không đúng!\")\r\n            return\r\n        }\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Check bảo hành với DS VideoId hoặc Orderid':'Bảo hành thành công: '+sumorder+' | Giờ: '+sumtime.toPrecision()+'view | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách VideoId hoặc Orderid\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 VideoId hoặc Orderid một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time} view</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BhManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\users\\components\\UserItem\\index.tsx",["3001","3002","3003","3004","3005","3006","3007","3008","3009"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/users/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AccountModel,\r\n    index:number\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.username!) == true) {\r\n            dispatch(actions.deleteVpsRequest(item.username))\r\n        }\r\n    }\r\n    return (\r\n\r\n        <tr>\r\n            <td className='w-25px'>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <span >\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\r\n                        {item.username}\r\n                    </text>\r\n                            </span>\r\n            </td>\r\n            <td>\r\n                <span className='badge badge-dark' style={{fontSize:11, backgroundColor:item.role===\"ROLE_ADMIN\"?'#00b65c':'#396977'}}>\r\n                    <text >\r\n                    {item.role}\r\n                    </text>\r\n                </span>\r\n\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {format1(item.balance)}$\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.rate}%\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.discount}%\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {format1(item.maxorder)}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.vip}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.note}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\components\\UserItem\\index.tsx",["3010","3011","3012","3013","3014","3015","3016","3017"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/setting/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AccountModel,\r\n    index:number\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    return (\r\n\r\n        <tr>\r\n            <td>\r\n                <span>\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}} >\r\n                    {item.bonus}%\r\n                    </text>\r\n                </span>\r\n\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxordervn}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxorderus}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxorderbuffhvn}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxorderbuffhus}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.threadmin}%\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\",color:\"red\"}} >\r\n                                        {item.redirectvn}/1000\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\",color:\"red\"}} >\r\n                                        {item.redirectus}/1000\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\services\\components\\UserItem\\index.tsx",["3018","3019","3020","3021","3022","3023","3024","3025","3026","3027","3028"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/services/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport {RootState} from \"../../../../../setup\";\r\ntype Props = {\r\n    item: AccountModel,\r\n    index:number\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"Bạn chắc chắn muốn xóa service: \"+item.service!) == true) {\r\n            dispatch(actions.deleteVpsRequest(item.geo))\r\n        }\r\n    }\r\n    return (\r\n\r\n        <tr style={{margin:100}}>\r\n            <td className='w-25px'>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <span style={{fontSize:11,color:\"white\",backgroundColor:\"#435e57\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.service}</span>\r\n                <span style={{fontSize:11,color:\"white\",backgroundColor:\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.category}</span>\r\n                <br/>\r\n                <span style={{fontSize:11,color:\"white\",backgroundColor:\"#b6191a\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.rate}$</span>\r\n                <span style={{ color:item.checktime>0?'white':'black',fontSize:11,backgroundColor:item.checktime>0?\"rgba(218,30,30,0.97)\":\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.mintime}-{item.maxtime} minutes</span>\r\n                <br/>\r\n                <span style={{fontSize:11,color:\"white\",backgroundColor:\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success 1' >\r\n                                        {item.min>=1000?format1(item.min/1000)+\"K\":item.min}-{item.max>=1000?format1(item.max/1000)+\"K\":item.max}\r\n                    </span>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:\"#435e57\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.type}</span>\r\n            </td>\r\n            <td >\r\n                    <span>\r\n                        {item.suggest>0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.platform.indexOf(\"Website\")>=0?\"Referral\":\"Suggest\"} | <span style={{color:\"#ffffff\"}}>{item.suggest}%</span></span>}\r\n                        {item.search>0&&<span style={{ color:'black',fontSize:11,backgroundColor:\"#c0dee1\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Search | <span style={{color:\"black\"}}>{item.search}%</span></span>}\r\n                        {item.dtn>0&&<span style={{ color:'black',fontSize:11,backgroundColor:\"#f1b65f\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Browse features | <span style={{color:\"#000000\"}}>{item.dtn}%</span></span>}\r\n                        {item.direct>0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"#6d7773\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Direct | <span style={{color:\"#ffffff\"}}>{item.direct}%</span></span>}\r\n                        {item.embed>0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"#af171b\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Embed | <span style={{color:\"#ffffff\"}}>{item.embed}%</span></span>}\r\n                        {item.external>0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"rgb(68,134,94)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'> {item.platform.indexOf(\"Website\")>=0?\"Social\":\"External\"} | {item.external}%</span>}\r\n                        {item.platform.indexOf(\"Website\")>=0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>CTR | {item.click_web}%</span>}\r\n                        {item.platform.indexOf(\"Website\")>=0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(220,133,18,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Package | {item.expired} day</span>}\r\n                        {item.niche==1&&<span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(34,126,231,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Topic Videos</span>}\r\n                    <br/>\r\n                    <span style={{fontSize:10.5,fontWeight:\"bold\"}}>{item.name}</span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxorder}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.thread}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                                   <span >\r\n                    {item.geo.indexOf('us')>=0?<img style={{width:20,height:20,borderImage:\"-moz-initial\"}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:item.geo.indexOf('vn')>=0?\r\n                        <img style={{width:20,height:20,borderImage:\"-moz-initial\"}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />:item.geo.indexOf('kr')>=0?\r\n                            <img style={{width:20,height:20,borderImage:\"-moz-initial\"}} src={toAbsoluteUrl('/media/flags/south-korea.svg')} alt='metronic' />:\r\n                            <span style={{fontSize:11,color:\"white\",backgroundColor:\"rgb(9,9,9)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.geo.toUpperCase()}</span>}\r\n                </span>\r\n            </td>\r\n            <td >\r\n                <span style={{fontSize:11,color:\"white\",backgroundColor:item.enabled===1?\"#b7080f\":\"#9ca1a0\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.enabled===1 ?\"ON\":\"OFF\"}</span>\r\n            </td>\r\n            <td >\r\n                <span style={{fontSize:11,color:\"white\",backgroundColor:item.refill===1?\"#00b65c\":\"#9ca1a0\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.refill===1?(item.maxtimerefill==-1?\"Lifetime\":item.maxtimerefill+\" days Refill\"):\"No Refill\"}</span>\r\n            </td>\r\n            {role==\"ROLE_ADMIN\"&&<td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                </div>\r\n            </td>}\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx",["3029","3030","3031","3032","3033","3034","3035","3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orders/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [max_thread, setMax_thread] = useState(100)\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [home_rate,setHome_rate]=useState(0)\r\n    const [search_rate,setSearch_rate]=useState(80)\r\n    const [suggest_rate,setSuggest_rate]=useState(0)\r\n    const [direct_rate,setDirect_rate]=useState(20)\r\n    //\r\n    const [like_rate,setLike_rate]=useState(25)\r\n    const [comment_rate,setComment_rate]=useState(25)\r\n    const [mobile_rate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [comment_list, setComment_list] = useState(\"\")\r\n    const [group_id, setGroup] = useState(0)\r\n    //\r\n    const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    \r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            if(item.checked==true)\r\n            arr.push(item.channel_id)\r\n        })\r\n        const channel_id=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(like_rate>100||like_rate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(comment_rate>100||comment_rate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiOrderRequest({\r\n            channel_id,\r\n            home_rate,\r\n            direct_rate,\r\n            search_rate,\r\n            enabled,\r\n            max_thread,\r\n            view_percent,\r\n            suggest_rate\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Cài đặt danh sách đơn</p>\r\n                    <Form>\r\n                        <p>Nguồn view tổng = 100%</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Home \r\n                                </Label>\r\n                                <Input\r\n                                    id=\"home_rate\"\r\n                                    name=\"home_rate\"\r\n                                    value={home_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Search\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"search_rate\"\r\n                                    name=\"search_rate\"\r\n                                    value={search_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Suggest\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"suggest_rate\"\r\n                                    name=\"suggest_rate\"\r\n                                    value={suggest_rate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Direct\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"direct_rate\"\r\n                                    name=\"direct_rate\"\r\n                                    value={direct_rate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <p>Cài đặt tương tác</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Tỉ lệ Like \r\n                                </Label>\r\n                                <Input\r\n                                    id=\"like_rate\"\r\n                                    name=\"like_rate\"\r\n                                    value={like_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Tỉ lệ comment\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"comment_rate\"\r\n                                    name=\"comment_rate\"\r\n                                    value={comment_rate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng max\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={max_thread}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                   Time Buff(%)\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={view_percent}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Trạng thái\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={enabled}\r\n                            >\r\n                                <option key={1} value={1}>\r\n                                    {\"Chạy\"}\r\n                                </option>\r\n                                <option key={2} value={2}>\r\n                                    {\"Test1-Vt-Off-Seach\"}\r\n                                </option>\r\n                                <option key={3} value={3}>\r\n                                    {\"Test2-Vt-Off-Direct\"}\r\n                                </option>\r\n                                <option key={4} value={4}>\r\n                                    {\"Test3-Vt-On-Seach\"}\r\n                                </option>\r\n                                <option key={5} value={5}>\r\n                                    {\"Test4-Vt-On-Direct\"}\r\n                                </option>\r\n                                <option key={6} value={6}>\r\n                                    {\"Test5-Hc-Off-Seach\"}\r\n                                </option>\r\n                                <option key={7} value={7}>\r\n                                    {\"Test6-Hc-Off-Direct\"}\r\n                                </option>\r\n                                <option key={8} value={8}>\r\n                                    {\"Test7-Hc-On-5p\"}\r\n                                </option>\r\n                                <option key={9} value={9}>\r\n                                    {\"Test8-Hc-On-finger\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Ngừng\"}\r\n                                </option>\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} style={{color:'white',backgroundColor:\"#26695c\"}}  type=\"button\" onClick={submit} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx",["3053","3054","3055","3056","3057","3058","3059","3060","3061","3062","3063","3064"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn của kênh: \"+item.channel_title!) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.channel_id))\r\n        }\r\n    }\r\n\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr>\r\n            <td className='w-25px'>\r\n                <div className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                channel_id:item.channel_id,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{fontWeight:'bold',fontSize:11}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n\r\n                    <a style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#26695c\"}} href={'https://www.youtube.com/channel/' + item.channel_id} className='badge badge-danger'>\r\n                        {item.channel_title}\r\n                    </a>\r\n                    <span style={{ color:'black',margin:5,fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-warning'>{Math.round(Number(item.view_need==null?0:item.view_need)/3600)+\"/\"+item.view_percent}</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-warning'>{Math.round(Number(item.like_rate==null?0:item.like_rate)/3600)}</span>\r\n                    <span style={{ color:'black',margin:5,fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-dark'>{item.view_total==null?0:item.view_total}</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-dark'>{item.comment_rate==null?0:item.comment_rate}</span>\r\n                    <span style={{ color:'black',margin:5,fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-success'>{Math.round((Math.round(Number(item.view_need==null?0:item.view_need)/3600)/item.view_percent*100))+'%'}</span>\r\n            </td>\r\n            <td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-dark'>{item.total==1?0:item.total}/{item.max_threads} running</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.enabled === 1 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-success'>Đang chạy</span> :item.enabled === 2 ?\r\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-warning'>Test 1</span>:item.enabled === 3 ?\r\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>Test 2</span>:\r\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#af171b\"}} className='badge badge-danger'>Ngừng</span>\r\n\r\n                }\r\n                {\r\n                    <span style={{color:'black',fontSize:11,margin:5,backgroundColor:\"#c0e1ce\"}} className='badge badge-primary'>{new Date(item.insert_date).toLocaleDateString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {\r\n                 <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                    <a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>\r\n                </td>\r\n            }\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx",["3065","3066","3067","3068","3069","3070","3071","3072","3073","3074","3075","3076","3077","3078","3079","3080","3081","3082","3083","3084","3085"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const [max_thread, setMax_thread] = useState(100)\r\n  const [channel_id, setChannel_id] = useState(\"\")\r\n  //const [list_video, setList_video] = useState(\"\")\r\n  //\r\n  const [view_need, setView_need] = useState(1000)\r\n  const [premium_rate,setPremium_rate]=useState(5)\r\n  const [view_percent,setView_percent]=useState(4000)\r\n  //\r\n  const [home_rate,setHome_rate]=useState(0)\r\n  const [search_rate,setSearch_rate]=useState(80)\r\n  const [suggest_rate,setSuggest_rate]=useState(0)\r\n  const [direct_rate,setDirect_rate]=useState(20)\r\n  //\r\n  const [like_rate,setLike_rate]=useState(25)\r\n  const [comment_rate,setComment_rate]=useState(25)\r\n  const [mobile_rate,setMobile_rate]=useState(0)\r\n  //\r\n  const [note, setNote] = useState(\"\")\r\n  const [keyword, setKeyword] = useState(\"\")\r\n  const [comment_list, setComment_list] = useState(\"\")\r\n  const [group_id, setGroup] = useState(0)\r\n  //\r\n  const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearcurrentOrder())\r\n  }\r\n\r\n  const submit = () => {\r\n\r\n    if (channel_id.trim() === \"\") {\r\n      alert(\"Điền list kênh cần chạy\")\r\n      return\r\n    }\r\n    if(home_rate+search_rate+suggest_rate+direct_rate !=100){\r\n      alert(\"Tổng nguồn view không đúng\")\r\n      return\r\n    }\r\n\r\n    if(view_percent>10000000||view_percent<0){\r\n      alert(\"phần trăm xem video không đúng\")\r\n      return\r\n    }\r\n    dispatch(actions.addOrderRequest({\r\n      channel_id,\r\n      home_rate,\r\n      //note: string,\r\n      direct_rate,\r\n      //view_need: number,\r\n      //comment_rate: number,\r\n      //mobile_rate: number,\r\n      search_rate,\r\n      enabled,\r\n      max_thread,\r\n      view_percent,\r\n      //group_id: number,\r\n      //like_rate: number,\r\n      //comment_list: string,\r\n      suggest_rate,\r\n      //premium_rate: number,\r\n    }))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>Cài đặt đơn</p>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách id kênh cần chạy sub\r\n                </Label>\r\n                <Input\r\n                    id=\"list_id\"\r\n                    name=\"list_id\"\r\n                    className=\"form-control form-control-solid\"\r\n                    placeholder={\"Id kênh\"}\r\n                    value={channel_id}\r\n                    type={\"textarea\"}\r\n                    onChange={(e) => setChannel_id(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <p>Nguồn view tổng = 100%</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Home\r\n                  </Label>\r\n                  <Input\r\n                      id=\"home_rate\"\r\n                      name=\"home_rate\"\r\n                      value={home_rate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                      id=\"search_rate\"\r\n                      name=\"search_rate\"\r\n                      value={search_rate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Suggest\r\n                  </Label>\r\n                  <Input\r\n                      id=\"suggest_rate\"\r\n                      name=\"suggest_rate\"\r\n                      value={suggest_rate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Direct\r\n                  </Label>\r\n                  <Input\r\n                      id=\"direct_rate\"\r\n                      name=\"direct_rate\"\r\n                      value={direct_rate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <p>Cài đặt tương tác</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ Like\r\n                  </Label>\r\n                  <Input\r\n                      id=\"like_rate\"\r\n                      name=\"like_rate\"\r\n                      value={like_rate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ comment\r\n                  </Label>\r\n                  <Input\r\n                      id=\"comment_rate\"\r\n                      name=\"comment_rate\"\r\n                      value={comment_rate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng max\r\n                  </Label>\r\n                  <Input\r\n                      id=\"max_thread\"\r\n                      name=\"max_thread\"\r\n                      value={max_thread}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setMax_thread(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Time Buff(h)\r\n                  </Label>\r\n                  <Input\r\n                      id=\"mobile_rate\"\r\n                      name=\"mobile_rate\"\r\n                      value={view_percent}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 100\"\r\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Trạng thái\r\n                </Label>\r\n                <Input\r\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                    className=\"form-control form-control-solid\"\r\n                    type=\"select\"\r\n                    value={enabled}\r\n                >\r\n                  <option key={1} value={1}>\r\n                    {\"Chạy\"}\r\n                  </option>\r\n                  <option key={0} value={0}>\r\n                    {\"Ngừng\"}\r\n                  </option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\helpers\\RouterHelpers.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx",["3086","3087","3088","3089","3090"],"import React from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { HistoryModel } from 'app/modules/history/models/Account'\r\nimport moment from 'moment'\r\ntype Props = {\r\n    item: HistoryModel,\r\n    index: number\r\n}\r\n\r\nconst HistoryItem: React.FC<Props> = ({ item, index }) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <div className='d-flex flex-stack mb-2'>\r\n                    <span>{index + 1}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex flex-stack mb-2'>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(9,9,9,0.68)\"}} className='badge badge-success 1'>{item.date}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div   className='progress h-20px w-500px'>\r\n                    <div\r\n\r\n                        className='progress-bar bg-active-warning'\r\n                        role='progressbar'\r\n                        style={{width:(item.view/item.maxview)*500,fontWeight:\"bold\",color:\"white\",backgroundColor:item.maxview==item.view?\"#090909\":\"#5aa87b\"}}\r\n                    >{item.view}$</div>\r\n                </div>\r\n\r\n            </td>\r\n            <td>\r\n                <div   className='progress h-20px w-200px'>\r\n                    <div\r\n\r\n                        className='progress-bar bg-active-warning'\r\n                        role='progressbar'\r\n                        style={{width:(item.viewsub/item.maxsubview)*200,fontWeight:\"bold\",color:\"white\",backgroundColor:item.maxsubview==item.viewsub?\"rgb(9,9,9)\":\"rgba(164,2,2,0.97)\"}}\r\n                    >{item.viewsub}$</div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default HistoryItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx",["3091","3092","3093","3094","3095","3096","3097","3098","3099","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport {Group, OrderModel} from '../../models/Order'\r\nimport OrderItem from \"../../components/OrderItem\";\r\nimport AddModal from \"../AddModal\";\r\nimport {string} from \"yup\";\r\nimport {register} from \"../../../auth/redux/AuthCRUD\";\r\nimport * as auth from \"../../../auth/redux/AuthRedux\";\r\nimport {randomInt} from \"crypto\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    const [status,setStatus]=useState(\"Fail\")\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0121222222\",\r\n        channel_id:\"\",\r\n        state:\"\"\r\n    },])\r\n\r\n    const dispatch = useDispatch()\r\n    const [max_thread, setMax_thread] = useState(100)\r\n    const [channel_id, setChannel_id] = useState(\"\")\r\n    const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [home_rate,setHome_rate]=useState(0)\r\n    const [search_rate,setSearch_rate]=useState(80)\r\n    const [suggest_rate,setSuggest_rate]=useState(0)\r\n    const [direct_rate,setDirect_rate]=useState(20)\r\n    //\r\n    const [like_rate,setLike_rate]=useState(25)\r\n    const [comment_rate,setComment_rate]=useState(25)\r\n    const [mobile_rate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [keyword, setKeyword] = useState(\"\")\r\n    const [comment_list, setComment_list] = useState(\"\")\r\n    const [group_id, setGroup] = useState(0)\r\n    //\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n\r\n    const ordercheck = () => {\r\n        setShowOrder(false)\r\n    }\r\n\r\n    const submit = () => {\r\n        //setShowOrder(false)\r\n        if (channel_id.trim() === \"\") {\r\n            alert(\"Điền id kênh cần chạy\")\r\n            return\r\n        }\r\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        ordercheck()\r\n        const videoidlist=channel_id.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video=videoidlist[i]\r\n            setTimeout(() => {\r\n                addorderv2(video,list_video,home_rate,direct_rate\r\n                    ,search_rate,enabled,max_thread,suggest_rate,view_percent)\r\n                    .then((data:any) => {\r\n                        setLoading(true)\r\n                        if(data.data.channel==\"true\"){\r\n                            let orderitem={\r\n                                id:randomString(10),\r\n                                channel_id:video,\r\n                                state:\"done\"\r\n                            }\r\n                            setList_Todo([...list_order,orderitem])\r\n                            list_order.push(orderitem)\r\n                        }else{\r\n                            list_order.push({\r\n                                id:randomString(10),\r\n                                channel_id:video,\r\n                                state: 'error',\r\n                            })\r\n                        }\r\n\r\n                    })\r\n                    .catch(() => {\r\n                        list_order.push({\r\n                            id:randomString(10),\r\n                            channel_id:video,\r\n                            state: 'error',\r\n                        })\r\n\r\n                    })\r\n            }, 1000)\r\n            continue\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n\r\n        }\r\n    },[show] )\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n           modalTransition={{timeout: 500}}>\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách id channel</h5>\r\n                <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                    <span className=\"svg-icon svg-icon-2x\"></span>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                <p>Cài đặt đơn</p>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                            Danh sách id kênh cần chạy sub\r\n                        </Label>\r\n                        <Input\r\n                            id=\"list_id\"\r\n                            name=\"list_id\"\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder={\"Id kênh\"}\r\n                            value={channel_id}\r\n                            type={\"textarea\"}\r\n                            onChange={(e) => setChannel_id(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                            Danh sách video của kênh( Để trống video sẽ được thêm tự động )\r\n                        </Label>\r\n                        <Input\r\n                            id=\"list_id\"\r\n                            name=\"list_id\"\r\n                            className=\"form-control form-control-solid\"\r\n                            placeholder={\"video id cách nhau dấu ,\"}\r\n                            value={list_video}\r\n                            type={\"textarea\"}\r\n                            onChange={(e) => setList_video(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <p>Nguồn view tổng = 100%</p>\r\n                    <div className='flex flex-row justify-between space-x-3'>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Home\r\n                            </Label>\r\n                            <Input\r\n                                id=\"home_rate\"\r\n                                name=\"home_rate\"\r\n                                value={home_rate}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Search\r\n                            </Label>\r\n                            <Input\r\n                                id=\"search_rate\"\r\n                                name=\"search_rate\"\r\n                                value={search_rate}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Suggest\r\n                            </Label>\r\n                            <Input\r\n                                id=\"suggest_rate\"\r\n                                name=\"suggest_rate\"\r\n                                value={suggest_rate}\r\n                                disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Direct\r\n                            </Label>\r\n                            <Input\r\n                                id=\"direct_rate\"\r\n                                name=\"direct_rate\"\r\n                                value={direct_rate}\r\n                                disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <p>Cài đặt tương tác</p>\r\n                    <div className='flex flex-row justify-between space-x-3'>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Tỉ lệ Like\r\n                            </Label>\r\n                            <Input\r\n                                id=\"like_rate\"\r\n                                name=\"like_rate\"\r\n                                value={like_rate}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Tỉ lệ comment\r\n                            </Label>\r\n                            <Input\r\n                                id=\"comment_rate\"\r\n                                name=\"comment_rate\"\r\n                                value={comment_rate}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Luồng max\r\n                            </Label>\r\n                            <Input\r\n                                id=\"max_thread\"\r\n                                name=\"max_thread\"\r\n                                value={max_thread}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 1000\"\r\n                                onChange={(e) => setMax_thread(parseInt(e.target.value))}\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Time Buff(h)\r\n                            </Label>\r\n                            <Input\r\n                                id=\"mobile_rate\"\r\n                                name=\"mobile_rate\"\r\n                                value={view_percent}\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder=\"ví dụ : 100\"\r\n                                onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                                type=\"number\"\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                            Trạng thái\r\n                        </Label>\r\n                        <Input\r\n                            onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            value={enabled}\r\n                        >\r\n                            <option key={1} value={1}>\r\n                                {\"Chạy\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Test1-Vt-Off-Seach\"}\r\n                            </option>\r\n                            <option key={3} value={3}>\r\n                                {\"Test2-Vt-Off-Direct\"}\r\n                            </option>\r\n                            <option key={4} value={4}>\r\n                                {\"Test3-Vt-On-Seach\"}\r\n                            </option>\r\n                            <option key={5} value={5}>\r\n                                {\"Test4-Vt-On-Direct\"}\r\n                            </option>\r\n                            <option key={6} value={6}>\r\n                                {\"Test5-Hc-Off-Seach\"}\r\n                            </option>\r\n                            <option key={7} value={7}>\r\n                                {\"Test6-Hc-Off-Direct\"}\r\n                            </option>\r\n                            <option key={8} value={8}>\r\n                                {\"Test7-Hc-On-5p\"}\r\n                            </option>\r\n                            <option key={9} value={9}>\r\n                                {\"Test8-Hc-On-finger\"}\r\n                            </option>\r\n                            <option key={0} value={0}>\r\n                                {\"Ngừng\"}\r\n                            </option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                </Form>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                    {/* begin::Table container */}\r\n\r\n                   {\r\n                        list_order.map((item, index) => {\r\n                            console.log(list_order)\r\n                            if (item.channel_id.length >0) return (\r\n                                <ul className=\"list-group list-group-flush\" id={item.channel_id} key={item.channel_id}>\r\n                                    <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                            <div className=\"col-5 d-flex align-items-center\">{item.channel_id}</div>\r\n                                            <div className=\"col-6 d-flex justify-content-end align-items-center\">\r\n                                                <div className=\"d-flex flex-row align-items-center\">\r\n                                                    <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('done')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n\r\n                                                    <button type=\"button\"\r\n                                                            style={{display: item.state == \"done\" ? \"none\" : \"true\"}}\r\n                                                            className=\"ant-btn ant-btn-link\">\r\n                                                        <span>Thử lại</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            )\r\n                        })\r\n                    }\r\n                    {/* end::Table container */}\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={close} className=\"btn btn-light\">Thoát</button>\r\n                <button disabled={adding} style={{color: 'white', backgroundColor: \"#26695c\"}} id='hide' type=\"button\"\r\n                        onClick={submit} className=\"btn \">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n            </div>\r\n        </div>\r\n    </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\portal\\Portal.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\AddModal\\index.tsx",["3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.groups, shallowEqual) as Group[] || []\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(100)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  //const [list_video, setList_video] = useState(\"\")\r\n  //\r\n  const [view_need, setView_need] = useState(1000)\r\n  const [premium_rate,setPremium_rate]=useState(5)\r\n  const [view_percent,setView_percent]=useState(4000)\r\n  //\r\n  const [homerate,setHome_rate]=useState(0)\r\n  const [searchrate,setSearch_rate]=useState(80)\r\n  const [suggestrate,setSuggest_rate]=useState(0)\r\n  const [directrate,setDirect_rate]=useState(20)\r\n  //\r\n  const [vieworder,setvieworder]=useState(1000)\r\n  const [commentrate,setComment_rate]=useState(25)\r\n  const [service,setservice]=useState(0)\r\n  const [optionbuff, setOptionbuff] = useState(10)\r\n  const [note, setNote] = useState(\"\")\r\n  const [viewstart, setViewstart] = useState(0)\r\n  const [timebuff, setTimebuff] = useState(0)\r\n  //\r\n  const [enabled,setEnabled]=useState(1)\r\n  const [user,setUser]=useState(username)\r\n\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearcurrentOrder())\r\n  }\r\n\r\n  const submit = () => {\r\n\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"Điền list kênh cần chạy\")\r\n      return\r\n    }\r\n    if(homerate+searchrate+suggestrate+directrate !=100){\r\n      alert(\"Tổng nguồn view không đúng\")\r\n      return\r\n    }\r\n\r\n    if(view_percent>10000000||view_percent<0){\r\n      alert(\"phần trăm xem video không đúng\")\r\n      return\r\n    }\r\n    dispatch(actions.addOrderRequest({\r\n      vieworder,\r\n      service,\r\n      videoid,\r\n      note,\r\n      maxthreads,\r\n      viewstart,\r\n      timebuff,\r\n      user\r\n    }))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>Cài đặt đơn</p>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách id kênh cần chạy sub\r\n                </Label>\r\n                <Input\r\n                    id=\"list_id\"\r\n                    name=\"list_id\"\r\n                    className=\"form-control form-control-solid\"\r\n                    placeholder={\"Id kênh\"}\r\n                    value={videoid}\r\n                    type={\"textarea\"}\r\n                    onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <p>Nguồn view tổng = 100%</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Home\r\n                  </Label>\r\n                  <Input\r\n                      id=\"home_rate\"\r\n                      name=\"home_rate\"\r\n                      value={homerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                      id=\"search_rate\"\r\n                      name=\"search_rate\"\r\n                      value={searchrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Suggest\r\n                  </Label>\r\n                  <Input\r\n                      id=\"suggest_rate\"\r\n                      name=\"suggest_rate\"\r\n                      value={suggestrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Direct\r\n                  </Label>\r\n                  <Input\r\n                      id=\"direct_rate\"\r\n                      name=\"direct_rate\"\r\n                      value={directrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <p>Cài đặt tương tác</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ comment\r\n                  </Label>\r\n                  <Input\r\n                      id=\"comment_rate\"\r\n                      name=\"comment_rate\"\r\n                      value={commentrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng max\r\n                  </Label>\r\n                  <Input\r\n                      id=\"max_thread\"\r\n                      name=\"max_thread\"\r\n                      value={maxthreads}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Time Buff(h)\r\n                  </Label>\r\n                  <Input\r\n                      id=\"mobile_rate\"\r\n                      name=\"mobile_rate\"\r\n                      value={view_percent}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 100\"\r\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Trạng thái\r\n                </Label>\r\n                <Input\r\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                    className=\"form-control form-control-solid\"\r\n                    type=\"select\"\r\n                    value={enabled}\r\n                >\r\n                  <option key={1} value={1}>\r\n                    {\"Chạy\"}\r\n                  </option>\r\n                  <option key={0} value={0}>\r\n                    {\"Ngừng\"}\r\n                  </option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\EditMulti\\index.tsx",["3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3167","3168","3169","3170","3171","3172","3173"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/ordercheckcancel/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(200)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [vieworder,setvieworder]=useState(1000)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n        if(myElem && item.checked){\r\n            arr.push(item.videoid)\r\n        }\r\n    })\r\n    console.log(arr)\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n            if(myElem && item.checked){\r\n                arr.push(item.videoid)\r\n            }\r\n        })\r\n        console.log(arr)\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            videoid,\r\n            note,\r\n            maxthreads,\r\n            viewstart,\r\n            timebuff,\r\n            user,\r\n            service,\r\n            vieworder\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\modals\\AddManualModal\\index.tsx",["3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ ordercheckcancel }) => ordercheckcancel.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [service, setService] = useState(666)\r\n    const [note, setNote] = useState(\"\")\r\n    const [vieworder, setVieworder] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservice';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await addorderv2(video,note,maxthreads,vieworder,service,user)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + vieworder;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        console.log(sumprice, sumtime, sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (vieworder < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link video':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link video\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 link video một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Views Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    onChange={(e) => setService(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"select\"\r\n                                    value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                            return(\r\n                                                <option key={item.id} value={item.id}>\r\n                                                    {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role === \"ROLE_ADMIN\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\AddModal\\index.tsx",["3188","3189","3190","3191","3192","3193","3194","3195","3196","3197","3198","3199","3200","3201","3202","3203","3204","3205"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(50)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  const [service, setService] = useState(666)\r\n  const [note, setNote] = useState(\"\")\r\n  const [vieworder, setVieworder] = useState(1000)\r\n  const [countorder, setCountorder] = useState(8)\r\n  const [user,setUser]=useState(username)\r\n  const [showorder,setShowOrder]=useState(true)\r\n  const [orderdonenum,setOrderDoneNum]=useState(0)\r\n  const [list_order,setList_Todo]=useState([{\r\n    id:\"0000000000\",\r\n    videoid:\"\",\r\n    state:\"\",\r\n    time:0,\r\n    price:0\r\n\r\n  },])\r\n  const [list_service,setList_Service]=useState([{\r\n    id:\"000\",\r\n    user:\"All Service\"\r\n  },])\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'servive/getallservice?role='+role;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: arrlist[i].split('|')[0].trim(),\r\n        user: arrlist[i]\r\n      }\r\n      setList_Service([...list_service, orderitem])\r\n      list_service.push(orderitem)\r\n    }\r\n  }\r\n\r\n  async  function   getkey() {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    return key\r\n  }\r\n  let [sumprice,setSumPrice]=useState(0)\r\n  let [sumtime,setSumTime]=useState(0)\r\n  let [sumorder,setSumOrder]=useState(0)\r\n  const dismissModal = () => {\r\n    close()\r\n    setShowOrder(true)\r\n    setVideoid(\"\")\r\n\r\n    let or={\r\n      id:\"0000000000\",\r\n      videoid:\"\",\r\n      state:\"\",\r\n      time:0,\r\n      price:0\r\n    }\r\n    setList_Todo([or])\r\n    if(orderdonenum>0){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setOrderDoneNum(0)\r\n  }\r\n  async function order_video_ver2(video: string) {\r\n    await addorderv2(video,note,maxthreads,vieworder,service,user)\r\n        .then((data: any) => {\r\n          if (data.data.videoview == \"true\") {\r\n            setOrderDoneNum(orderdonenum + 1)\r\n            let orderitem = {\r\n              id: randomString(10),\r\n              videoid: video,\r\n              state: \"OK\",\r\n              time: data.data.time,\r\n              price: data.data.price\r\n            }\r\n\r\n            sumprice = sumprice + data.data.price\r\n            setSumPrice(sumprice)\r\n            sumtime = sumtime + vieworder;\r\n            setSumTime(sumtime)\r\n            sumorder = sumorder + 1\r\n            setSumOrder(sumorder)\r\n            console.log(sumprice, sumtime, sumorder)\r\n            setList_Todo([...list_order, orderitem])\r\n            list_order.push(orderitem)\r\n          } else {\r\n            let orderitem = {\r\n              id: randomString(10),\r\n              videoid: video,\r\n              time: 0,\r\n              state: data.data.videoview,\r\n              price: 0\r\n            }\r\n            setList_Todo([...list_order, orderitem])\r\n            list_order.push(orderitem)\r\n            //console.log(list_order)\r\n          }\r\n\r\n        })\r\n        .catch(() => {\r\n          let orderitem = {\r\n            id: randomString(10),\r\n            videoid: video,\r\n            state: 'Error',\r\n            time: 0,\r\n            price: 0\r\n          }\r\n          setList_Todo([...list_order, orderitem])\r\n          list_order.push(orderitem)\r\n        })\r\n  }\r\n  const  submit = async () => {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    setSumOrder(0)\r\n    setSumTime(0)\r\n    setSumPrice(0)\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"VideoId không để trống!\")\r\n      return\r\n    }\r\n\r\n    if (vieworder < 100) {\r\n      alert(\"Số giờ phải lớn hơn 100!\")\r\n      return\r\n    }\r\n    setShowOrder(false)\r\n    const channelid = videoid.split('\\n')\r\n    console.log(channelid.length)\r\n    for (var i = 0; i < channelid.length; i++) {\r\n      let videoIds=\"\"\r\n      var countvideo=0\r\n      const urlchannel = 'https://www.googleapis.com/youtube/v3/channels?key='+key+'&id='+channelid[i]+'&fields=items(statistics(videoCount))&part=statistics';\r\n      //console.log(urlchannel)\r\n      // Gửi yêu cầu API\r\n      await axios.get(urlchannel)\r\n          .then(response => {\r\n            countvideo  = parseInt(response.data.items[0].statistics.videoCount);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching data:', error);\r\n          });\r\n      if(countvideo<countorder){\r\n        //console.log(countvideo)\r\n        let orderitem = {\r\n          id: randomString(10),\r\n          videoid: channelid[i],\r\n          time: 0,\r\n          state: \"Tổng video chỉ có \"+countvideo.toString()+\"!\",\r\n          price: 0\r\n        }\r\n        setList_Todo([...list_order, orderitem])\r\n        list_order.push(orderitem)\r\n      }else{\r\n        const url = 'https://www.googleapis.com/youtube/v3/search?key='+key+'&channelId='+channelid[i]+'&fields=items(id(videoId))&part=id&order=date&maxResults='+(countorder+2).toString();\r\n        //console.log(url)\r\n        await axios.get(url)\r\n            .then(response => {\r\n              videoIds = response.data.items.map((item: { id: { videoId: string; }; }) => item.id.videoId).join(',');\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching data:', error);\r\n            });\r\n        var  videoidlist =await  videoIds.split(',')\r\n        var filtered = videoidlist.filter(function (el) {\r\n          return (el != null && el.length!=0);\r\n        });\r\n        videoidlist=filtered\r\n        //console.log(videoidlist)\r\n        if(false){\r\n          let orderitem = {\r\n            id: randomString(10),\r\n            videoid: channelid[i],\r\n            time: 0,\r\n            state: \"Channel không đủ \"+countorder.toString()+\" video!\",\r\n            price: 0\r\n          }\r\n          setList_Todo([...list_order, orderitem])\r\n          list_order.push(orderitem)\r\n        }else{\r\n          for (var j = 0; j < (videoidlist.length>countorder?countorder:videoidlist.length); j++) {\r\n            let video = videoidlist[j]\r\n            await order_video_ver2('https://www.youtube.com/watch?v='+video)\r\n            await getUserByToken()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getcounttimeorder()\r\n    console.log(list_service)\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n            <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách UID':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách link kênh\r\n                </Label>\r\n                <Input style={{minHeight:250}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 UID một dòng...\"}\r\n                       value={videoid}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <div>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Số video Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={countorder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setCountorder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Views Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={vieworder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                    Dịch vụ\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         onChange={(e) => setService(parseInt(e.target.value))}\r\n                         className=\"form-control form-control-solid\"\r\n                         type=\"select\"\r\n                         value={service}\r\n                  >\r\n                    {\r\n                      list_service.map((item, index) => {\r\n                        if(item.id!='000')\r\n                          return(\r\n                              <option key={item.id} value={item.id}>\r\n                                {item.user}</option>)\r\n                      })\r\n                    }\r\n                  </Input>\r\n                </FormGroup>\r\n                {role != \"ROLE_USER\" &&<FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"max_thread\"\r\n                         name=\"max_thread\"\r\n                         value={maxthreads}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 1000\"\r\n                         onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>}\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" >\r\n                    Ghi chú\r\n                  </Label>\r\n                  <Input\r\n                      id=\"note\"\r\n                      name=\"note\"\r\n                      value={note}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"...\"\r\n                      onChange={(e) => setNote(e.target.value)}\r\n                      type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"card-body\" style={{width: \"100%\"}}>\r\n              {/* begin::Table container */}\r\n\r\n              {\r\n                list_order.map((item, index) => {\r\n                  if (item.videoid.length >0) return (\r\n                      <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                            <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                            <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                              {item.price.toPrecision()}$\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                  )\r\n                })\r\n              }\r\n              {/* end::Table container */}\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\EditMulti\\index.tsx",["3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/orderdone/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderdone }) => orderdone.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(200)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [vieworder,setvieworder]=useState(1000)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n        if(myElem && item.checked){\r\n            arr.push(item.videoid)\r\n        }\r\n    })\r\n    console.log(arr)\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n            if(myElem && item.checked){\r\n                arr.push(item.videoid)\r\n            }\r\n        })\r\n        console.log(arr)\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            videoid,\r\n            note,\r\n            maxthreads,\r\n            viewstart,\r\n            timebuff,\r\n            user,\r\n            service,\r\n            vieworder\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\modals\\AddManualModal\\index.tsx",["3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [service, setService] = useState(666)\r\n    const [note, setNote] = useState(\"\")\r\n    const [vieworder, setVieworder] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservice?role='+role;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await addorderv2(video,note,maxthreads,vieworder,service,user)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + vieworder;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        console.log(sumprice, sumtime, sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (vieworder < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link video':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link video\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 link video một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Views Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    onChange={(e) => setService(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"select\"\r\n                                    value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                            return(\r\n                                                <option key={item.id} value={item.id}>\r\n                                                    {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role != \"ROLE_USER\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\CheckBhManualModal\\index.tsx",["3250","3251","3252","3253","3254","3255","3256","3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {htorderv2, bhorderv2, checkbhorderv2,ht100orderv2} from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\nimport {randomInt} from \"crypto\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst CheckBhManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.groups, shallowEqual) as Group[] || []\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [homerate,setHome_rate]=useState(0)\r\n    //\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n\r\n    async function clickBHHandler (orderid:number,id:string){\r\n        await ht100_video_ver2(orderid.toString())\r\n        //onst newList = list_order.filter((item) => item.id.indexOf(id)<0);\r\n        //setList_Todo(newList);\r\n    }\r\n    async function clickHTHandler (orderid:number,id:string){\r\n        await ht_video_ver2(orderid.toString())\r\n        //onst newList = list_order.filter((item) => item.id.indexOf(id)<0);\r\n        //setList_Todo(newList);\r\n    }\r\n\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        orderid:0,\r\n        videoid:\"\",\r\n        state:\"\",\r\n        timestart:0,\r\n        timeend:0,\r\n        vieworder:0,\r\n        viewcount:0,\r\n        viewstart:0,\r\n        viewbh:0,\r\n        refund:0,\r\n\r\n    },])\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        setSumOrder(0)\r\n        let or={\r\n            id:\"0000000000\",\r\n            orderid:0,\r\n            videoid:\"\",\r\n            state:\"\",\r\n            timestart:0,\r\n            timeend:0,\r\n            vieworder:0,\r\n            viewcount:0,\r\n            viewbh:0,\r\n            viewstart:0,\r\n            refund:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function sleep(ms:number) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    async function bh_video_ver2(video: string) {\r\n        await bhorderv2(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview == \"true\") {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.orderid==parseInt(video)\r\n                    ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: \"BH thành công!\",\r\n                            };\r\n\r\n                            return updatedItem;\r\n                        }\r\n\r\n                        return item;\r\n                    });\r\n\r\n                    setList_Todo(newList);\r\n                } else {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0|| item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: data.data.videoview\r\n                            };\r\n                            return updatedItem;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setList_Todo(newList);\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n\r\n    async function ht_video_ver2(video: string) {\r\n        await htorderv2(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview == \"true\") {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: \"Đã hoàn \"+data.data.price+ \"$\",\r\n                            };\r\n\r\n                            return updatedItem;\r\n                        }\r\n\r\n                        return item;\r\n                    });\r\n\r\n                    setList_Todo(newList);\r\n                } else {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0|| item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: data.data.videoview\r\n                            };\r\n                            console.log(updatedItem)\r\n                            return updatedItem;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setList_Todo(newList);\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n\r\n    async function ht100_video_ver2(video: string) {\r\n        await ht100orderv2(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview == \"true\") {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: \"Đã hoàn \"+data.data.price+ \"$\",\r\n                            };\r\n\r\n                            return updatedItem;\r\n                        }\r\n\r\n                        return item;\r\n                    });\r\n\r\n                    setList_Todo(newList);\r\n                } else {\r\n                    const newList = list_order.map((item) => {\r\n                        if (item.videoid.indexOf(video) >=0|| item.orderid==parseInt(video)\r\n                        ) {\r\n                            const updatedItem = {\r\n                                ...item,\r\n                                state: data.data.videoview\r\n                            };\r\n                            console.log(updatedItem)\r\n                            return updatedItem;\r\n                        }\r\n                        return item;\r\n                    });\r\n                    setList_Todo(newList);\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n\r\n    async function order_video_ver2(video: string) {\r\n            await checkbhorderv2(video)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: data.data.videoid,\r\n                            state: \"OK\",\r\n                            timestart:data.data.timestart,\r\n                            timeend: data.data.timeend,\r\n                            vieworder: data.data.vieworder,\r\n                            viewcount: data.data.viewcount,\r\n                            viewbh: data.data.viewbh,\r\n                            viewstart:data.data.viewstart,\r\n                            orderid: data.data.orderid,\r\n                            refund:data.data.refund\r\n                        }\r\n\r\n                        //sumprice = sumprice + data.data.price\r\n                        //setSumPrice(sumprice)\r\n                        //sumtime = sumtime + timebuff;\r\n                        //setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            orderid:0,\r\n                            videoid:video,\r\n                            state:data.data.videoview,\r\n                            timestart:0,\r\n                            timeend:0,\r\n                            vieworder:0,\r\n                            viewcount:0,\r\n                            viewstart:0,\r\n                            viewbh:0,\r\n                            refund:0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        orderid:0,\r\n                        videoid:video,\r\n                        state:\"Error\",\r\n                        timestart:0,\r\n                        timeend:0,\r\n                        vieworder:0,\r\n                        viewcount:0,\r\n                        viewstart:0,\r\n                        viewbh:0,\r\n                        refund:0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            const videoidOnColum = videoidlist[i].split(',')\r\n            for(var j=0;j<videoidOnColum.length;j++)\r\n            {\r\n                let videos = videoidOnColum[j]\r\n                await order_video_ver2(videos)\r\n                await sleep(200);\r\n\r\n            }\r\n            //await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Check hoàn tiền với DS VideoId hoặc OrderId':'Check thành công: '+sumorder}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách VideoId hoặc Orderid\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 VideoId hoặc Orderid một dòng( Hoặc phân cách bằng dấu phẩy)\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid+randomString(10)} key={item.videoid+randomString(10)}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-1 col-sm-auto align-items-center\">{item.orderid!=0?item.orderid+' | ':''}{item.videoid}</div>\r\n                                                <div style={{color:(item.state.indexOf('OK')>=0 || item.state.indexOf('$')>=0 || item.state.indexOf('BH')>=0)?'green':'red'}} className=\"col-1 col-sm-auto align-items-center\">{(item.refund>0?\"Refunded \":\"\")+ item.state}</div>\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{new Date(item.timestart).toLocaleDateString('vn-VN') +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')}</div>}\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{new Date(item.timeend).toLocaleDateString('vn-VN') +\" \"+ new Date(item.timeend).toLocaleTimeString('vn-VN')}</div>}\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{item.viewstart}</div>}\r\n                                                {item.timestart>0&&<div className=\"col-1 col-sm-auto align-items-center\">{item.viewcount}/{item.vieworder+item.viewstart}</div>}\r\n                                                {item.timestart>0&&<div style={{color:item.viewbh>0?\"red\":\"black\"}} className=\"col-1 col-sm-auto align-items-center\">\r\n                                                    {item.viewbh>0?item.viewbh:0}\r\n                                                </div>}\r\n                                                {item.viewbh<=0&&<div style={{color:\"green\"\r\n                                                }} className=\"col-1 col-sm-auto align-items-center\">Không cần hoàn</div>}\r\n                                                {item.viewbh>0&&<button onClick={()=>clickBHHandler(item.orderid,item.id)} style={{backgroundColor:\"red\",borderRadius:10,color:\"white\",marginRight:5}} type=\"button\"  className=\"col-1 col-sm-auto align-items-center\" >Hoàn 100%</button>}\r\n                                                {item.viewbh>0&&<button onClick={()=>clickHTHandler(item.orderid,item.id)} style={{backgroundColor:\"orange\",borderRadius:10,color:\"black\"}} type=\"button\"  className=\"col-1 col-sm-auto align-items-center\" >Hoàn phần thiếu</button>}\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thực hiện\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CheckBhManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\BhManualModal\\index.tsx",["3305","3306","3307","3308","3309","3310","3311","3312","3313","3314","3315","3316","3317","3318","3319","3320","3321","3322","3323","3324","3325","3326","3327","3328","3329","3330","3331","3332","3333","3334","3335","3336","3337","3338","3339","3340","3341"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {addorderv2, bhorderv2} from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst BhManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.groups, shallowEqual) as Group[] || []\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [homerate,setHome_rate]=useState(0)\r\n    //\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await bhorderv2(video)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + timebuff;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    async function sleep(ms:number) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (timebuff < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        if (homerate + searchrate + suggestrate + directrate != 100) {\r\n            alert(\"Tổng nguồn view không đúng!\")\r\n            return\r\n        }\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            const videoidOnColum = videoidlist[i].split(',')\r\n            for(var j=0;j<videoidOnColum.length;j++)\r\n            {\r\n                let videos = videoidOnColum[j]\r\n                await order_video_ver2(videos)\r\n                await sleep(200);\r\n                await getUserByToken()\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Bảo hành với DS VideoId hoặc OrderId':'Bảo hành thành công: '+sumorder+' | Giờ: '+sumtime.toPrecision()+'view | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách VideoId hoặc Orderid\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 VideoId hoặc Orderid một dòng( Hoặc phân cách bằng dấu phẩy)\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time} view</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Bảo hành\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BhManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\EditMulti\\index.tsx",["3342","3343","3344","3345","3346","3347","3348","3349","3350","3351","3352","3353","3354","3355","3356","3357","3358","3359","3360","3361","3362","3363","3364","3365","3366","3367","3368","3369","3370"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/orderbaohanh/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(200)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [vieworder,setvieworder]=useState(1000)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n        if(myElem && item.checked){\r\n            arr.push(item.videoid)\r\n        }\r\n    })\r\n    console.log(arr)\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n            if(myElem && item.checked){\r\n                arr.push(item.videoid)\r\n            }\r\n        })\r\n        console.log(arr)\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            videoid,\r\n            note,\r\n            maxthreads,\r\n            viewstart,\r\n            timebuff,\r\n            user,\r\n            service,\r\n            vieworder\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\AddModal\\index.tsx",["3371","3372","3373","3374","3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385","3386","3387","3388","3389"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.groups, shallowEqual) as Group[] || []\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(100)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  //const [list_video, setList_video] = useState(\"\")\r\n  //\r\n  const [view_need, setView_need] = useState(1000)\r\n  const [premium_rate,setPremium_rate]=useState(5)\r\n  const [view_percent,setView_percent]=useState(4000)\r\n  //\r\n  const [homerate,setHome_rate]=useState(0)\r\n  const [searchrate,setSearch_rate]=useState(80)\r\n  const [suggestrate,setSuggest_rate]=useState(0)\r\n  const [directrate,setDirect_rate]=useState(20)\r\n  //\r\n  const [vieworder,setvieworder]=useState(1000)\r\n  const [commentrate,setComment_rate]=useState(25)\r\n  const [service,setservice]=useState(0)\r\n  const [optionbuff, setOptionbuff] = useState(10)\r\n  const [note, setNote] = useState(\"\")\r\n  const [viewstart, setViewstart] = useState(0)\r\n  const [timebuff, setTimebuff] = useState(0)\r\n  //\r\n  const [enabled,setEnabled]=useState(1)\r\n  const [user,setUser]=useState(username)\r\n\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearcurrentOrder())\r\n  }\r\n\r\n  const submit = () => {\r\n\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"Điền list kênh cần chạy\")\r\n      return\r\n    }\r\n    if(homerate+searchrate+suggestrate+directrate !=100){\r\n      alert(\"Tổng nguồn view không đúng\")\r\n      return\r\n    }\r\n\r\n    if(view_percent>10000000||view_percent<0){\r\n      alert(\"phần trăm xem video không đúng\")\r\n      return\r\n    }\r\n    dispatch(actions.addOrderRequest({\r\n      vieworder,\r\n      service,\r\n      videoid,\r\n      note,\r\n      maxthreads,\r\n      viewstart,\r\n      timebuff,\r\n      user\r\n    }))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>Cài đặt đơn</p>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách id kênh cần chạy sub\r\n                </Label>\r\n                <Input\r\n                    id=\"list_id\"\r\n                    name=\"list_id\"\r\n                    className=\"form-control form-control-solid\"\r\n                    placeholder={\"Id kênh\"}\r\n                    value={videoid}\r\n                    type={\"textarea\"}\r\n                    onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <p>Nguồn view tổng = 100%</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Home\r\n                  </Label>\r\n                  <Input\r\n                      id=\"home_rate\"\r\n                      name=\"home_rate\"\r\n                      value={homerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                      id=\"search_rate\"\r\n                      name=\"search_rate\"\r\n                      value={searchrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Suggest\r\n                  </Label>\r\n                  <Input\r\n                      id=\"suggest_rate\"\r\n                      name=\"suggest_rate\"\r\n                      value={suggestrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Direct\r\n                  </Label>\r\n                  <Input\r\n                      id=\"direct_rate\"\r\n                      name=\"direct_rate\"\r\n                      value={directrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <p>Cài đặt tương tác</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ comment\r\n                  </Label>\r\n                  <Input\r\n                      id=\"comment_rate\"\r\n                      name=\"comment_rate\"\r\n                      value={commentrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng max\r\n                  </Label>\r\n                  <Input\r\n                      id=\"max_thread\"\r\n                      name=\"max_thread\"\r\n                      value={maxthreads}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Time Buff(h)\r\n                  </Label>\r\n                  <Input\r\n                      id=\"mobile_rate\"\r\n                      name=\"mobile_rate\"\r\n                      value={view_percent}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 100\"\r\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Trạng thái\r\n                </Label>\r\n                <Input\r\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                    className=\"form-control form-control-solid\"\r\n                    type=\"select\"\r\n                    value={enabled}\r\n                >\r\n                  <option key={1} value={1}>\r\n                    {\"Chạy\"}\r\n                  </option>\r\n                  <option key={0} value={0}>\r\n                    {\"Ngừng\"}\r\n                  </option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\EditMulti\\index.tsx",["3390","3391","3392","3393","3394","3395","3396","3397","3398","3399","3400","3401","3402","3403","3404","3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/ordercomment/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ ordercomment }) => ordercomment.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ ordercomment }) => ordercomment.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ ordercomment }) => ordercomment.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(5)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [commentorder,setcommentorder]=useState(1000)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [commentstart, setCommentstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n        if(myElem && item.checked){\r\n            arr.push(item.videoid)\r\n        }\r\n    })\r\n    console.log(arr)\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n            if(myElem && item.checked){\r\n                arr.push(item.videoid)\r\n            }\r\n        })\r\n        console.log(arr)\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            videoid,\r\n            note,\r\n            maxthreads,\r\n            commentstart,\r\n            timebuff,\r\n            user,\r\n            service,\r\n            commentorder\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={commentorder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setcommentorder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\modals\\AddManualModal\\index.tsx",["3419","3420","3421","3422","3423","3424","3425","3426","3427","3428","3429","3430","3431","3432"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderbaohanh }) => orderbaohanh.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [service, setService] = useState(666)\r\n    const [note, setNote] = useState(\"\")\r\n    const [vieworder, setVieworder] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservice';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await addorderv2(video,note,maxthreads,vieworder,service,user)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + vieworder;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        console.log(sumprice, sumtime, sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (vieworder < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link video':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link video\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 link video một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Views Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    onChange={(e) => setService(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"select\"\r\n                                    value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                            return(\r\n                                                <option key={item.id} value={item.id}>\r\n                                                    {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role === \"ROLE_ADMIN\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\AddModal\\index.tsx",["3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450","3451"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(100)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  //const [list_video, setList_video] = useState(\"\")\r\n  //\r\n  const [view_need, setView_need] = useState(1000)\r\n  const [premium_rate,setPremium_rate]=useState(5)\r\n  const [view_percent,setView_percent]=useState(4000)\r\n  //\r\n  const [homerate,setHome_rate]=useState(0)\r\n  const [searchrate,setSearch_rate]=useState(80)\r\n  const [suggestrate,setSuggest_rate]=useState(0)\r\n  const [directrate,setDirect_rate]=useState(20)\r\n  //\r\n  const [commentorder,setcommentorder]=useState(100)\r\n  const [commentrate,setComment_rate]=useState(25)\r\n  const [service,setservice]=useState(0)\r\n  const [optionbuff, setOptionbuff] = useState(10)\r\n  const [note, setNote] = useState(\"\")\r\n  const [commentstart, setCommentstart] = useState(0)\r\n  const [timebuff, setTimebuff] = useState(0)\r\n  //\r\n  const [enabled,setEnabled]=useState(1)\r\n  const [user,setUser]=useState(username)\r\n\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearcurrentOrder())\r\n  }\r\n\r\n  const submit = () => {\r\n\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"Điền list kênh cần chạy\")\r\n      return\r\n    }\r\n    if(homerate+searchrate+suggestrate+directrate !=100){\r\n      alert(\"Tổng nguồn view không đúng\")\r\n      return\r\n    }\r\n\r\n    if(view_percent>10000000||view_percent<0){\r\n      alert(\"phần trăm xem video không đúng\")\r\n      return\r\n    }\r\n    dispatch(actions.addOrderRequest({\r\n      commentorder,\r\n      service,\r\n      videoid,\r\n      note,\r\n      maxthreads,\r\n      commentstart,\r\n      timebuff,\r\n      user\r\n    }))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>Cài đặt đơn</p>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách id kênh cần chạy sub\r\n                </Label>\r\n                <Input\r\n                    id=\"list_id\"\r\n                    name=\"list_id\"\r\n                    className=\"form-control form-control-solid\"\r\n                    placeholder={\"Id kênh\"}\r\n                    value={videoid}\r\n                    type={\"textarea\"}\r\n                    onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <p>Nguồn view tổng = 100%</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Home\r\n                  </Label>\r\n                  <Input\r\n                      id=\"home_rate\"\r\n                      name=\"home_rate\"\r\n                      value={homerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                      id=\"search_rate\"\r\n                      name=\"search_rate\"\r\n                      value={searchrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Suggest\r\n                  </Label>\r\n                  <Input\r\n                      id=\"suggest_rate\"\r\n                      name=\"suggest_rate\"\r\n                      value={suggestrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Direct\r\n                  </Label>\r\n                  <Input\r\n                      id=\"direct_rate\"\r\n                      name=\"direct_rate\"\r\n                      value={directrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <p>Cài đặt tương tác</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ comment\r\n                  </Label>\r\n                  <Input\r\n                      id=\"comment_rate\"\r\n                      name=\"comment_rate\"\r\n                      value={commentrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng max\r\n                  </Label>\r\n                  <Input\r\n                      id=\"max_thread\"\r\n                      name=\"max_thread\"\r\n                      value={maxthreads}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Time Buff(h)\r\n                  </Label>\r\n                  <Input\r\n                      id=\"mobile_rate\"\r\n                      name=\"mobile_rate\"\r\n                      value={view_percent}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 100\"\r\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Trạng thái\r\n                </Label>\r\n                <Input\r\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                    className=\"form-control form-control-solid\"\r\n                    type=\"select\"\r\n                    value={enabled}\r\n                >\r\n                  <option key={1} value={1}>\r\n                    {\"Chạy\"}\r\n                  </option>\r\n                  <option key={0} value={0}>\r\n                    {\"Ngừng\"}\r\n                  </option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\modals\\AddManualModal\\index.tsx",["3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [service, setService] = useState(666)\r\n    const [note, setNote] = useState(\"\")\r\n    const [vieworder, setVieworder] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservice';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await addorderv2(video,note,maxthreads,vieworder,service,user)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + vieworder;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        console.log(sumprice, sumtime, sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (vieworder < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link video':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link video\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 link video một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Views Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    onChange={(e) => setService(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"select\"\r\n                                    value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                            return(\r\n                                                <option key={item.id} value={item.id}>\r\n                                                    {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role === \"ROLE_ADMIN\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\EditMulti\\index.tsx",["3466","3467","3468","3469","3470","3471","3472","3473","3474","3475","3476","3477","3478","3479","3480","3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491","3492","3493","3494","3495","3496","3497","3498","3499","3500","3501","3502","3503","3504","3505","3506","3507","3508","3509","3510","3511","3512","3513","3514","3515","3516"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel,OrderModelChecked } from 'app/modules/ordercommenthistory/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({listvieoid, show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ ordercommenthistory }) => ordercommenthistory.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ ordercommenthistory }) => ordercommenthistory.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ ordercommenthistory }) => ordercommenthistory.orders, shallowEqual) as OrderModel[] || []\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(100)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    const [user,setUser]=useState(username)\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    //\r\n    const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let sum=0;\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.orderid===item.orderid)\r\n        if(myElem&&item.checked==true){\r\n            sum=sum+1\r\n            arr.push(item.orderid.toString())\r\n        }\r\n    })\r\n    const orderid=arr.join(',')\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate(orderid.toString()))\r\n        close()\r\n    }\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Bạn chắc chắn refund {sum} đơn?</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={submit} className=\"btn btn-primary\">Refund</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\AddModal\\index.tsx",["3517","3518","3519","3520","3521","3522","3523","3524","3525","3526","3527","3528","3529","3530","3531","3532","3533"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orderhistory }) => orderhistory.groups, shallowEqual) as Group[] || []\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(100)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  //const [list_video, setList_video] = useState(\"\")\r\n  //\r\n  const [view_need, setView_need] = useState(1000)\r\n  const [premium_rate,setPremium_rate]=useState(5)\r\n  const [view_percent,setView_percent]=useState(4000)\r\n  //\r\n  const [homerate,setHome_rate]=useState(0)\r\n  const [searchrate,setSearch_rate]=useState(80)\r\n  const [suggestrate,setSuggest_rate]=useState(0)\r\n  const [directrate,setDirect_rate]=useState(20)\r\n  const [user,setUser]=useState(username)\r\n  const [likerate,setLike_rate]=useState(25)\r\n  const [commentrate,setComment_rate]=useState(25)\r\n  const [mobilerate,setMobile_rate]=useState(0)\r\n  const [optionbuff, setOptionbuff] = useState(10)\r\n  const [note, setNote] = useState(\"\")\r\n  const [viewstart, setViewstart] = useState(0)\r\n  const [timebuff, setTimebuff] = useState(0)\r\n  //\r\n  const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearcurrentOrder())\r\n  }\r\n\r\n  const submit = () => {\r\n\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"Điền list kênh cần chạy\")\r\n      return\r\n    }\r\n    if(homerate+searchrate+suggestrate+directrate !=100){\r\n      alert(\"Tổng nguồn view không đúng\")\r\n      return\r\n    }\r\n\r\n    if(view_percent>10000000||view_percent<0){\r\n      alert(\"phần trăm xem video không đúng\")\r\n      return\r\n    }\r\n    dispatch(actions.addOrderRequest({\r\n      videoid,\r\n      homerate,\r\n      note,\r\n      directrate,\r\n      commentrate,\r\n      mobilerate,\r\n      searchrate,\r\n      enabled,\r\n      maxthreads,\r\n      viewstart,\r\n      likerate,\r\n      suggestrate,\r\n      timebuff,\r\n      optionbuff,user\r\n    }))\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>Cài đặt đơn</p>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách id kênh cần chạy sub\r\n                </Label>\r\n                <Input\r\n                    id=\"list_id\"\r\n                    name=\"list_id\"\r\n                    className=\"form-control form-control-solid\"\r\n                    placeholder={\"Id kênh\"}\r\n                    value={videoid}\r\n                    type={\"textarea\"}\r\n                    onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <p>Nguồn view tổng = 100%</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Home\r\n                  </Label>\r\n                  <Input\r\n                      id=\"home_rate\"\r\n                      name=\"home_rate\"\r\n                      value={homerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                      id=\"search_rate\"\r\n                      name=\"search_rate\"\r\n                      value={searchrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Suggest\r\n                  </Label>\r\n                  <Input\r\n                      id=\"suggest_rate\"\r\n                      name=\"suggest_rate\"\r\n                      value={suggestrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Direct\r\n                  </Label>\r\n                  <Input\r\n                      id=\"direct_rate\"\r\n                      name=\"direct_rate\"\r\n                      value={directrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <p>Cài đặt tương tác</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ Like\r\n                  </Label>\r\n                  <Input\r\n                      id=\"like_rate\"\r\n                      name=\"like_rate\"\r\n                      value={likerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ comment\r\n                  </Label>\r\n                  <Input\r\n                      id=\"comment_rate\"\r\n                      name=\"comment_rate\"\r\n                      value={commentrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng max\r\n                  </Label>\r\n                  <Input\r\n                      id=\"max_thread\"\r\n                      name=\"max_thread\"\r\n                      value={maxthreads}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Time Buff(h)\r\n                  </Label>\r\n                  <Input\r\n                      id=\"mobile_rate\"\r\n                      name=\"mobile_rate\"\r\n                      value={view_percent}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 100\"\r\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Trạng thái\r\n                </Label>\r\n                <Input\r\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                    className=\"form-control form-control-solid\"\r\n                    type=\"select\"\r\n                    value={enabled}\r\n                >\r\n                  <option key={1} value={1}>\r\n                    {\"Chạy\"}\r\n                  </option>\r\n                  <option key={0} value={0}>\r\n                    {\"Ngừng\"}\r\n                  </option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\modals\\AddManualModal\\index.tsx",["3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {findorder} from \"../../../orderhistory/redux/OrdersCRUD\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [service, setService] = useState(666)\r\n    const [note, setNote] = useState(\"\")\r\n    const [vieworder, setVieworder] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservice';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n        await findorder(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview != \"\") {\r\n\r\n                    setOrderDoneNum(orderdonenum + 1)\r\n                    let orderitem = {\r\n                        id: data.data.time.orderid,\r\n                        videoid: video,\r\n                        state: \"OK\",\r\n                        time: data.data.time,\r\n                        price: data.data.price\r\n                    }\r\n                    sumprice = sumprice + data.data.price\r\n                    setSumPrice(sumprice)\r\n                    sumtime = sumtime + vieworder;\r\n                    setSumTime(sumtime)\r\n                    sumorder = sumorder + 1\r\n                    setSumOrder(sumorder)\r\n                    console.log(sumprice, sumtime, sumorder)\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (vieworder < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n               modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link video':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link video\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                   id=\"list_id\"\r\n                                   name=\"list_id\"\r\n                                   className=\"form-control form-control-solid\"\r\n                                   placeholder={\"1 link video một dòng...\"}\r\n                                   value={videoid}\r\n                                   type={\"textarea\"}\r\n                                   onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Views Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                       id=\"vieworder\"\r\n                                       name=\"vieworder\"\r\n                                       value={vieworder}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       placeholder=\"ví dụ : 100\"\r\n                                       onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                                       type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                       onChange={(e) => setService(parseInt(e.target.value))}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       type=\"select\"\r\n                                       value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                                return(\r\n                                                    <option key={item.id} value={item.id}>\r\n                                                        {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role === \"ROLE_ADMIN\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                       id=\"max_thread\"\r\n                                       name=\"max_thread\"\r\n                                       value={maxthreads}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       placeholder=\"ví dụ : 1000\"\r\n                                       onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                       type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercheckcancel\\components\\OrderItem\\index.tsx",["3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559","3560","3561","3562","3563","3564","3565","3566","3567","3568","3569","3570","3571"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid,1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                videoid:item.videoid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5,color:\"white\",}} href={API_URL+'videoview/getinfo?orderid=' + item.orderid} className='badge badge-danger'>\r\n                    {item.orderid}\r\n                </a>\r\n            </td>\r\n            <td>\r\n\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.vieworder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.viewstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.viewtotal==null?0:item.viewtotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Completed <span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))+'%'}</span></span>\r\n                    <br/>\r\n                </span>\r\n\r\n            </td>\r\n\r\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=1?\"#c0e1ce\":\"#dc7a30\"}} className='badge badge-dark'>{item.total==1?0:item.total}/{item.maxthreads}</span>\r\n                }\r\n            </td>}\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\")}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>\r\n                  {((Date.now()-item.timestart)/1000/60/60)>=24?((((Date.now()-item.timestart)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timestart)/1000/60/60)>=1?((Date.now()-item.timestart)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timestart)/1000/60).toFixed(0)+'m'}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n                <span style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                    {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderdone\\components\\OrderItem\\index.tsx",["3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid,1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                videoid:item.videoid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5,color:\"white\",}} href={API_URL+'videoview/getinfo?orderid=' + item.orderid} className='badge badge-danger'>\r\n                    {item.orderid}\r\n                </a>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.vieworder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.viewstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.viewtotal==null?0:item.viewtotal}</span></span>\r\n                    {(item.maxthreads>0||item.viewtotal>0)&&<span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))+'%'}</span></span>}\r\n                    {item.maxthreads<=0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        Pending</span>\r\n                    }\r\n                    <br/>\r\n                </span>\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=0?\"#c0e1ce\":\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-dark'>{item.total}/{item.maxthreads}</span>\r\n                }\r\n            </td>}\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {((Date.now()-item.timestart)/1000/60/60)>=24?((((Date.now()-item.timestart)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timestart)/1000/60/60)>=1?((Date.now()-item.timestart)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timestart)/1000/60).toFixed(2)+'m'}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                 <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                     {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderbaohanh\\components\\OrderItem\\index.tsx",["3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid,1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                videoid:item.videoid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5,color:\"white\",}} href={API_URL+'videoview/getinfo?orderid=' + item.orderid} className='badge badge-danger'>\r\n                    {item.orderid}\r\n                </a>\r\n            </td>\r\n            <td>\r\n\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.vieworder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.viewstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.viewtotal==null?0:item.viewtotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Completed <span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))+'%'}</span></span>\r\n                    <br/>\r\n                </span>\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=0?\"#c0e1ce\":\"#dc7a30\"}} className='badge badge-dark'>{item.total}/{item.maxthreads}</span>\r\n                }\r\n            </td>}\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\")}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>\r\n                  {((Date.now()-item.timestart)/1000/60/60)>=24?((((Date.now()-item.timestart)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timestart)/1000/60/60)>=1?((Date.now()-item.timestart)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timestart)/1000/60).toFixed(0)+'m'}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n                <span style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                    {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercomment\\components\\OrderItem\\index.tsx",["3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\n\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid,1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                videoid:item.videoid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5,color:\"white\",}} href={API_URL+'videoview/getinfo?orderid=' + item.orderid} className='badge badge-danger'>\r\n                    {item.orderid}\r\n                </a>\r\n            </td>\r\n            <td>\r\n\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid+(item.lc_code!=''?('&lc='+item.lc_code):\"\")} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.commentorder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.commentstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.commenttotal==null?0:item.commenttotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.commenttotal==null?0:item.commenttotal))/item.commentorder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Completed <span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.commenttotal==null?0:item.commenttotal))/item.commentorder*100))+'%'}</span></span>\r\n                    <br/>\r\n                </span>\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=0?\"#c0e1ce\":\"#dc7a30\"}} className='badge badge-dark'>{item.total}/{item.maxthreads}</span>\r\n                }\r\n            </td>}\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\")}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                    {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditMulti\\index.tsx",["3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderhistoryfind/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const groups: Group[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.orders, shallowEqual) as OrderModel[] || []\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(100)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    const [user,setUser]=useState(username)\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    //\r\n    const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let sum=0;\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        if(item.checked==true)\r\n            sum=sum+1\r\n            arr.push(item.orderid.toString())\r\n    })\r\n    const orderid=arr.join(',')\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate(orderid.toString(),0,1))\r\n        close()\r\n    }\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">[VIEW] Bạn chắc chắn refund {sum} đơn?</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={submit} className=\"btn btn-primary\">Refund</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\components\\OrderItem\\index.tsx",["3688","3689","3690","3691","3692","3693","3694","3695","3696","3697","3698","3699","3700","3701","3702","3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler0 = () => {\r\n        if (window.confirm(\"Bạn có chắc chắn muốn refund 100% cho orderId \"+item.orderid!\r\n        ) == true) {\r\n            dispatch(actions.requestUpdate(item.orderid.toString(),0,1))\r\n        }\r\n    }\r\n    const clickUpdateHandler1 = () => {\r\n        if (window.confirm(\"Bạn có chắc chắn muốn refund phần thiếu cho orderId \"+item.orderid!\r\n        ) == true) {\r\n            dispatch(actions.requestUpdate(item.orderid.toString(),1,1))\r\n        }\r\n    }\r\n\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                orderid:item.orderid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n                <br/>\r\n                {item.info.length>0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.info.split(',')[0]}</span>}\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#ffffff\"}}>{item.vieworder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"black\"}}>{item.viewstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#000000\"}}>{item.viewtotal==null?0:item.viewtotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))+'%'}</span></span>\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.timestart!=0?\"#03d96e\":\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        {item.timestart!=0?(round((item.enddate-item.timestart)/1000/60)>60?(round((item.enddate-item.timestart)/1000/60)/60).toFixed(2)+'H':round((item.enddate-item.timestart)/1000/60)+'m'):'C'}</span>\r\n                    <br/>\r\n                      {item.info.length>0&&<span>\r\n                      <a target=\"_blank\" style={{textDecorationLine:'none',fontWeight:'normal',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                        Previous Order\r\n                      </a>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{parseFloat(item.info.split(',')[2])==null?0:parseFloat(item.info.split(',')[2]).toPrecision()}</span>$</span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{item.info.split(',')[3]}</span></span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{item.info.split(',')[4]}</span></span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{item.info.split(',')[5]}</span></span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{Math.round((Math.round(Number(parseInt(item.info.split(',')[5])==null?0:parseInt(item.info.split(',')[5])))/parseInt(item.info.split(',')[3])*100))+'%'}</span></span>\r\n                      </span>\r\n                      }\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n\r\n                <br/>\r\n                {item.info.length>0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.info.split(',')[6]}</span>}\r\n\r\n                {item.info.length>0&&<span style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(parseFloat(item.info.split(',')[7])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[7])).toLocaleTimeString('vn-VN')}</span>}\r\n\r\n            </td>\r\n            <td >\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.timestart!=0?(new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n                <br/>\r\n                {\r\n                    item.info.length>0&&<span className='badge badge-success' style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{parseFloat(item.info.split(',')[8])!=0?(new Date(parseFloat(item.info.split(',')[8])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[8])).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.enddate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.enddate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n                <br/>\r\n                { item.info.length>0&&\r\n                   parseInt(item.info.split(',')[9]) === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                    item.info.length>0&&parseInt(item.info.split(',')[9]) === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                        item.info.length>0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    item.info.length>0&&<span style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(parseFloat(item.info.split(',')[10])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[10])).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td >\r\n                {(item.viewend>-1&&item.viewend!=null)&&<span style={{color:'white',fontSize:11,backgroundColor:item.viewend>=(item.vieworder)?\"rgba(16,128,201,0.66)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.viewend}</span>}\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{item.timecheckbh>0?(new Date(item.timecheckbh).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timecheckbh).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n                <br/>\r\n                {(parseInt(item.info.split(',')[12])>-1&&parseInt(item.info.split(',')[12])!=null)&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\"}} className='badge badge-success'>\r\n                    {parseInt(item.info.split(',')[12])}</span>}\r\n                {\r\n                    <span style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,margin:5}} >{parseFloat(item.info.split(',')[11])>0?(new Date(parseFloat(item.info.split(',')[11])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[11])).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n                <br/>\r\n                {item.info.length>0&&<span className='badge badge-success' style={{color:'rgba(9,9,9,0.58)',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.info.split(',')[13].replace(\"@gmail.com\",\"\")}</span>}\r\n            </td>}\r\n            <td>\r\n                <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n                <br/>\r\n                {item.info.length>0&&<span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'rgba(9,9,9,0.58)',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.info.split(',')[14]}</span>}\r\n            </td>\r\n\r\n            {item.status==null&&\r\n                role === \"ROLE_ADMIN\"&&item.price!=0&&<td >\r\n                    <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"rgba(213,143,51,0.97)\",marginRight:5,marginBottom:5,color:\"white\",padding:8}} onClick={clickUpdateHandler1} className='badge badge-danger'>\r\n                        R\r\n                    </a>\r\n                    <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"rgba(220,13,13,0.97)\",marginRight:5,marginBottom:5,color:\"white\",padding:8}} onClick={clickUpdateHandler0} className='badge badge-danger'>\r\n                        R100\r\n                    </a>\r\n                </td>\r\n            }\r\n            {item.status!=null&&\r\n                role === \"ROLE_ADMIN\"&&<td >\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.status.includes(\"Đã\")?\"#03d96e\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.status}</span>\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\AddManualModal\\index.tsx",["3714","3715","3716","3717","3718","3719","3720","3721","3722","3723","3724","3725","3726","3727","3728"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {findorder} from \"../../../orderhistory/redux/OrdersCRUD\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [service, setService] = useState(666)\r\n    const [note, setNote] = useState(\"\")\r\n    const [vieworder, setVieworder] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservice';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n        await findorder(video)\r\n            .then((data: any) => {\r\n                if (data.data.videoview != \"\") {\r\n\r\n                    setOrderDoneNum(orderdonenum + 1)\r\n                    let orderitem = {\r\n                        id: data.data.time.orderid,\r\n                        videoid: video,\r\n                        state: \"OK\",\r\n                        time: data.data.time,\r\n                        price: data.data.price\r\n                    }\r\n                    sumprice = sumprice + data.data.price\r\n                    setSumPrice(sumprice)\r\n                    sumtime = sumtime + vieworder;\r\n                    setSumTime(sumtime)\r\n                    sumorder = sumorder + 1\r\n                    setSumOrder(sumorder)\r\n                    console.log(sumprice, sumtime, sumorder)\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                }\r\n            })\r\n            .catch(() => {\r\n            })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (vieworder < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n               modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link video':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link video\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                   id=\"list_id\"\r\n                                   name=\"list_id\"\r\n                                   className=\"form-control form-control-solid\"\r\n                                   placeholder={\"1 link video một dòng...\"}\r\n                                   value={videoid}\r\n                                   type={\"textarea\"}\r\n                                   onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Views Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                       id=\"vieworder\"\r\n                                       name=\"vieworder\"\r\n                                       value={vieworder}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       placeholder=\"ví dụ : 100\"\r\n                                       onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                                       type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                       onChange={(e) => setService(parseInt(e.target.value))}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       type=\"select\"\r\n                                       value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                                return(\r\n                                                    <option key={item.id} value={item.id}>\r\n                                                        {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role === \"ROLE_ADMIN\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                       id=\"max_thread\"\r\n                                       name=\"max_thread\"\r\n                                       value={maxthreads}\r\n                                       className=\"form-control form-control-solid\"\r\n                                       placeholder=\"ví dụ : 1000\"\r\n                                       onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                       type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\AddModal\\index.tsx",["3729","3730","3731","3732","3733","3734","3735","3736","3737","3738","3739","3740","3741","3742","3743","3744","3745","3746"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orderhistory }) => orderhistory.groups, shallowEqual) as Group[] || []\r\n\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(100)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  //const [list_video, setList_video] = useState(\"\")\r\n  //\r\n  const [view_need, setView_need] = useState(1000)\r\n  const [premium_rate,setPremium_rate]=useState(5)\r\n  const [view_percent,setView_percent]=useState(4000)\r\n  //\r\n  const [homerate,setHome_rate]=useState(0)\r\n  const [searchrate,setSearch_rate]=useState(80)\r\n  const [suggestrate,setSuggest_rate]=useState(0)\r\n  const [directrate,setDirect_rate]=useState(20)\r\n  const [user,setUser]=useState(username)\r\n  const [likerate,setLike_rate]=useState(25)\r\n  const [commentrate,setComment_rate]=useState(25)\r\n  const [mobilerate,setMobile_rate]=useState(0)\r\n  const [optionbuff, setOptionbuff] = useState(10)\r\n  const [note, setNote] = useState(\"\")\r\n  const [viewstart, setViewstart] = useState(0)\r\n  const [timebuff, setTimebuff] = useState(0)\r\n  const [orderid,setorderid]=useState(0)\r\n  const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearcurrentOrder())\r\n  }\r\n\r\n  const submit = () => {\r\n\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"Điền list kênh cần chạy\")\r\n      return\r\n    }\r\n    if(homerate+searchrate+suggestrate+directrate !=100){\r\n      alert(\"Tổng nguồn view không đúng\")\r\n      return\r\n    }\r\n\r\n    if(view_percent>10000000||view_percent<0){\r\n      alert(\"phần trăm xem video không đúng\")\r\n      return\r\n    }\r\n    dispatch(actions.addOrderRequest({\r\n      orderid,\r\n      videoid,\r\n      homerate,\r\n      note,\r\n      directrate,\r\n      commentrate,\r\n      mobilerate,\r\n      searchrate,\r\n      enabled,\r\n      maxthreads,\r\n      viewstart,\r\n      likerate,\r\n      suggestrate,\r\n      timebuff,\r\n      optionbuff,user\r\n    }))\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <p>Cài đặt đơn</p>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách id kênh cần chạy sub\r\n                </Label>\r\n                <Input\r\n                    id=\"list_id\"\r\n                    name=\"list_id\"\r\n                    className=\"form-control form-control-solid\"\r\n                    placeholder={\"Id kênh\"}\r\n                    value={videoid}\r\n                    type={\"textarea\"}\r\n                    onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <p>Nguồn view tổng = 100%</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Home\r\n                  </Label>\r\n                  <Input\r\n                      id=\"home_rate\"\r\n                      name=\"home_rate\"\r\n                      value={homerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                      id=\"search_rate\"\r\n                      name=\"search_rate\"\r\n                      value={searchrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Suggest\r\n                  </Label>\r\n                  <Input\r\n                      id=\"suggest_rate\"\r\n                      name=\"suggest_rate\"\r\n                      value={suggestrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Direct\r\n                  </Label>\r\n                  <Input\r\n                      id=\"direct_rate\"\r\n                      name=\"direct_rate\"\r\n                      value={directrate}\r\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <p>Cài đặt tương tác</p>\r\n              <div className='flex flex-row justify-between space-x-3'>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ Like\r\n                  </Label>\r\n                  <Input\r\n                      id=\"like_rate\"\r\n                      name=\"like_rate\"\r\n                      value={likerate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Tỉ lệ comment\r\n                  </Label>\r\n                  <Input\r\n                      id=\"comment_rate\"\r\n                      name=\"comment_rate\"\r\n                      value={commentrate}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng max\r\n                  </Label>\r\n                  <Input\r\n                      id=\"max_thread\"\r\n                      name=\"max_thread\"\r\n                      value={maxthreads}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 1000\"\r\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Time Buff(h)\r\n                  </Label>\r\n                  <Input\r\n                      id=\"mobile_rate\"\r\n                      name=\"mobile_rate\"\r\n                      value={view_percent}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"ví dụ : 100\"\r\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\r\n                      type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Trạng thái\r\n                </Label>\r\n                <Input\r\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                    className=\"form-control form-control-solid\"\r\n                    type=\"select\"\r\n                    value={enabled}\r\n                >\r\n                  <option key={1} value={1}>\r\n                    {\"Chạy\"}\r\n                  </option>\r\n                  <option key={0} value={0}>\r\n                    {\"Ngừng\"}\r\n                  </option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordercommenthistory\\components\\OrderItem\\index.tsx",["3747","3748","3749","3750","3751","3752","3753","3754","3755","3756","3757","3758","3759","3760","3761","3762","3763"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid))\r\n        }\r\n    }\r\n\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100}}>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid+(item.lc_code!=''?('&lc='+item.lc_code):\"\")} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.commentorder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.commentstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.commenttotal==null?0:item.commenttotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round((Math.round(Number(item.commenttotal==null?0:item.commenttotal))/item.commentorder*100))))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.commenttotal==null?0:item.commenttotal))/item.commentorder*100))+'%'}</span></span>\r\n                    <br/>\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //   <img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\")}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\"}} className='badge badge-success'>P</span> :\r\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\"}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.enddate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.enddate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\EditMulti\\index.tsx",["3764","3765","3766","3767","3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderhistory/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderhistory }) => orderhistory.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderhistory }) => orderhistory.orders, shallowEqual) as OrderModel[] || []\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(100)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    const [user,setUser]=useState(username)\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    //\r\n    const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    \r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            if(item.checked==true)\r\n            arr.push(item.videoid)\r\n        })\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiOrderRequest({\r\n            videoid,\r\n            homerate,\r\n            note,\r\n            directrate,\r\n            commentrate,\r\n            mobilerate,\r\n            searchrate,\r\n            enabled,\r\n            maxthreads,\r\n            viewstart,\r\n            likerate,\r\n            suggestrate,\r\n            timebuff,\r\n            optionbuff,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Cài đặt danh sách đơn</p>\r\n                    <Form>\r\n                        <p>Nguồn view tổng = 100%</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Home\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"home_rate\"\r\n                                    name=\"home_rate\"\r\n                                    value={homerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Search\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"search_rate\"\r\n                                    name=\"search_rate\"\r\n                                    value={searchrate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Suggest\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"suggest_rate\"\r\n                                    name=\"suggest_rate\"\r\n                                    value={suggestrate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Direct\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"direct_rate\"\r\n                                    name=\"direct_rate\"\r\n                                    value={directrate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <p>Cài đặt tương tác</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Like\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"like_rate\"\r\n                                    name=\"like_rate\"\r\n                                    value={likerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Comment\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"comment_rate\"\r\n                                    name=\"comment_rate\"\r\n                                    value={commentrate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Mobile\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobilerate\"\r\n                                    name=\"mobilerate\"\r\n                                    value={mobilerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Time(h)\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={timebuff}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Chế độ buff\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={optionbuff}\r\n                            >\r\n                                <option key={10} value={10}>\r\n                                    {\"10 phút\"}\r\n                                </option>\r\n                                <option key={30} value={30}>\r\n                                    {\"30 phút\"}\r\n                                </option>\r\n                                <option key={60} value={60}>\r\n                                    {\"60 phút\"}\r\n                                </option>\r\n                                <option key={120} value={120}>\r\n                                    {\"120 phút\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Auto\"}\r\n                                </option>\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Trạng thái\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={enabled}\r\n                            >\r\n                                <option key={1} value={1}>\r\n                                    {\"Chạy\"}\r\n                                </option>\r\n                                <option key={2} value={2}>\r\n                                    {\"Test1\"}\r\n                                </option>\r\n                                <option key={3} value={3}>\r\n                                    {\"Test2\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Ngừng\"}\r\n                                </option>\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\AddManualModal\\index.tsx",["3783","3784","3785","3786","3787","3788","3789","3790","3791","3792","3793","3794","3795","3796","3797"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx",["3798","3799","3800","3801","3802","3803","3804","3805","3806","3807","3808","3809","3810","3811","3812","3813","3814","3815","3816","3817","3818"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel,OrderModelChecked } from 'app/modules/accounts/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {Group, OrderModel} from \"../../../orders/models/Order\";\r\n\r\n\r\n\r\ntype Props = {\r\n    list_vps:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst RestartMulti: React.FC<Props> = ({list_vps, show,close }) => {\r\n    //console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ accounts }) => accounts.adding, shallowEqual) as boolean || false\r\n    const accounts: AccountModel[] = useSelector<RootState>(({ accounts }) => accounts.accounts, shallowEqual) as AccountModel[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n\r\n    const [vpsoption, setvpsoption] = useState('Pending')\r\n    const [threads, setthreads] = useState(0)\r\n    const [get_account, setget_account] = useState(0)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [ext, setext] = useState(1)\r\n    const [cmt, setcmt] = useState(1)\r\n    const [proxy, setproxy] = useState(1)\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'accview/dellAccViewByVPS?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'accview/dellAccCmtByVPS?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        accounts.forEach(item=>{\r\n            const myElem = list_vps.find(value => value.vps===item.vps)\r\n            if(myElem && item.checked){\r\n                arr.push(item.vps)\r\n            }\r\n        })\r\n        if(vpsreset==3){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n            }\r\n        }\r\n        if(vpsreset==5){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacccmt(arr[i].trim())\r\n            }\r\n        }\r\n        if(vpsreset==10){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n                resetrunningacccmt(arr[i].trim())\r\n            }\r\n        }\r\n        const vps=arr.join('\\n')\r\n\r\n        dispatch(actions.editRestartMultiOrderRequest({\r\n            vps,\r\n            vpsoption,\r\n            vpsreset,\r\n            threads,\r\n            get_account,\r\n            ext,\r\n            cmt,\r\n            proxy\r\n        }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={3} value={3}>\r\n                                {\"Restart & DelAcc View\"}\r\n                            </option>\r\n                            <option key={5} value={5}>\r\n                                {\"Restart & DelAcc Cmt\"}\r\n                            </option>\r\n                            <option key={10} value={10}>\r\n                                {\"Restart & DelAcc All\"}\r\n                            </option>\r\n                            <option key={6} value={6}>\r\n                                {\"Restart & Off VPS\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            style={{fontWeight:'bold'}}\r\n                            type=\"select\"\r\n                            value={vpsoption}\r\n                        >\r\n                            {\r\n                                list_geo.map((item, index) => {\r\n                                    return(\r\n                                        <option key={item.geo} value={item.geo}>\r\n                                            {item.geo.toUpperCase()}</option>)\r\n                                })\r\n                            }\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>VPS có dùng proxy?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setproxy(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={proxy}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>VPS có comments?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setcmt(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={cmt}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Get Account?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setget_account(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={get_account}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có bât EXT?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setext(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={ext}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" disabled={adding} style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn btn-primary\">Lưu thông tin mới</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RestartMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\modals\\AddModal\\index.tsx",["3819","3820","3821","3822","3823","3824","3825","3826","3827","3828","3829","3830","3831","3832","3833","3834","3835"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx",["3836","3837","3838","3839","3840","3841","3842","3843","3844","3845","3846","3847","3848","3849","3850","3851","3852","3853"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel,OrderModelChecked } from 'app/modules/accounts/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\nimport {RootState} from \"../../../../../setup\";\r\n\r\n\r\n\r\ntype Props = {\r\n    list_vps:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({list_vps, show,close }) => {\r\n    //console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ accounts }) => accounts.adding, shallowEqual) as boolean || false\r\n    const accounts: AccountModel[] = useSelector<RootState>(({ accounts }) => accounts.accounts, shallowEqual) as AccountModel[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n\r\n    const [vpsoption, setvpsoption] = useState('Pending')\r\n    const [threads, setthreads] = useState(0)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(0)\r\n    const [ext, setext] = useState(1)\r\n    const [cmt, setcmt] = useState(1)\r\n    const [proxy, setproxy] = useState(1)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'accview/dellAccViewByVPS?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'accview/dellAccCmtByVPS?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        accounts.forEach(item=>{\r\n            const myElem = list_vps.find(value => value.vps===item.vps)\r\n            if(myElem && item.checked){\r\n                arr.push(item.vps)\r\n            }\r\n        })\r\n        if(vpsreset==3){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n            }\r\n        }\r\n        if(vpsreset==5){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacccmt(arr[i].trim())\r\n            }\r\n        }\r\n        if(vpsreset==10){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n                resetrunningacccmt(arr[i].trim())\r\n            }\r\n        }\r\n        const vps=arr.join('\\n')\r\n\r\n        dispatch(actions.editMultiOrderRequest({\r\n            vps,\r\n            vpsoption,\r\n            vpsreset,\r\n            threads,\r\n            get_account,\r\n            ext,\r\n            cmt,\r\n            proxy\r\n        }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Nhập số luồng</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}}\r\n                               onChange={(e) => setthreads(parseInt(e.target.value))}\r\n                               value={threads}  type=\"number\"\r\n                               className=\"form-control\"\r\n                               placeholder=\"Nhập số point cho user\"\r\n                               aria-label=\"Recipient's username\"\r\n                               aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            style={{fontWeight:'bold'}}\r\n                            type=\"select\"\r\n                            value={vpsoption}\r\n                        >\r\n                            {\r\n                                list_geo.map((item, index) => {\r\n                                    return(\r\n                                        <option key={item.geo} value={item.geo}>\r\n                                            {item.geo.toUpperCase()}</option>)\r\n                                })\r\n                            }\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>VPS có dùng proxy?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setproxy(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={proxy}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>VPS có comments?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setcmt(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={cmt}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={3} value={3}>\r\n                                {\"Restart & DelAcc View\"}\r\n                            </option>\r\n                            <option key={5} value={5}>\r\n                                {\"Restart & DelAcc Cmt\"}\r\n                            </option>\r\n                            <option key={10} value={10}>\r\n                                {\"Restart & DelAcc All\"}\r\n                            </option>\r\n                            <option key={6} value={6}>\r\n                                {\"Restart & Off VPS\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Get Account?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setget_account(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={get_account}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có bật EXT?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setext(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={ext}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Có\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" disabled={adding}  style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn\">Lưu thông tin mới</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\balance\\components\\OrderItem\\index.tsx",["3854","3855","3856","3857","3858","3859","3860","3861","3862","3863","3864","3865","3866"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.balance>0?\"rgba(252,226,207,0.62)\":\"#ffffff\"}}>\r\n            <td className='w-25px'>\r\n                <span style={{marginLeft:5}}  className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span  >\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\r\n                    {new Date(item.time).toLocaleDateString('vn-VN') +\" \"+ new Date(item.time).toLocaleTimeString('vn-VN')}\r\n                    </text>\r\n                </span>\r\n\r\n            </td>\r\n            <td>\r\n                <span >\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\r\n                        {item.balance>=0?\"+\":\"\"}{item.balance.toPrecision()}$\r\n                    </text>\r\n                            </span>\r\n            </td>\r\n            <td>\r\n                <span >\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\r\n                        {item.totalbalance.toPrecision()}$\r\n                    </text>\r\n                            </span>\r\n            </td>\r\n            <td>\r\n                <span >\r\n                    <text style={{fontSize:12,fontWeight:\"bold\",color:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\")}}>\r\n                        {item.service}\r\n                    </text>\r\n                            </span>\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span >\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\r\n                        {item.user}\r\n                    </text>\r\n                            </span>\r\n            </td>}\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.note}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistory\\components\\OrderItem\\index.tsx",["3867","3868","3869","3870","3871","3872","3873","3874","3875","3876","3877","3878","3879","3880","3881","3882","3883","3884","3885","3886","3887"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid))\r\n        }\r\n    }\r\n\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#ffffff\"}}>{item.vieworder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"black\"}}>{item.viewstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#000000\"}}>{item.viewtotal==null?0:item.viewtotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.viewtotal==null?0:item.viewtotal))/item.vieworder*100))+'%'}</span></span>\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.timestart!=0?\"#03d96e\":\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        {item.timestart!=0?(((item.enddate-item.timestart)/1000/60/60)>=24?((((item.enddate-item.timestart)/1000/60/60/24)).toFixed(2)+'D'):((item.enddate-item.timestart)/1000/60/60)>=1?((item.enddate-item.timestart)/1000/60/60).toFixed(2)+'H':((item.enddate-item.timestart)/1000/60).toFixed(2)+'m'):'C'}</span>\r\n                    <br/>\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //   <img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n            </td>\r\n            <td >\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.timestart!=0?(new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.enddate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.enddate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td >\r\n                {(item.viewend>-1&&item.viewend!=null)&&<span  style={{color:'white',fontSize:11,backgroundColor:item.viewend>=(item.vieworder)?\"rgba(16,128,201,0.66)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.viewend}</span>}\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.timecheckbh>0?(new Date(item.timecheckbh).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timecheckbh).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx",["3888","3889","3890","3891","3892","3893","3894","3895","3896","3897","3898","3899","3900","3901","3902","3903","3904","3905","3906","3907","3908","3909"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/accounts/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AccountModel,\r\n    index:number\r\n}\r\n\r\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.vps!) == true) {\r\n            dispatch(actions.deleteVpsRequest(item.vps))\r\n        }\r\n    }\r\n    return (\r\n\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                vps:item.vps,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                         />\r\n                </div>\r\n            </td>\r\n            <td className='w-25px'>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <div className='d-flex align-items-center'>\r\n                    <div className='d-flex justify-content-start flex-column'>\r\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\r\n                            {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length).length!=0&&<span style={{marginRight:2,backgroundColor:\"#26695c\"}} className='badge badge-dark'>\r\n                                <text style={{fontSize:11}}>\r\n                                {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length)}\r\n                                </text>\r\n                            </span>}\r\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"black\"}}>\r\n                                {item.vps.substring(0,item.vps.lastIndexOf('-'))}\r\n                                </text>\r\n                            </span>\r\n                            <span style={{marginRight:2,backgroundColor:round((Date.now()-item.timecheck)/1000/60)<10?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"white\"}}>\r\n                                   {((Date.now()-item.timecheck)/1000/60/60)>=24?((((Date.now()-item.timecheck)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timecheck)/1000/60/60)>=1?((Date.now()-item.timecheck)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timecheck)/1000/60).toFixed(0)+'m'}\r\n                                </text>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginRight:2, backgroundColor:item.vpsoption=='vn'?'#50CD89':item.vpsoption=='us'?'#d32627':item.vpsoption=='live'?'#dc7a30':item.vpsoption=='kr'?\"rgba(3,37,80,0.97)\":'#9ca1a0'}}>\r\n                    <text >\r\n                    {item.vpsoption==''?'Pending':item.vpsoption=='Pending'?item.vpsoption:item.vpsoption.toUpperCase()}\r\n                    </text>\r\n                </span>\r\n                <span style={{fontWeight:'bold',fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\"}} className='badge badge-dark'>\r\n\r\n                        <text >\r\n                              {item.threads==0?'0':+item.threads}|{item.acccount==0?'0':+item.acccount}\r\n                        </text>\r\n\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:item.ext==1?'#50CD89':'#9ca1a0'}}>\r\n                    <text >\r\n                    EXT\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:item.get_account==1?'#c0271b':'#9ca1a0'}}>\r\n                    <text >\r\n                    GET\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:item.cmt==1?'#50CD89':'#9ca1a0'}}>\r\n                    <text >\r\n                    CMT\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:item.get_account==1?'#c0271b':'#9ca1a0'}}>\r\n                    <text >\r\n                    PROXY\r\n                    </text>\r\n                </span>\r\n            </td>\r\n            <td style={{width:'250px'}} className='text-end'>\r\n                <div  className='d-flex flex-column w-100 me-2'>\r\n                    <div  className='d-flex flex-stack mb-2'>\r\n                        <span  style={{color:\"black\"}} className={parseInt(item.timegettask)>=30?'badge badge-warning':''} >{item.total} running | {item.timegettask==null?'':item.timegettask+\" minutes before\"} </span>\r\n                        {\r\n                            item.vpsreset!=0 && <span style={{fontWeight:'bold',fontSize:11,marginTop:2,backgroundColor:\"#e57624\"}} className='badge badge-danger'>\r\n\r\n                                <text >\r\n                                        Reset{item.vpsreset}\r\n                                </text>\r\n\r\n                </span>\r\n\r\n                        }\r\n                    </div>\r\n                    <div  className='progress h-6px w-300'>\r\n                        <div\r\n                            className='progress-bar bg-active-success'\r\n                            role='progressbar'\r\n                            style={{width:(item.total/(item.threads))*300,backgroundColor:\"#6da18a\"}}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                    <button\r\n                        onClick={()=>clickDeleteHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'>\r\n                        <KTSVG\r\n                            path='/media/icons/duotune/general/gen027.svg'\r\n                            className='svg-icon-3'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item7.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item8.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item6.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item5.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item4.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item1.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item2.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\content\\activity\\Item3.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\MenuModal.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx",["3910","3911","3912"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {FC} from 'react'\r\nimport {shallowEqual, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {UserModel} from '../../../../app/modules/auth/models/UserModel'\r\nimport {RootState} from '../../../../setup'\r\nimport {Languages} from './Languages'\r\nimport * as auth from '../../../../app/modules/auth/redux/AuthRedux'\r\nimport {useDispatch} from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../helpers'\r\n\r\nconst HeaderUserMenu: FC = () => {\r\n  const user: UserModel = useSelector<RootState>(({auth}) => auth.user, shallowEqual) as UserModel\r\n  const dispatch = useDispatch()\r\n  const logout = () => {\r\n    dispatch(auth.actions.logout())\r\n  }\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  return (\r\n    <div\r\n      className='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg menu-state-primary fw-bold py-4 fs-6 w-275px'\r\n      data-kt-menu='true'\r\n    >\r\n      <div className='menu-item px-3'>\r\n        <div className='menu-content d-flex align-items-center px-3'>\r\n          <div className='symbol symbol-50px me-5'>\r\n            <img alt='Logo' src={toAbsoluteUrl('/media/avatars/Blank-Avatar.jpg')} />\r\n          </div>\r\n          <div className='d-flex flex-column'>\r\n            <div className='fw-bolder d-flex align-items-center fs-5'>\r\n              <span className='badge badge-success fw-bolder fs-8 px-2 py-1 ms-2'> {user.role}</span>\r\n            </div>\r\n            <a href='#' className='fw-bold text-muted text-hover-primary fs-7'>\r\n              {user.username}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='separator my-2'></div>\r\n      <div className='menu-item px-5'>\r\n        <a href='#' className='menu-link px-5'>\r\n         Nạp tiền\r\n        </a>\r\n      </div>\r\n      <div className='separator my-2'></div>\r\n      {/*<div className='menu-item px-5 my-1'>\r\n        <Link to='/crafted/account/settings' className='menu-link px-5'>\r\n        Cài đặt tài khoản\r\n        </Link>\r\n        </div>*/}\r\n      <div className='menu-item px-5'>\r\n        <a onClick={logout} className='menu-link px-5'>\r\n          Đăng xuất\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {HeaderUserMenu}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\InboxCompose.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\SearchModal.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\Login.tsx",["3913","3914","3915"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport clsx from 'clsx'\r\nimport { Link,useParams } from 'react-router-dom'\r\nimport { useFormik } from 'formik'\r\nimport * as auth from '../redux/AuthRedux'\r\nimport { login } from '../redux/AuthCRUD'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/helpers'\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Wrong email format')\r\n    .min(3, 'Minimum 3 symbols')\r\n    .max(50, 'Maximum 50 symbols')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(3, 'Minimum 3 symbols')\r\n    .max(50, 'Maximum 50 symbols')\r\n    .required('Password is required'),\r\n})\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n}\r\n\r\n/*\r\n  Formik+YUP+Typescript:\r\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\r\n  https://medium.com/@maurice.de.beijer/yup-validation-and-typescript-and-formik-6c342578a20e\r\n*/\r\n\r\n\r\n\r\nexport function Login() {\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: loginSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        login(values.email, values.password)\r\n          .then((data:any) => {\r\n            setLoading(false)\r\n            if (data.error) {\r\n              setSubmitting(false)\r\n              setStatus(data.error)\r\n            } else {\r\n              \r\n              dispatch(auth.actions.login(data.data.token))\r\n            }\r\n          })\r\n          .catch(() => {\r\n            setLoading(false)\r\n            setSubmitting(false)\r\n            setStatus('The login detail is incorrect')\r\n          })\r\n      }, 1000)\r\n    },\r\n  })\r\n  return (\r\n    <form\r\n      className='form w-100'\r\n      onSubmit={formik.handleSubmit}\r\n      noValidate\r\n      id='kt_login_signin_form'\r\n    >\r\n      {/* begin::Heading */}\r\n      <div className='text-center mb-10'>\r\n        <h1 className='text-dark mb-3'>Đăng nhập vào hệ thống</h1>\r\n        {/*<div className='text-gray-400 fw-bold fs-4'>\r\n          Tạo mới ?{' '}\r\n          <Link to='/auth/registration' className='link-primary fw-bolder'>\r\n            Tạo mới tài khoản\r\n          </Link>\r\n        </div>*/}\r\n\r\n      </div>\r\n      {/* begin::Heading */}\r\n\r\n      {formik.status &&\r\n        <div className='mb-lg-15 alert alert-danger'>\r\n          <div className='alert-text font-weight-bold'>{formik.status}</div>\r\n        </div>\r\n      }\r\n\r\n      {/* begin::Form group */}\r\n      <div className='fv-row mb-10'>\r\n        <label className='form-label fs-6 fw-bolder text-dark'>Email</label>\r\n        <input\r\n          placeholder='Email'\r\n          {...formik.getFieldProps('email')}\r\n          className={clsx(\r\n            'form-control form-control-lg form-control-solid',\r\n            { 'is-invalid': formik.touched.email && formik.errors.email },\r\n            {\r\n              'is-valid': formik.touched.email && !formik.errors.email,\r\n            }\r\n          )}\r\n          type='email'\r\n          name='email'\r\n          autoComplete='off'\r\n        />\r\n        {formik.touched.email && formik.errors.email && (\r\n          <div className='fv-plugins-message-container'>\r\n            <span role='alert'>{formik.errors.email}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* end::Form group */}\r\n\r\n      {/* begin::Form group */}\r\n      <div className='fv-row mb-10'>\r\n        <div className='d-flex justify-content-between mt-n5'>\r\n          <div className='d-flex flex-stack mb-2'>\r\n            {/* begin::Label */}\r\n            <label className='form-label fw-bolder text-dark fs-6 mb-0'>Password</label>\r\n            {/* end::Label */}\r\n            {/* begin::Link */}\r\n            {/*<Link\r\n              to='/auth/forgot-password'\r\n              className='link-primary fs-6 fw-bolder'\r\n              style={{ marginLeft: '5px' }}\r\n            >\r\n              Forgot Password ?\r\n            </Link>*/}\r\n            {/* end::Link */}\r\n          </div>\r\n        </div>\r\n        <input\r\n          type='password'\r\n          autoComplete='off'\r\n          {...formik.getFieldProps('password')}\r\n          className={clsx(\r\n            'form-control form-control-lg form-control-solid',\r\n            {\r\n              'is-invalid': formik.touched.password && formik.errors.password,\r\n            },\r\n            {\r\n              'is-valid': formik.touched.password && !formik.errors.password,\r\n            }\r\n          )}\r\n        />\r\n        {formik.touched.password && formik.errors.password && (\r\n          <div className='fv-plugins-message-container'>\r\n            <div className='fv-help-block'>\r\n              <span role='alert'>{formik.errors.password}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* end::Form group */}\r\n\r\n      {/* begin::Action */}\r\n      <div className='text-center'>\r\n        <button\r\n          type='submit'\r\n          id='kt_sign_in_submit'\r\n          className='btn btn-lg btn-primary w-100 mb-5'\r\n          disabled={formik.isSubmitting || !formik.isValid}\r\n        >\r\n          {!loading && <span className='indicator-label'>Tiếp tục</span>}\r\n          {loading && (\r\n            <span className='indicator-progress' style={{ display: 'block' }}>\r\n              Vui lòng chờ...\r\n              <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n            </span>\r\n          )}\r\n        </button>\r\n      </div>\r\n      {/* end::Action */}\r\n    </form>\r\n  )\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\search\\Search.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\auth\\components\\Registration.tsx",["3916"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport clsx from 'clsx'\r\nimport * as auth from '../redux/AuthRedux'\r\nimport { register } from '../redux/AuthCRUD'\r\nimport { Link } from 'react-router-dom'\r\nimport { toAbsoluteUrl } from '../../../../_metronic/helpers'\r\nimport { PasswordMeterComponent } from \"../../../../_metronic/assets/ts/components\";\r\n\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n  changepassword: '',\r\n  acceptTerms: false,\r\n}\r\n\r\nconst registrationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Wrong email format')\r\n    .min(3, 'Minimum 3 symbols')\r\n    .max(50, 'Maximum 50 symbols')\r\n    .required('Email is required'),\r\n  password: Yup.string()\r\n    .min(3, 'Minimum 3 symbols')\r\n    .max(50, 'Maximum 50 symbols')\r\n    .required('Password is required'),\r\n  changepassword: Yup.string()\r\n    .required('Password confirmation is required')\r\n    .when('password', {\r\n      is: (val: string) => (val && val.length > 0 ? true : false),\r\n      then: Yup.string().oneOf([Yup.ref('password')], \"Password and Confirm Password didn't match\"),\r\n    }),\r\n  acceptTerms: Yup.bool().required('You must accept the terms and conditions'),\r\n})\r\n\r\nexport function Registration() {\r\n  const [loading, setLoading] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema: registrationSchema,\r\n    onSubmit: (values, { setStatus, setSubmitting }) => {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        register(values.email,values.password)\r\n          .then((data:any) => {\r\n            setLoading(false)\r\n            if(data.data.status===\"fail\"){\r\n              setSubmitting(false)\r\n              setStatus(data.data.message)\r\n            }else{\r\n              dispatch(auth.actions.login(data.data.token))\r\n            }\r\n          })\r\n          .catch(() => {\r\n            setLoading(false)\r\n            setSubmitting(false)\r\n            setStatus('Registration process has broken')\r\n          })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  useEffect(() => {\r\n    PasswordMeterComponent.bootstrap();\r\n  }, []);\r\n\r\n  return (\r\n    <form\r\n      className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\r\n      noValidate\r\n      id='kt_login_signup_form'\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      {/* begin::Heading */}\r\n      <div className='mb-10 text-center'>\r\n        {/* begin::Title */}\r\n        <h1 className='text-dark mb-3'>Tạo tài khoản</h1>\r\n        {/* end::Title */}\r\n\r\n        {/* begin::Link */}\r\n        {\r\n          /*\r\n          <div className='text-gray-400 fw-bold fs-4'>\r\n            Already have an account?\r\n            <Link to='/auth/login' className='link-primary fw-bolder' style={{ marginLeft: '5px' }}>\r\n              Forgot Password ?\r\n            </Link>\r\n          </div>\r\n          */\r\n        }\r\n\r\n        {/* end::Link */}\r\n      </div>\r\n      {/* end::Heading */}\r\n      <div className='d-flex align-items-center mb-10'>\r\n        <div className='border-bottom border-gray-300 mw-50 w-100'></div>\r\n        <span className='fw-bold text-gray-400 fs-7 mx-2'>OR</span>\r\n        <div className='border-bottom border-gray-300 mw-50 w-100'></div>\r\n      </div>\r\n\r\n      {formik.status && (\r\n        <div className='mb-lg-15 alert alert-danger'>\r\n          <div className='alert-text font-weight-bold'>{formik.status}</div>\r\n        </div>\r\n      )}\r\n      {/* begin::Form group Email */}\r\n      <div className='fv-row mb-7'>\r\n        <label className='form-label fw-bolder text-dark fs-6'>Email</label>\r\n        <input\r\n          placeholder='Email'\r\n          type='email'\r\n          autoComplete='off'\r\n          {...formik.getFieldProps('email')}\r\n          className={clsx(\r\n            'form-control form-control-lg form-control-solid',\r\n            { 'is-invalid': formik.touched.email && formik.errors.email },\r\n            {\r\n              'is-valid': formik.touched.email && !formik.errors.email,\r\n            }\r\n          )}\r\n        />\r\n        {formik.touched.email && formik.errors.email && (\r\n          <div className='fv-plugins-message-container'>\r\n            <div className='fv-help-block'>\r\n              <span role='alert'>{formik.errors.email}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* end::Form group */}\r\n\r\n      {/* begin::Form group Password */}\r\n      <div className='mb-10 fv-row' data-kt-password-meter='true'>\r\n        <div className='mb-1'>\r\n          <label className='form-label fw-bolder text-dark fs-6'>Password</label>\r\n          <div className='position-relative mb-3'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              autoComplete='off'\r\n              {...formik.getFieldProps('password')}\r\n              className={clsx(\r\n                'form-control form-control-lg form-control-solid',\r\n                {\r\n                  'is-invalid': formik.touched.password && formik.errors.password,\r\n                },\r\n                {\r\n                  'is-valid': formik.touched.password && !formik.errors.password,\r\n                }\r\n              )}\r\n            />\r\n            {formik.touched.password && formik.errors.password && (\r\n              <div className='fv-plugins-message-container'>\r\n                <div className='fv-help-block'>\r\n                  <span role='alert'>{formik.errors.password}</span>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {/* begin::Meter */}\r\n          <div\r\n            className=\"d-flex align-items-center mb-3\"\r\n            data-kt-password-meter-control=\"highlight\"\r\n          >\r\n            <div\r\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2\"\r\n            ></div>\r\n            <div\r\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2\"\r\n            ></div>\r\n            <div\r\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2\"\r\n            ></div>\r\n            <div\r\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px\"\r\n            ></div>\r\n          </div>\r\n          {/* end::Meter */}\r\n        </div>\r\n        <div className=\"text-muted\">\r\n          Use 8 or more characters with a mix of letters, numbers & symbols.\r\n        </div>\r\n      </div>\r\n      {/* end::Form group */}\r\n\r\n      {/* begin::Form group Confirm password */}\r\n      <div className='fv-row mb-5'>\r\n        <label className='form-label fw-bolder text-dark fs-6'>Confirm Password</label>\r\n        <input\r\n          type='password'\r\n          placeholder='Password confirmation'\r\n          autoComplete='off'\r\n          {...formik.getFieldProps('changepassword')}\r\n          className={clsx(\r\n            'form-control form-control-lg form-control-solid',\r\n            {\r\n              'is-invalid': formik.touched.changepassword && formik.errors.changepassword,\r\n            },\r\n            {\r\n              'is-valid': formik.touched.changepassword && !formik.errors.changepassword,\r\n            }\r\n          )}\r\n        />\r\n        {formik.touched.changepassword && formik.errors.changepassword && (\r\n          <div className='fv-plugins-message-container'>\r\n            <div className='fv-help-block'>\r\n              <span role='alert'>{formik.errors.changepassword}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {/* end::Form group */}\r\n\r\n      {/* begin::Form group */}\r\n      <div className='fv-row mb-10'>\r\n        <div className='form-check form-check-custom form-check-solid'>\r\n          <input\r\n            className='form-check-input'\r\n            type='checkbox'\r\n            id='kt_login_toc_agree'\r\n            {...formik.getFieldProps('acceptTerms')}\r\n          />\r\n          <label\r\n            className='form-check-label fw-bold text-gray-700 fs-6'\r\n            htmlFor='kt_login_toc_agree'\r\n          >\r\n            I Agree the{' '}\r\n            <Link to='/auth/terms' className='ms-1 link-primary'>\r\n              terms and conditions\r\n            </Link>\r\n            .\r\n          </label>\r\n          {formik.touched.acceptTerms && formik.errors.acceptTerms && (\r\n            <div className='fv-plugins-message-container'>\r\n              <div className='fv-help-block'>\r\n                <span role='alert'>{formik.errors.acceptTerms}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* end::Form group */}\r\n\r\n      {/* begin::Form group */}\r\n      <div className='text-center'>\r\n        <button\r\n          type='submit'\r\n          id='kt_sign_up_submit'\r\n          className='btn btn-lg btn-primary w-100 mb-5'\r\n          disabled={formik.isSubmitting || !formik.isValid || !formik.values.acceptTerms}\r\n        >\r\n          {!loading && <span className='indicator-label'>Tạo tài khoản</span>}\r\n          {loading && (\r\n            <span className='indicator-progress' style={{ display: 'block' }}>\r\n              Please wait...{' '}\r\n              <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n            </span>\r\n          )}\r\n        </button>\r\n        <Link to='/auth/login'>\r\n          <button\r\n            type='button'\r\n            id='kt_login_signup_form_cancel_button'\r\n            className='btn btn-lg btn-light-primary w-100 mb-5'\r\n          >\r\n            Cancel\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      {/* end::Form group */}\r\n    </form>\r\n  )\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\ComputerListSub.tsx",["3917","3918","3919","3920","3921","3922","3923","3924","3925","3926"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport {ProxyModel} from 'app/modules/history/models/Account'\r\nimport ComputerItem from './components/ComputerItem'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { actions } from './redux/AccountRedux'\r\nimport { RootState } from 'setup'\r\nimport {Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\ntype Props = {\r\n  className: string,\r\n}\r\n\r\nconst ComputerListSub: React.FC<Props> = ({ className }) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [ipv4, setipv4] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [addtrue, setAddTrue] = useState(0)\r\n  const [status, setStatus] = useState('')\r\n  const proxies:ProxyModel[] = useSelector<RootState>(({ histories }) => histories.proxies, shallowEqual) as ProxyModel[] || []\r\n  let sum_total=0;\r\n  let sum_die=0;\r\n\r\n  for (var i = 0; i < proxies.length; i++) {\r\n      if(proxies[i].state==0){\r\n        sum_die=sum_die+1\r\n      }\r\n  }\r\n  useEffect(() => {\r\n    dispatch(actions.requestProxiesSub())\r\n    setipv4('')\r\n    setKeyTrue(0)\r\n  }, [status])\r\n  async function delipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxysub/delipv4?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/addipv4?ipv4='+ipv4+\"&option_setting=sub\";\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addcron() {\r\n    let  requestUrl = API_URL+'proxy/addcron'\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {num} = responseJson;\r\n    sum_total=num\r\n    return num\r\n  }\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" đơn!\") == true) {\r\n      for(var i=0;i<arr.length;i++){\r\n        delipv4(arr[i])\r\n      }\r\n      setStatus('true')\r\n    }\r\n  }\r\n  const clickAddHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    for(var i=0;i<arr.length;i++){\r\n      addipv4(arr[i])\r\n    }\r\n    setStatus('true')\r\n  }\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách Proxy</span>\r\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {proxies.length} | Die: {sum_die} | Live: {proxies.length-sum_die})</span>\r\n            </div>\r\n            {keytrue==0&&<div className=\"col-lg-6 col-sm-12 text-right\">\r\n              <button\r\n                  onClick={() => {\r\n                    setKeyTrue(1)\r\n                    setAddTrue(1)\r\n                  }}\r\n                  className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>\r\n                <button style={{margin:5}}\r\n                    onClick={() => {\r\n                      setKeyTrue(1)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>\r\n              <button\r\n                  onClick={() => {\r\n                    addcron()\r\n                    alert('Số Cron:'+sum_total)\r\n                  }}\r\n                  className='btn btn-light-facebook'\r\n              >\r\n                Add Cron\r\n              </button>\r\n            </div>}\r\n\r\n          </div>\r\n        </div>\r\n        {keytrue==1&&<div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\r\n            <div >\r\n                <Input style={{height:500,width:'100%',float:\"left\"}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 ipv4 một dòng!\"}\r\n                       value={ipv4}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setipv4(e.target.value)}\r\n                />\r\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                        onClick={() => {\r\n                          clickDeleteHandler()\r\n                        }}\r\n                    /*\r\n                    if(key.trim().length==0){\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.requestOrders(''))\r\n                      }else{\r\n                        dispatch(actions.requestOrders(user))\r\n                      }\r\n                    }else{\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.showordersfilter(key,''))\r\n                      }else{\r\n                        dispatch(actions.showordersfilter(key,user))\r\n                      }\r\n                    }\r\n                    //setKey(\"\")\r\n                  }}\r\n\r\n                     */\r\n                        className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>}\r\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                                   onClick={() => {\r\n                                     clickAddHandler()\r\n                                   }}\r\n                  /*\r\n                  if(key.trim().length==0){\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.requestOrders(''))\r\n                    }else{\r\n                      dispatch(actions.requestOrders(user))\r\n                    }\r\n                  }else{\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.showordersfilter(key,''))\r\n                    }else{\r\n                      dispatch(actions.showordersfilter(key,user))\r\n                    }\r\n                  }\r\n                  //setKey(\"\")\r\n                }}\r\n\r\n                   */\r\n                                   className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>}\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      {keytrue==0&&<div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Ipv4</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Option Setting</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>State</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {\r\n                proxies&&proxies?.map((item: ProxyModel,index:number) => {\r\n                  return <ComputerItem key={\"ipv4-\"+index} item={item} index={index}/>\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {/* end::Table */}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>}\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComputerListSub\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\redux\\OrdersRedux.ts",["3927","3928","3929","3930","3931","3932"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n  updateThreadPending,\r\n  addOrder,\r\n  addOrderManual,\r\n  deleteChannel,\r\n  addOrderMulti,\r\n  getOrderPercentFilter, updatePriority,updateThread\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Orderpending] Filter',\r\n  ShowOrdersPercentFilter:'[Orderpending] Percent Filter',\r\n  RequestOrders: '[Orderpending] Requested',\r\n  OrdersLoadedSuccess: '[Orderpending] Loaded succcess',\r\n  OrdersLoadedFail: '[Orderpending] load fail',\r\n  AddOrderRequest: '[Orderpending] Add Order Request',\r\n  AddOrderManualRequest: '[Orderpending] Add Order Manual Request',\r\n  AddOrderSuccess: '[Orderpending] Add Order Success',\r\n  AddOrdersSuccess: '[Orderpending] Add Orders Success',\r\n  AddOrderFail: '[Orderpending] Add Order Fail',\r\n  ShowcurrentOrder: '[Orderpending] Show Order',\r\n  RequestUpdate: '[Orderpending] Requested Update',\r\n  RequestUpdateThread: '[Orderpending] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[Orderpending] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[Orderpending] Update Multi Thread Request',\r\n  UpdateSuccess: '[Orderpending] Update Success',\r\n  UpdateMultiSuccess: '[Orderpending] Update Multi Success',\r\n  UpdateFail: '[Orderpending] Update Fail',\r\n  ClearSelected: '[Orderpending] Clear selected account',\r\n  GroupLoadedRequest: '[Orderpending] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Orderpending] Group Loaded Success',\r\n  GroupLoadedFail: '[Orderpending] Group Loaded Fail',\r\n  GroupAddRequest: '[Orderpending] GroupAddRequest',\r\n  GroupAddSuccess: '[Orderpending] Group Add Success',\r\n  GroupAddFail: '[Orderpending] Group Add Fail',\r\n  GroupDeleteRequest: '[Orderpending] Group Delete Request',\r\n  GroupDeleteSuccess: '[Orderpending] Group Delete Success',\r\n  SelectGroup: '[Orderpending] Select Group',\r\n  DeleteOrderRequest: '[Orderpending] Delete Order Request',\r\n  DeleteOrderSuccess: '[Orderpending] Delete Order Success',\r\n  CheckedChange: '[Orderpending] Checked Change',\r\n  CheckedAllChange: '[Orderpending] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.videoview?.videoid) {\r\n            return action.payload?.videoview\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: string) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videoview } }),\r\n  requestUpdateThread: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videoview } }),\r\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\r\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\r\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.videoview))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.videoview)\r\n    if (result && result.videoview) {\r\n      yield put(actions.updateMultiSuccess(result.videoview))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.videoview)) {\r\n            yield put(actions.addOrderSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateThreadPending(payload)\r\n        if (result && result.videoview) {\r\n          yield put(actions.updateMultiSuccess(result.videoview))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updatePriority(payload)\r\n      if (result && result.videoview) {\r\n        yield put(actions.updateMultiSuccess(result.videoview))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\r\n      if (result&&result.videoview!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\OrdersPage.tsx",["3933","3934","3935","3936","3937","3938"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orderpending }) => orderpending.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderpending }) => orderpending.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\redux\\OrdersCRUD.ts",["3939"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderviewpending?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"videoview/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/orderview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function addorderbychannelv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/orderchannelview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"videoview/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function updateThreadPending(videoid:string) {\r\n  const res:any = await getFunciton(\"videoview/updatethreadpending?videoid=\"+videoid)\r\n  return res\r\n}\r\n\r\nexport async function updatePriority(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/updatepriority\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videoview/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(videoid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/videoview/delete?videoid=\"+videoid+'&cancel='+cancel)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\OrderList.tsx",["3940","3941","3942","3943","3944","3945","3946","3947","3948","3949","3950","3951","3952","3953","3954","3955","3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3966","3967","3968","3969","3970","3971","3972","3973","3974","3975","3976","3977","3978","3979","3980","3981","3982","3983","3984","3985","3986","3987","3988","3989","3990","3991","3992","3993","3994","3995","3996","3997","3998","3999","4000","4001","4002","4003","4004","4005","4006","4007","4008","4009","4010","4011","4012","4013","4014","4015","4016","4017"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [loading, setLoading] = useState(true)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showManual, setShowManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [Checked, setChecked] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtime=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let sumthreadset=0;\r\n  let sumthread=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n  let sumtimedone=0;\r\n  const arr:string[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    videoid:\"\",\r\n  },])\r\n  orders.forEach(item=>{\r\n    sumthreadset=sumthreadset +item.maxthreads;\r\n    sumthread=sumthread+item.total;\r\n    sumtime=sumtime+item.viewtotal;\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    sumtimedone=sumtimedone+Math.round(Number(item.viewtotal==null?0:item.viewtotal))\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n    }\r\n  })\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  let videos=''\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickOrderRunningHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.videoid===item.videoid)\r\n      if(myElem && item.checked){\r\n        arr.push(item.videoid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn chạy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.editMultiOrderRequest(orderarr))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Chờ chạy {totaldordershow}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{format1((useEff<=1?sumvn:totalVnshow))} </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{format1((useEff<=1?sumvn:totalUsshow))}</span> </span>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng đặt {format1((useEff<=1?sumtime:totaltimeordershow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgba(241,133,133,0.97)\"}}>Đã chạy {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(141,133,133,0.97)\"}}>Còn tồn {format1((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tổng tiền {useEff<=1?summoney.toFixed(3):totalmoneyshow.toFixed(3)}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{(useEff<=1?(summoney-summoneyUS).toFixed(3):(totalmoneyshow-totalmoneyUSshow).toFixed(3))}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{(useEff<=1?summoneyUS.toFixed(3):totalmoneyUSshow.toFixed(3))}$</span></span>\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Ưu tiên\r\n                    </button>\r\n                )}\r\n\r\n                {role === \"ROLE_ADMIN\"&&isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickOrderRunningHandler()\r\n                            }}\r\n                            className='btn btn-success'\r\n                    >\r\n                      Duyệt chạy\r\n                    </button>\r\n                )}\r\n                {role === \"ROLE_ADMIN111\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                   onClick={() => {\r\n                                                     setShowBhManual(true)\r\n                                                   }}\r\n                                                   className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n                {role === \"ROLE_ADMIN111\"&&<button\r\n                    onClick={() => {\r\n                      setShowAddManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm video\r\n                </button>}\r\n                {role === \"ROLE_ADMIN111\"&&<button style={{margin:5,backgroundColor:\"#da6f6f\"}}\r\n                    onClick={() => {\r\n                      setShowManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm channel ID\r\n                </button>}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={101} value={101}>\r\n                    {\"101\"}\r\n                  </option>\r\n                  <option key={104} value={104}>\r\n                    {\"104\"}\r\n                  </option>\r\n                  <option key={106} value={106}>\r\n                    {\"106\"}\r\n                  </option>\r\n                  <option key={110} value={110}>\r\n                    {\"110\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                               //setKeyRate(keyrate)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted' >\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value=\"1\"\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.priority.toString()===(key.indexOf('p')>=0?key.replace('p',''):'done') || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0|| order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.priority.toString()===(key.indexOf('p')>=0?key.replace('p',''):'done') || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.priority.toString()===(key.indexOf('p')>=0?key.replace('p',''):'done') || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0  || order.priority.toString()===(key.indexOf('p')>=0?key.replace('p',''):'done') || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.viewtotal==null?0:order.viewtotal))/order.vieworder*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.vieworder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.vieworder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        videoid: order.videoid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <AddModal\r\n            show={showManual}\r\n            close={() => {\r\n              setShowManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\EditModal\\index.tsx",["4018","4019","4020","4021","4022","4023","4024","4025","4026","4027","4028","4029","4030","4031","4032","4033","4034","4035","4036","4037","4038","4039","4040"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderpending/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [vieworder, setvieworder] = useState(item.vieworder)\r\n    const [user,setUser]=useState(username)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            maxthreads,\r\n            vieworder,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid} | Đã chạy {format1((item.viewtotal==null?0:item.viewtotal))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {vieworder<item.vieworder?\"hoàn\": \"trả thêm\"}: {format1(((vieworder<item.vieworder?(item.vieworder-vieworder):(vieworder-item.vieworder))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\AddModal\\index.tsx",["4041","4042","4043","4044","4045","4046","4047","4048","4049","4050","4051","4052","4053","4054","4055","4056","4057"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(50)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  const [service, setService] = useState(666)\r\n  const [note, setNote] = useState(\"\")\r\n  const [vieworder, setVieworder] = useState(1000)\r\n  const [countorder, setCountorder] = useState(8)\r\n  const [user,setUser]=useState(username)\r\n  const [showorder,setShowOrder]=useState(true)\r\n  const [orderdonenum,setOrderDoneNum]=useState(0)\r\n  const [list_order,setList_Todo]=useState([{\r\n    id:\"0000000000\",\r\n    videoid:\"\",\r\n    state:\"\",\r\n    time:0,\r\n    price:0\r\n\r\n  },])\r\n  const [list_service,setList_Service]=useState([{\r\n    id:\"000\",\r\n    user:\"All Service\"\r\n  },])\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'servive/getallservice';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: arrlist[i].split('|')[0].trim(),\r\n        user: arrlist[i]\r\n      }\r\n      setList_Service([...list_service, orderitem])\r\n      list_service.push(orderitem)\r\n    }\r\n  }\r\n\r\n  async  function   getkey() {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    return key\r\n  }\r\n  let [sumprice,setSumPrice]=useState(0)\r\n  let [sumtime,setSumTime]=useState(0)\r\n  let [sumorder,setSumOrder]=useState(0)\r\n  const dismissModal = () => {\r\n    close()\r\n    setShowOrder(true)\r\n    setVideoid(\"\")\r\n\r\n    let or={\r\n      id:\"0000000000\",\r\n      videoid:\"\",\r\n      state:\"\",\r\n      time:0,\r\n      price:0\r\n    }\r\n    setList_Todo([or])\r\n    if(orderdonenum>0){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setOrderDoneNum(0)\r\n  }\r\n  async function order_video_ver2(video: string) {\r\n    await addorderv2(video,note,maxthreads,vieworder,service,user)\r\n        .then((data: any) => {\r\n          if (data.data.videoview == \"true\") {\r\n            setOrderDoneNum(orderdonenum + 1)\r\n            let orderitem = {\r\n              id: randomString(10),\r\n              videoid: video,\r\n              state: \"OK\",\r\n              time: data.data.time,\r\n              price: data.data.price\r\n            }\r\n\r\n            sumprice = sumprice + data.data.price\r\n            setSumPrice(sumprice)\r\n            sumtime = sumtime + vieworder;\r\n            setSumTime(sumtime)\r\n            sumorder = sumorder + 1\r\n            setSumOrder(sumorder)\r\n            console.log(sumprice, sumtime, sumorder)\r\n            setList_Todo([...list_order, orderitem])\r\n            list_order.push(orderitem)\r\n          } else {\r\n            let orderitem = {\r\n              id: randomString(10),\r\n              videoid: video,\r\n              time: 0,\r\n              state: data.data.videoview,\r\n              price: 0\r\n            }\r\n            setList_Todo([...list_order, orderitem])\r\n            list_order.push(orderitem)\r\n            //console.log(list_order)\r\n          }\r\n\r\n        })\r\n        .catch(() => {\r\n          let orderitem = {\r\n            id: randomString(10),\r\n            videoid: video,\r\n            state: 'Error',\r\n            time: 0,\r\n            price: 0\r\n          }\r\n          setList_Todo([...list_order, orderitem])\r\n          list_order.push(orderitem)\r\n        })\r\n  }\r\n  const  submit = async () => {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    setSumOrder(0)\r\n    setSumTime(0)\r\n    setSumPrice(0)\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"VideoId không để trống!\")\r\n      return\r\n    }\r\n\r\n    if (vieworder < 100) {\r\n      alert(\"Số giờ phải lớn hơn 100!\")\r\n      return\r\n    }\r\n    setShowOrder(false)\r\n    const channelid = videoid.split('\\n')\r\n    console.log(channelid.length)\r\n    for (var i = 0; i < channelid.length; i++) {\r\n      let videoIds=\"\"\r\n      var countvideo=0\r\n      const urlchannel = 'https://www.googleapis.com/youtube/v3/channels?key='+key+'&id='+channelid[i]+'&fields=items(statistics(videoCount))&part=statistics';\r\n      //console.log(urlchannel)\r\n      // Gửi yêu cầu API\r\n      await axios.get(urlchannel)\r\n          .then(response => {\r\n            countvideo  = parseInt(response.data.items[0].statistics.videoCount);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching data:', error);\r\n          });\r\n      if(countvideo<countorder){\r\n        //console.log(countvideo)\r\n        let orderitem = {\r\n          id: randomString(10),\r\n          videoid: channelid[i],\r\n          time: 0,\r\n          state: \"Tổng video chỉ có \"+countvideo.toString()+\"!\",\r\n          price: 0\r\n        }\r\n        setList_Todo([...list_order, orderitem])\r\n        list_order.push(orderitem)\r\n      }else{\r\n        const url = 'https://www.googleapis.com/youtube/v3/search?key='+key+'&channelId='+channelid[i]+'&fields=items(id(videoId))&part=id&order=date&maxResults='+(countorder+2).toString();\r\n        //console.log(url)\r\n        await axios.get(url)\r\n            .then(response => {\r\n              videoIds = response.data.items.map((item: { id: { videoId: string; }; }) => item.id.videoId).join(',');\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching data:', error);\r\n            });\r\n        var  videoidlist =await  videoIds.split(',')\r\n        var filtered = videoidlist.filter(function (el) {\r\n          return (el != null && el.length!=0);\r\n        });\r\n        videoidlist=filtered\r\n        //console.log(videoidlist)\r\n        if(false){\r\n          let orderitem = {\r\n            id: randomString(10),\r\n            videoid: channelid[i],\r\n            time: 0,\r\n            state: \"Channel không đủ \"+countorder.toString()+\" video!\",\r\n            price: 0\r\n          }\r\n          setList_Todo([...list_order, orderitem])\r\n          list_order.push(orderitem)\r\n        }else{\r\n          for (var j = 0; j < (videoidlist.length>countorder?countorder:videoidlist.length); j++) {\r\n            let video = videoidlist[j]\r\n            await order_video_ver2('https://www.youtube.com/watch?v='+video)\r\n            await getUserByToken()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getcounttimeorder()\r\n    console.log(list_service)\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n            <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách UID':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách link kênh\r\n                </Label>\r\n                <Input style={{minHeight:250}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 UID một dòng...\"}\r\n                       value={videoid}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <div>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Số video Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={countorder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setCountorder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Views Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={vieworder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                    Dịch vụ\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         onChange={(e) => setService(parseInt(e.target.value))}\r\n                         className=\"form-control form-control-solid\"\r\n                         type=\"select\"\r\n                         value={service}\r\n                  >\r\n                    {\r\n                      list_service.map((item, index) => {\r\n                        if(item.id!='000')\r\n                          return(\r\n                              <option key={item.id} value={item.id}>\r\n                                {item.user}</option>)\r\n                      })\r\n                    }\r\n                  </Input>\r\n                </FormGroup>\r\n                {role === \"ROLE_ADMIN\" &&<FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"max_thread\"\r\n                         name=\"max_thread\"\r\n                         value={maxthreads}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 1000\"\r\n                         onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>}\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" >\r\n                    Ghi chú\r\n                  </Label>\r\n                  <Input\r\n                      id=\"note\"\r\n                      name=\"note\"\r\n                      value={note}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"...\"\r\n                      onChange={(e) => setNote(e.target.value)}\r\n                      type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"card-body\" style={{width: \"100%\"}}>\r\n              {/* begin::Table container */}\r\n\r\n              {\r\n                list_order.map((item, index) => {\r\n                  if (item.videoid.length >0) return (\r\n                      <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                            <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                            <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                              {item.price.toPrecision()}$\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                  )\r\n                })\r\n              }\r\n              {/* end::Table container */}\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\BhManualModal\\index.tsx",["4058","4059","4060","4061","4062","4063","4064","4065","4066","4067","4068","4069","4070","4071","4072","4073","4074","4075","4076","4077","4078","4079","4080","4081","4082","4083","4084","4085","4086","4087","4088","4089","4090","4091","4092","4093"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\EditMulti\\index.tsx",["4094","4095","4096","4097","4098","4099","4100","4101","4102","4103","4104","4105","4106","4107","4108","4109","4110","4111","4112","4113","4114","4115","4116","4117","4118","4119","4120","4121","4122","4123"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/orderpending/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    console.log(listvieoid);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderpending }) => orderpending.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderpending }) => orderpending.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderpending }) => orderpending.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(200)\r\n    const [priority, setPriority] = useState(0)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [vieworder,setvieworder]=useState(1000)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n        if(myElem && item.checked){\r\n            arr.push(item.videoid)\r\n        }\r\n    })\r\n    console.log(arr)\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.videoid===item.videoid)\r\n            if(myElem && item.checked){\r\n                arr.push(item.videoid)\r\n            }\r\n        })\r\n        console.log(arr)\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            videoid,\r\n            note,\r\n            maxthreads,\r\n            viewstart,\r\n            timebuff,\r\n            user,\r\n            service,\r\n            vieworder,\r\n            priority\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Ưu tiên</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={vieworder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setvieworder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Mức ưu tiên\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={priority}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setPriority(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\modals\\AddManualModal\\index.tsx",["4124","4125","4126","4127","4128","4129","4130","4131","4132","4133","4134","4135","4136","4137"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderpending\\components\\OrderItem\\index.tsx",["4138","4139","4140","4141","4142","4143","4144","4145","4146","4147","4148","4149","4150","4151","4152","4153","4154","4155","4156","4157","4158"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\n\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid,1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                videoid:item.videoid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5,color:\"white\",}} href={API_URL+'videoview/getinfo?orderid=' + item.orderid} className='badge badge-danger'>\r\n                    {item.orderid}\r\n                </a>\r\n            </td>\r\n            <td>\r\n\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.vieworder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.viewstart}</span></span>\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.maxthreads>0?\"#03d96e\":\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                       {item.maxthreads>0?\"Running\":\"Pending\"} </span>\r\n                    {item.priority!=0&&<span style={{color:'white',fontSize:11,backgroundColor:item.priority>0?\"rgba(218,30,30,0.97)\":\"rgba(9,9,9,0.68)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                       {item.priority}</span>}\r\n                    <br/>\r\n                </span>\r\n\r\n            </td>\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span  className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                 <td >\r\n                     {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditModal\\index.tsx",["4159","4160","4161","4162","4163","4164","4165","4166","4167","4168","4169","4170","4171","4172","4173","4174","4175","4176","4177","4178","4179","4180","4181","4182","4183","4184","4185","4186","4187","4188","4189","4190","4191","4192","4193","4194","4195","4196","4197","4198","4199","4200","4201","4202","4203","4204","4205","4206"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderhistoryfind/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(item.homerate)\r\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\r\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\r\n    const [directrate,setDirect_rate]=useState(item.directrate)\r\n    //\r\n    const [likerate,setLike_rate]=useState(item.likerate)\r\n    const [commentrate,setComment_rate]=useState(item.commentrate)\r\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\r\n    const [user,setUser]=useState(username)\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(item.timebuff)\r\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\r\n    const [enabled,setEnabled]=useState(item.enabled)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate(item.orderid.toString(),0,1))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">[VIEW] Bạn muốn refund ${item.price} cho OrderId {item.orderid}?</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Refund</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal",["4207","4208"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrderListCmt.tsx",["4209","4210","4211","4212","4213","4214","4215","4216","4217","4218","4219","4220","4221","4222","4223","4224","4225","4226","4227","4228","4229","4230","4231","4232","4233","4234","4235","4236","4237","4238","4239","4240","4241","4242","4243","4244","4245","4246","4247","4248","4249","4250","4251","4252","4253","4254","4255","4256","4257","4258","4259","4260","4261","4262","4263","4264","4265","4266","4267","4268","4269","4270","4271","4272","4273","4274","4275","4276","4277","4278","4279","4280","4281","4282","4283","4284","4285","4286"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelCmt,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMultiCmt from './modals/EditMultiCmt'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItemCmt from './components/OrderItemCmt'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\n\r\n\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModelCmt[]\r\n}\r\nconst OrderListCmt: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    orderid:0,\r\n    videoid: '',\r\n    timebuff:0,\r\n    timebuffhtotal: 0,\r\n    viewtotal:0,\r\n    viewstart:0,\r\n    viewend:0,\r\n    insertdate: \"\",\r\n    enddate: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    price:0,\r\n\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let[copy,setCopy] =useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let role: string =\r\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  const isShowCopy = orders.find((item) => {\r\n    if (item.status!=null) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  const clickRefund = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn refund \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.requestUpdateCmt(orderarr))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  let  clickCopy = () => {\r\n    const arr:string[]=[]\r\n    copy=\"\"\r\n    setCopy(\"\")\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.status.length>0){\r\n        copy=copy+item.orderid.toString()+\" | \"+item.status+\"\\n\"\r\n      }\r\n      setCopy(copy)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#ffffff\",backgroundColor:\"rgb(9,9,9)\"}}>Comments Video Youtube</span> <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tìm thấy {totaldordershow}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{format1((totalVnshow))} </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{format1((totalUsshow))}</span> </span>\r\n              <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng chạy {format1(totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tổng tiền {totalmoneyshow.toFixed(3)}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{((totalmoneyshow-totalmoneyUSshow).toFixed(3))}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{(totalmoneyUSshow.toFixed(3))}$</span></span>\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-5 col-sm-12 text-right\">\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5}}\r\n                          onClick={() => {\r\n                            clickRefund()\r\n                          }}\r\n                          className='btn btn-google'\r\n                  >\r\n                    Refunds\r\n                  </button>\r\n              )}\r\n              { isShowCopy && role === \"ROLE_ADMIN\"&&(\r\n                  <CopyToClipboard\r\n                      text={copy}\r\n                      onCopy={() => {clickCopy()}}>\r\n                    <span className='btn btn-google' style={{backgroundColor:\"white\",color:\"black\"}}>{copy==\"\"?\"Copy Text\":\"Copied\"}</span>\r\n                  </CopyToClipboard>\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Export\r\n              </button>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                     onChange={(e) => {\r\n                       setKeyUser(e.target.value)\r\n                       setKeyUserTrue(1)\r\n                     }}\r\n                     className=\"form-control form-control-solid\"\r\n                     type=\"select\"\r\n                     value={keyuser}\r\n              >\r\n                {\r\n                  list_user.map((item, index) => {\r\n                    return(\r\n                        <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                          {item.user}</option>)\r\n                  })\r\n                }\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-google'\r\n              >\r\n                Đối soát\r\n              </button>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {\r\n                        setShowAddManual(true)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Tra cứu nhanh\r\n              </button>\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='card-body py-3'>\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChangeCmt(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span  style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {Array.isArray(orders)&&\r\n                orders.map((order: OrderModelCmt, index: number) => {\r\n                  if (keyusertrue==0&&keytrue==0) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                      &&keytrue==1&&keyusertrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(keytrue==0&&keyusertrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                      &&keytrue==1&&keyusertrue==0\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                      &&keytrue==1&&keyusertrue==1) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                      &&keytrue==1&&keyusertrue==1) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))\r\n                      if(order.service>600){\r\n                        totalvn=1\r\n                      }else{\r\n                        totalmoneyUS=order.price\r\n                        totalUs=1\r\n                      }\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.viewtotal==null?0:order.viewtotal))+totaltimebuffedorder\r\n                      if(order.service>600){\r\n                        totalvn=1+totalvn\r\n                      }else{\r\n                        totalUs=1+totalUs\r\n                        totalmoneyUS=totalmoneyUS+order.price\r\n                      }\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.videoid,\r\n                      timebuff:order.timebuff,\r\n                      viewtotal:order.viewtotal,\r\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\r\n                      viewstart:order.viewstart,\r\n                      viewend:order.viewend,\r\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderItemCmt\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                    return null\r\n                })}\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      {showAdd && (\r\n        <AddModal\r\n          show={true}\r\n          close={() => {\r\n            setShowAdd(false)\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <EditMultiCmt\r\n        show={showEditMulti}\r\n        close={() => {\r\n          setShowEditMulti(false)\r\n        }}\r\n      />\r\n      <AddManualModal\r\n        show={showAddManual}\r\n        close={() => {\r\n          setShowAddManual(false)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {OrderListCmt}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\components\\OrderItemCmt\\index.tsx",["4287","4288","4289","4290","4291","4292","4293","4294","4295","4296","4297","4298","4299","4300","4301","4302","4303","4304"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModelCmt } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModelCmt,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        if (window.confirm(\"Bạn có chắc chắn muốn refund orderId \"+item.orderid!\r\n        ) == true) {\r\n            dispatch(actions.requestUpdateCmt(item.orderid.toString()))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChangeCmt({\r\n                                orderid:item.orderid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\r\n                    {item.videoid}\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.commentorder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.commentstart}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.commenttotal==null?0:item.commenttotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.commenttotal==null?0:item.commenttotal))/item.commentorder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.commenttotal==null?0:item.commenttotal))/item.commentorder*100))+'%'}</span></span>\r\n                    <br/>\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //   <img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\")}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\"}} className='badge badge-success'>P</span> :\r\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\"}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.enddate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.enddate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\r\n            </td>\r\n            {\r\n                item.status==null&&role === \"ROLE_ADMIN\"&&item.price!=0&&<td >\r\n                    <a href='#' onClick={clickUpdateHandler} style={{color:'white',backgroundColor:'rgba(220,13,13,0.97)'}} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        R\r\n                    </a>\r\n                </td>\r\n            }\r\n            {item.status!=null&&\r\n                role === \"ROLE_ADMIN\"&&<td >\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.status.includes(\"Đã\")?\"#03d96e\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.status}</span>\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditModalCmt\\index.tsx",["4305","4306","4307","4308","4309","4310","4311","4312","4313","4314","4315","4316","4317","4318","4319","4320","4321","4322","4323","4324","4325","4326","4327","4328","4329","4330","4331","4332","4333","4334","4335","4336","4337","4338","4339","4340","4341","4342","4343","4344","4345","4346","4347","4348","4349","4350","4351","4352"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModelCmt} from 'app/modules/orderhistoryfind/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModelCmt\r\n\r\n}\r\n\r\nconst EditModalCmt: React.FC<Props> = ({ item}) => {\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(item.homerate)\r\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\r\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\r\n    const [directrate,setDirect_rate]=useState(item.directrate)\r\n    //\r\n    const [likerate,setLike_rate]=useState(item.likerate)\r\n    const [commentrate,setComment_rate]=useState(item.commentrate)\r\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\r\n    const [user,setUser]=useState(username)\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(item.timebuff)\r\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\r\n    const [enabled,setEnabled]=useState(item.enabled)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    console.log(item.orderid)\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdateCmt(item.orderid.toString()))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">[CMT] Bạn muốn refund ${item.price} cho OrderId {item.orderid}?</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Refund</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModalCmt","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\modals\\EditMultiCmt\\index.tsx",["4353","4354","4355","4356","4357","4358","4359","4360","4361","4362","4363","4364","4365","4366","4367","4368","4369","4370","4371","4372","4373","4374","4375","4376","4377","4378","4379","4380","4381","4382","4383","4384","4385","4386","4387","4388","4389","4390","4391","4392","4393","4394","4395","4396","4397","4398","4399","4400","4401","4402"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModelCmt } from 'app/modules/orderhistoryfind/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMultiCmt: React.FC<Props> = ({ show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const groups: Group[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModelCmt[] = useSelector<RootState>(({ orderhistoryfind }) => orderhistoryfind.ordersCmt, shallowEqual) as OrderModelCmt[] || []\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(100)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    const [user,setUser]=useState(username)\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    //\r\n    const [enabled,setEnabled]=useState(1)\r\n\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let sum=0;\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        if(item.checked==true)\r\n            sum=sum+1\r\n            arr.push(item.orderid.toString())\r\n    })\r\n\r\n    const orderid=arr.join(',')\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdateCmt(orderid.toString()))\r\n        close()\r\n    }\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">[CMT] Bạn chắc chắn refund {sum} đơn?</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={submit} className=\"btn btn-primary\">Refund</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMultiCmt","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\UserListLimit.tsx",["4403","4404","4405","4406","4407","4408","4409","4410","4411","4412","4413","4414","4415","4416","4417","4418","4419","4420","4421","4422","4423","4424","4425","4426","4427","4428","4429","4430","4431","4432","4433","4434","4435"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel ,AccountLimitModel} from 'app/modules/setting/models/Account'\r\n\r\nimport UserItemLimit from './components/UserItemLimit'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountLimitModel[]\r\n}\r\n\r\nconst UserListLimit: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const isShowFixMulti = accounts.find((item) => {\r\n    if (item.checked) {\r\n\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  useEffect(() => {\r\n  },[]);\r\n\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Giới hạn service</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-100px'>User</th>\r\n                <th className='min-w-100px'>Service</th>\r\n                <th className='min-w-100px'>MaxOrder</th>\r\n                <th className='min-w-100px'>MaxRunning</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: AccountLimitModel,index:number) => {\r\n                      return <UserItemLimit key={item.id+index} item={item} index={index} />\r\n                    })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\nexport  { UserListLimit }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\components\\UserItemLimit\\index.tsx",["4436","4437","4438","4439","4440","4441","4442","4443"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountLimitModel } from 'app/modules/setting/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AccountLimitModel,\r\n    index:number\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst UserItemLimit : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccountLimit(item))\r\n    }\r\n    return (\r\n\r\n        <tr>\r\n            <td>\r\n                <span>\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}} >\r\n                    {item.user}\r\n                    </text>\r\n                </span>\r\n\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.service}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:12}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxorder}\r\n                                </text>\r\n                    </span>\r\n                <span style={{ color:'white',fontSize:10,backgroundColor:\"rgba(20,122,178,0.66)\",marginLeft:5,padding:2}} className='badge badge-success 1'>{item.countorder}</span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:12}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.maxrunning}\r\n                                </text>\r\n                    </span>\r\n                <span style={{ color:'white',fontSize:10,backgroundColor:\"#03d96e\",marginLeft:5,padding:2}} className='badge badge-success 1'>{item.countdone}</span>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItemLimit","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\modals\\EditLimitModal\\index.tsx",["4444","4445","4446","4447","4448","4449","4450","4451","4452","4453"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountLimitModel } from 'app/modules/setting/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\n\r\ntype Props = {\r\n    item: AccountLimitModel\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst EditLimitModal: React.FC<Props> = ({ item }) => {\r\n    console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [maxorder, setmaxorder] = useState(item.maxorder)\r\n    const [maxrunning, setmaxrunning] = useState(item.maxrunning)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccountLimit())\r\n    }\r\n    const updateUser = () => {\r\n        dispatch(actions.requestUpdateLimit({\r\n            ...item,\r\n            maxorder,\r\n            maxrunning\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update {item.user}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Số đơn Pending</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxorder} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxorder(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số đơn Running</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={maxrunning} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setmaxrunning(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditLimitModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\OrdersPage.tsx",["4454","4455","4456","4457","4458","4459"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ ordertraffic }) => ordertraffic.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ ordertraffic }) => ordertraffic.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.orderid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\redux\\OrdersRedux.ts",["4460","4461","4462","4463","4464","4465","4466","4467","4468"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n  updateThread,\r\n  addOrder,\r\n  addOrderManual,\r\n  deleteChannel,\r\n  addOrderMulti,\r\n  getOrderPercentFilter\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[Ordertraffic] Filter',\r\n  ShowOrdersPercentFilter:'[Ordertraffic] Percent Filter',\r\n  RequestOrders: '[Ordertraffic] Requested',\r\n  OrdersLoadedSuccess: '[Ordertraffic] Loaded succcess',\r\n  OrdersLoadedFail: '[Ordertraffic] load fail',\r\n  AddOrderRequest: '[Ordertraffic] Add Order Request',\r\n  AddOrderManualRequest: '[Ordertraffic] Add Order Manual Request',\r\n  AddOrderSuccess: '[Ordertraffic] Add Order Success',\r\n  AddOrdersSuccess: '[Ordertraffic] Add Orders Success',\r\n  AddOrderFail: '[Ordertraffic] Add Order Fail',\r\n  ShowcurrentOrder: '[Ordertraffic] Show Order',\r\n  RequestUpdate: '[Ordertraffic] Requested Update',\r\n  RequestUpdateThread: '[Ordertraffic] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[Ordertraffic] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[Ordertraffic] Update Multi Thread Request',\r\n  UpdateSuccess: '[Ordertraffic] Update Success',\r\n  UpdateMultiSuccess: '[Ordertraffic] Update Multi Success',\r\n  UpdateFail: '[Ordertraffic] Update Fail',\r\n  ClearSelected: '[Ordertraffic] Clear selected account',\r\n  GroupLoadedRequest: '[Ordertraffic] Group Loaded Request',\r\n  GroupLoadedSuccess: '[Ordertraffic] Group Loaded Success',\r\n  GroupLoadedFail: '[Ordertraffic] Group Loaded Fail',\r\n  GroupAddRequest: '[Ordertraffic] GroupAddRequest',\r\n  GroupAddSuccess: '[Ordertraffic] Group Add Success',\r\n  GroupAddFail: '[Ordertraffic] Group Add Fail',\r\n  GroupDeleteRequest: '[Ordertraffic] Group Delete Request',\r\n  GroupDeleteSuccess: '[Ordertraffic] Group Delete Success',\r\n  SelectGroup: '[Ordertraffic] Select Group',\r\n  DeleteOrderRequest: '[Ordertraffic] Delete Order Request',\r\n  DeleteOrderSuccess: '[Ordertraffic] Delete Order Success',\r\n  CheckedChange: '[Ordertraffic] Checked Change',\r\n  CheckedAllChange: '[Ordertraffic] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.orderid==item.orderid) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.orderid == action.payload?.webtraffic?.orderid) {\r\n            return action.payload?.webtraffic\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.webtraffic.find((_item:OrderModel)=>{\r\n            if(_item.orderid==item.orderid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.orderid===action.payload?.data?.orderid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (webtraffic: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { webtraffic } }),\r\n  requestUpdateThread: (webtraffic: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { webtraffic } }),\r\n  updateSuccess: (webtraffic: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { webtraffic } }),\r\n  updateMultiSuccess: (webtraffic: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { webtraffic } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (orderid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { orderid,cancel } }),\r\n  deleteOrderSuccess: (orderid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { orderid,cancel } }),\r\n  checkedChange: (data:{orderid:number,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.webtraffic))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.webtraffic))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.webtraffic))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.webtraffic)\r\n    if (result && result.webtraffic) {\r\n      yield put(actions.updateMultiSuccess(result.webtraffic))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.webtraffic)\r\n    if (result && result.webtraffic) {\r\n      yield put(actions.updateMultiSuccess(result.webtraffic))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.webtraffic)) {\r\n            yield put(actions.addOrderSuccess(result.webtraffic))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.webtraffic) {\r\n          yield put(actions.updateMultiSuccess(result.webtraffic))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateThread(payload)\r\n      if (result && result.webtraffic) {\r\n        yield put(actions.updateMultiSuccess(result.webtraffic))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.orderid,payload.cancel)\r\n      if (result&&result.webtraffic!==null) {\r\n        console.log(\"OKE\")\r\n        yield put(actions.deleteOrderSuccess(payload.orderid,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\OrderList.tsx",["4469","4470","4471","4472","4473","4474","4475","4476","4477","4478","4479","4480","4481","4482","4483","4484","4485","4486","4487","4488","4489","4490","4491","4492","4493","4494","4495","4496","4497","4498","4499","4500","4501","4502","4503","4504","4505","4506","4507","4508","4509","4510","4511","4512","4513","4514","4515","4516","4517","4518","4519","4520","4521","4522","4523","4524","4525","4526","4527","4528","4529","4530","4531","4532","4533","4534","4535","4536","4537","4538","4539","4540","4541","4542","4543","4544","4545","4546","4547","4548","4549","4550","4551","4552","4553","4554","4555","4556","4557","4558","4559","4560"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showManual, setShowManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimeorderus, setTotalTimeOrderUs] = useState(0)\r\n  let [totaltimeorderusshow, setTotalTimeOrderUsShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaltimebuffedorderus, setTotalTimeBuffedOrderUs] = useState(0)\r\n  let [totaltimebuffedorderusshow, setTotalTimeBuffedOrderUsShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthreadusset, setTotalThreadUsSet] = useState(0)\r\n  let [totalthreadsetusshow, setTotalThreadSetUsShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalthreadus, setTotalThreadUs] = useState(0)\r\n  let [totalthreadusshow, setTotalThreadUsShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtime=0;\r\n  let sumtimeus=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let sumthreadset=0;\r\n  let sumthread=0;\r\n  let sumthreadusset=0;\r\n  let sumthreadus=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n  let sumtimedone=0;\r\n  const arr:number[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    orderid:0,\r\n  },])\r\n  orders.forEach(item=>{\r\n    sumthreadset=sumthreadset +item.maxthreads;\r\n    sumthread=sumthread+item.total;\r\n    sumtime=sumtime+item.trafficorder;\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    sumtimedone=sumtimedone+Math.round(Number(item.traffictotal==null?0:item.traffictotal))\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      sumtimeus=sumtimeus+item.trafficorder;\r\n      sumthreadusset=sumthreadusset+item.maxthreads;\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n      sumthreadus=sumthreadus+item.total\r\n    }\r\n  })\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  let videos=''\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totaltimeorderusshow=totaltimeorderus\r\n    setTotalTimeOrderUsShow(totaltimeorderusshow)\r\n    totaltimeorderus=0\r\n    setTotalTimeOrderUs(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadsetusshow=totalthreadusset\r\n    setTotalThreadSetUsShow(totalthreadsetusshow)\r\n    setTotalThreadUsSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalthreadusshow=totalthreadus\r\n    setTotalThreadUsShow(totalthreadusshow)\r\n    setTotalThreadUs(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n\r\n    totaltimebuffedorderusshow=totaltimebuffedorderus\r\n    setTotalTimeBuffedOrderUsShow(totaltimebuffedorderusshow)\r\n    totaltimebuffedorderus=0\r\n    setTotalTimeBuffedOrderUs(0)\r\n\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  const clickDeleteHandler = () => {\r\n    const strings:number[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickDeleteOrderDoneHandler = () => {\r\n    const arr:number[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n        arr.push(item.orderid)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hoàn thành \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginTop:10,marginBottom:10,marginRight:5,marginLeft:5}}>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{(isMobile==false?\"Đang chạy \":\"Total Order \") +totaldordershow} </span>\r\n                </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695CFF\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Luồng cấp \":\"Set \")+ ((useEff<=1?sumthreadset:totalthreadsetshow)>=1000?(format1((useEff<=1?sumthreadset/1000:totalthreadsetshow/1000))+\"K\"):(format1((useEff<=1?sumthreadset:totalthreadsetshow))))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#b7080f\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Luồng chạy \":\"Run \") +((useEff<=1?sumthread:totalthreadshow)>=1000?(format1((useEff<=1?sumthread/1000:totalthreadshow/1000))+\"K\"):(format1((useEff<=1?sumthread:totalthreadshow))))} </span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Tổng đặt \":\"Quantity \")+ ((useEff<=1?sumtime:totaltimeordershow)>=1000?(format1((useEff<=1?sumtime/1000:totaltimeordershow/1000))+\"K\"):(format1((useEff<=1?sumtime:totaltimeordershow))))}</span>\r\n                  </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' >\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Đã chạy \":\"Done \")+ ((useEff<=1?sumtimedone:totaltimebuffedordershow)>=1000?(format1((useEff<=1?sumtimedone/1000:totaltimebuffedordershow/1000))+\"K\"):(format1((useEff<=1?sumtimedone:totaltimebuffedordershow))))} </span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695CFF\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Còn tồn \":\"Remains \")+ (((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))>=1000?(format1(((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))/1000)+\"K\"):(format1(((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow)))))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#b7080f\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Tổng tiền \":\"\") +(useEff<=1?summoney.toFixed(0):totalmoneyshow.toFixed(0))}$</span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Sửa luồng\r\n                    </button>\r\n                )}\r\n\r\n                {isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickDeleteOrderDoneHandler()\r\n                            }}\r\n                            className='btn btn-light'\r\n                    >\r\n                      Hoàn thành\r\n                    </button>\r\n                )}\r\n                {role === \"ROLE_ADMIN111\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                   onClick={() => {\r\n                                                     setShowBhManual(true)\r\n                                                   }}\r\n                                                   className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n                <button\r\n                    onClick={() => {\r\n                      setShowAddManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm Link\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={101} value={101}>\r\n                    {\"101\"}\r\n                  </option>\r\n                  <option key={104} value={104}>\r\n                    {\"104\"}\r\n                  </option>\r\n                  <option key={106} value={106}>\r\n                    {\"106\"}\r\n                  </option>\r\n                  <option key={110} value={110}>\r\n                    {\"110\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                               //setKeyRate(keyrate)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>}\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n                <th   className='min-w-150px text-sm'>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.trafficorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.trafficorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.trafficorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid: order.orderid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.trafficorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.trafficorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.trafficorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid: order.orderid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.traffictotal==null?0:order.traffictotal))/order.trafficorder*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.trafficorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.trafficorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.trafficorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid: order.orderid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.link)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.trafficorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.trafficorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.trafficorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid: order.orderid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.link)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0|| order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && Math.round((Math.round(Number(order.traffictotal==null?0:order.traffictotal))/order.trafficorder*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.trafficorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.trafficorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.trafficorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid: order.orderid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.traffictotal==null?0:order.traffictotal))/order.trafficorder*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.trafficorder\r\n                        totalthreadset=order.maxthreads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.maxthreads\r\n                          totaltimeorderus=order.trafficorder\r\n                          totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.maxthreads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.trafficorder+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.maxthreads\r\n                          totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid: order.orderid\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )}\r\n                    else if(((key.indexOf(order.link)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                        if(index===0){\r\n                          totaldorder=1\r\n                          totaltimeorder=order.trafficorder\r\n                          totalthreadset=order.maxthreads\r\n                          totalthread=order.total\r\n                          totalmoney=order.price\r\n                          totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                          if(order.service>600){\r\n                            totalvn=1\r\n                          }else{\r\n                            totalmoneyUS=order.price\r\n                            totalUs=1\r\n                            totalthreadus=order.total\r\n                            totalthreadusset=order.maxthreads\r\n                            totaltimeorderus=order.trafficorder\r\n                            totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                          }\r\n                        }else{\r\n                          totaldorder=totaldorder+1\r\n                          totalmoney=totalmoney+order.price\r\n                          totalthreadset=totalthreadset+order.maxthreads\r\n                          totalthread=totalthread+order.total\r\n                          totaltimeorder=order.trafficorder+totaltimeorder\r\n                          totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                          if(order.service>600){\r\n                            totalvn=1+totalvn\r\n                          }else{\r\n                            totalmoneyUS=totalmoneyUS+order.price\r\n                            totalUs=1+totalUs\r\n                            totalthreadus=totalthreadus+order.total\r\n                            totalthreadusset=totalthreadusset+order.maxthreads\r\n                            totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                            totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                          }\r\n                        }\r\n                        let orderitem = {\r\n                          id: totaldorder,\r\n                          orderid: order.orderid\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_video.push(orderitem)\r\n                        return (\r\n                            <OrderItem\r\n                                index={totaldorder}\r\n                                showEdit={role === 'ROLE_ADMIN'}\r\n                                key={order.orderid}\r\n                                item={order}\r\n                            />\r\n                        )\r\n                    }else if(((key.indexOf(order.link)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.maxthreads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.traffictotal==null?0:order.traffictotal))/order.trafficorder*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                        if(index===0){\r\n                          totaldorder=1\r\n                          totaltimeorder=order.trafficorder\r\n                          totalthreadset=order.maxthreads\r\n                          totalthread=order.total\r\n                          totalmoney=order.price\r\n                          totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                          if(order.service>600){\r\n                            totalvn=1\r\n                          }else{\r\n                            totalmoneyUS=order.price\r\n                            totalUs=1\r\n                            totalthreadus=order.total\r\n                            totalthreadusset=order.maxthreads\r\n                            totaltimeorderus=order.trafficorder\r\n                            totaltimebuffedorderus=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                          }\r\n                        }else{\r\n                          totaldorder=totaldorder+1\r\n                          totalmoney=totalmoney+order.price\r\n                          totalthreadset=totalthreadset+order.maxthreads\r\n                          totalthread=totalthread+order.total\r\n                          totaltimeorder=order.trafficorder+totaltimeorder\r\n                          totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                          if(order.service>600){\r\n                            totalvn=1+totalvn\r\n                          }else{\r\n                            totalmoneyUS=totalmoneyUS+order.price\r\n                            totalUs=1+totalUs\r\n                            totalthreadus=totalthreadus+order.total\r\n                            totalthreadusset=totalthreadusset+order.maxthreads\r\n                            totaltimeorderus=totaltimeorderus+order.trafficorder\r\n                            totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n                          }\r\n                        }\r\n                        let orderitem = {\r\n                          id: totaldorder,\r\n                          orderid: order.orderid\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_video.push(orderitem)\r\n                        return (\r\n                            <OrderItem\r\n                                index={totaldorder}\r\n                                showEdit={role === 'ROLE_ADMIN'}\r\n                                key={order.orderid}\r\n                                item={order}\r\n                            />\r\n                        )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <AddModal\r\n            show={showManual}\r\n            close={() => {\r\n              setShowManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\redux\\OrdersCRUD.ts",["4561"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"webtraffic/getordertraffic?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"webtraffic/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"webtraffic/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( link:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  trafficorder:number,\r\n                                  keywords:string,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/ordertraffic\", {\r\n    link:link,\r\n    maxthreads:maxthreads,\r\n    trafficorder:trafficorder,\r\n    keywords:keywords,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function addorderbychannelv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/orderchannelview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"webtraffic/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"webtraffic/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"webtraffic/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(orderid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/webtraffic/delete?orderid=\"+orderid+'&cancel='+cancel)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\EditModal\\index.tsx",["4562","4563","4564","4565","4566","4567","4568","4569","4570","4571","4572","4573","4574","4575","4576","4577","4578","4579","4580","4581","4582","4583","4584","4585"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/ordertraffic/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [trafficorder, settrafficorder] = useState(item.trafficorder)\r\n    const [user,setUser]=useState(item.user)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            maxthreads,\r\n            trafficorder,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.orderid} | Đã chạy {format1((item.traffictotal==null?0:item.traffictotal))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Traffic order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={trafficorder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => settrafficorder(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {trafficorder<item.traffictotal?\"hoàn\": \"trả thêm\"}: {format1(((trafficorder<item.trafficorder?(item.trafficorder-trafficorder):(trafficorder-item.trafficorder))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\AddManualModal\\index.tsx",["4586","4587","4588","4589","4590","4591","4592","4593","4594","4595","4596","4597","4598","4599","4600"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [link, setLink] = useState(\"\")\r\n    const [service, setService] = useState(901)\r\n    const [note, setNote] = useState(\"\")\r\n    const [trafficorder, setTrafficorder] = useState(1000)\r\n    const [keywords, setKeywords] = useState(\"\")\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        link:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getallservicetraffic?role='+role;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setLink(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            link:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(link: string) {\r\n            await addorderv2(link,note,maxthreads,trafficorder,keywords,service,user)\r\n                .then((data: any) => {\r\n                    if (data.data.webtraffic == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            link: link,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + trafficorder;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        console.log(sumprice, sumtime, sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            link: link,\r\n                            time: 0,\r\n                            state: data.data.webtraffic,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        link: link,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (keywords.trim() === \"\") {\r\n            alert(\"keyword không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (trafficorder < 100) {\r\n            alert(\"Số traffic phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const list_Link = link.split('\\n')\r\n        for (var i = 0; i < list_Link.length; i++) {\r\n            let link_web = list_Link[i]\r\n            await order_video_ver2(link_web)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link website':'Thành công: '+sumorder+' | traffic: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link website\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 link  một dòng...\"}\r\n                                value={link}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setLink(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Traffic Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"trafficorder\"\r\n                                    name=\"trafficorder\"\r\n                                    value={trafficorder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setTrafficorder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    onChange={(e) => setService(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"select\"\r\n                                    value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                            return(\r\n                                                <option key={item.id} value={item.id}>\r\n                                                    {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role != \"ROLE_USER\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Từ khóa\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"keywords\"\r\n                                    name=\"keywords\"\r\n                                    value={keywords}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setKeywords(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.link.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.link} key={item.link}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.link}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\EditMulti\\index.tsx",["4601","4602","4603","4604","4605","4606","4607","4608","4609","4610","4611","4612","4613","4614","4615","4616","4617","4618","4619","4620","4621","4622","4623","4624","4625","4626","4627","4628","4629","4630"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/ordertraffic/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderdone }) => orderdone.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(200)\r\n    const [orderid, setOrderid] = useState(0)\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [trafficorder,settrafficorder]=useState(1000)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(0)\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [note, setNote] = useState(\"\")\r\n    const [link, setLink] = useState(\"\")\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:number[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.orderid===item.orderid)\r\n        if(myElem && item.checked){\r\n            arr.push(item.orderid)\r\n        }\r\n    })\r\n    console.log(arr)\r\n    const submit = () => {\r\n        const arr:number[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.orderid===item.orderid)\r\n            if(myElem && item.checked){\r\n                arr.push(item.orderid)\r\n            }\r\n        })\r\n        console.log(arr)\r\n        const videoid=arr.join('\\n')\r\n        if (view_need % 100 !== 0 || view_need ==0) {\r\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\r\n            return\r\n        }\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>10000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n        if(commentrate>100||commentrate<0){\r\n            alert(\"Tỉ lệ comment không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            orderid,\r\n            link,\r\n            note,\r\n            maxthreads,\r\n            user,\r\n            service,\r\n            trafficorder\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={trafficorder}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => settrafficorder(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\BhManualModal\\index.tsx",["4631","4632","4633","4634","4635","4636","4637","4638","4639","4640","4641","4642","4643","4644","4645","4646","4647","4648","4649","4650","4651","4652","4653","4654","4655","4656","4657","4658","4659","4660","4661","4662","4663","4664","4665","4666"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\components\\OrderItem\\index.tsx",["4667","4668","4669","4670","4671","4672","4673","4674","4675","4676","4677","4678","4679","4680","4681","4682","4683","4684","4685","4686","4687","4688"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.orderid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.orderid.toString(),1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                orderid:item.orderid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5,color:\"white\",}} href={item.link} className='badge badge-danger'>\r\n                    {item.orderid}\r\n                </a>\r\n            </td>\r\n            <td>\r\n\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.trafficorder}</span></span>\r\n                                <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(34,126,231,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>24h <span style={{color:\"#fdfdfd\"}}>{item.traffic24h==null?0:item.traffic24h}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.traffictotal==null?0:item.traffictotal}</span></span>\r\n                    {(item.maxthreads>0||item.traffictotal>0)&&<span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.traffictotal==null?0:item.traffictotal))/item.trafficorder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.traffictotal==null?0:item.traffictotal))/item.trafficorder*100))+'%'}</span></span>}\r\n                    {item.maxthreads<=0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        Pending</span>\r\n                    }\r\n                    <br/>\r\n                     <span style={{fontSize:10}}>\r\n                        🔗 {item.link}</span>\r\n                    <br/>\r\n                     <span style={{fontSize:10,color:\"#620909\",fontWeight:\"bold\"}}>\r\n                        Keywords: {item.keywords}</span>\r\n                </span>\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=0?\"#c0e1ce\":\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-dark'>{item.total}/{item.maxthreads}</span>\r\n                }\r\n            </td>}\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.package<=1?\"#03d96e\":item.package<=7?\"rgba(225,135,15,0.97)\":\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {item.package+\"D\"}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {((Date.now()-item.timestart)/1000/60/60)>=24?((((Date.now()-item.timestart)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timestart)/1000/60/60)>=1?((Date.now()-item.timestart)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timestart)/1000/60).toFixed(2)+'m'}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                 <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                     {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffic\\modals\\AddModal\\index.tsx",["4689","4690","4691","4692","4693","4694","4695","4696","4697","4698","4699","4700","4701","4702","4703","4704","4705","4706","4707","4708"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n  const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(50)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  const [service, setService] = useState(666)\r\n  const [note, setNote] = useState(\"\")\r\n  const [vieworder, setVieworder] = useState(1000)\r\n  const [countorder, setCountorder] = useState(8)\r\n  const [user,setUser]=useState(username)\r\n  const [showorder,setShowOrder]=useState(true)\r\n  const [orderdonenum,setOrderDoneNum]=useState(0)\r\n  const [list_order,setList_Todo]=useState([{\r\n    id:\"0000000000\",\r\n    videoid:\"\",\r\n    state:\"\",\r\n    time:0,\r\n    price:0\r\n\r\n  },])\r\n  const [list_service,setList_Service]=useState([{\r\n    id:\"000\",\r\n    user:\"All Service\"\r\n  },])\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'servive/getallservice?role='+role;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: arrlist[i].split('|')[0].trim(),\r\n        user: arrlist[i]\r\n      }\r\n      setList_Service([...list_service, orderitem])\r\n      list_service.push(orderitem)\r\n    }\r\n  }\r\n\r\n  async  function   getkey() {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    return key\r\n  }\r\n  let [sumprice,setSumPrice]=useState(0)\r\n  let [sumtime,setSumTime]=useState(0)\r\n  let [sumorder,setSumOrder]=useState(0)\r\n  const dismissModal = () => {\r\n    close()\r\n    setShowOrder(true)\r\n    setVideoid(\"\")\r\n\r\n    let or={\r\n      id:\"0000000000\",\r\n      videoid:\"\",\r\n      state:\"\",\r\n      time:0,\r\n      price:0\r\n    }\r\n    setList_Todo([or])\r\n    if(orderdonenum>0){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setOrderDoneNum(0)\r\n  }\r\n \r\n  const  submit = async () => {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    setSumOrder(0)\r\n    setSumTime(0)\r\n    setSumPrice(0)\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"VideoId không để trống!\")\r\n      return\r\n    }\r\n\r\n    if (vieworder < 100) {\r\n      alert(\"Số giờ phải lớn hơn 100!\")\r\n      return\r\n    }\r\n    setShowOrder(false)\r\n    const channelid = videoid.split('\\n')\r\n    console.log(channelid.length)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getcounttimeorder()\r\n    console.log(list_service)\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n            <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách UID':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách link kênh\r\n                </Label>\r\n                <Input style={{minHeight:250}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 UID một dòng...\"}\r\n                       value={videoid}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <div>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Số video Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={countorder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setCountorder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Views Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={vieworder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                    Dịch vụ\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         onChange={(e) => setService(parseInt(e.target.value))}\r\n                         className=\"form-control form-control-solid\"\r\n                         type=\"select\"\r\n                         value={service}\r\n                  >\r\n                    {\r\n                      list_service.map((item, index) => {\r\n                        if(item.id!='000')\r\n                          return(\r\n                              <option key={item.id} value={item.id}>\r\n                                {item.user}</option>)\r\n                      })\r\n                    }\r\n                  </Input>\r\n                </FormGroup>\r\n                {role != \"ROLE_USER\" &&<FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"max_thread\"\r\n                         name=\"max_thread\"\r\n                         value={maxthreads}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 1000\"\r\n                         onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>}\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" >\r\n                    Ghi chú\r\n                  </Label>\r\n                  <Input\r\n                      id=\"note\"\r\n                      name=\"note\"\r\n                      value={note}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"...\"\r\n                      onChange={(e) => setNote(e.target.value)}\r\n                      type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"card-body\" style={{width: \"100%\"}}>\r\n              {/* begin::Table container */}\r\n\r\n              {\r\n                list_order.map((item, index) => {\r\n                  if (item.videoid.length >0) return (\r\n                      <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                            <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                            <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                              {item.price.toPrecision()}$\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                  )\r\n                })\r\n              }\r\n              {/* end::Table container */}\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\OrdersPage.tsx",["4709","4710","4711","4712","4713","4714"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ ordertraffichistory }) => ordertraffichistory.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ ordertraffichistory }) => ordertraffichistory.currentOrder, shallowEqual) as OrderModel || undefined\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.orderid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\redux\\OrdersRedux.ts",["4715","4716","4717","4718","4719","4720","4721"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[OrdersTraffichistory] Filter',\r\n  RequestOrders: '[OrdersTraffichistory] Requested',\r\n  OrdersLoadedSuccess: '[OrdersTraffichistory] Loaded succcess',\r\n  OrdersLoadedFail: '[OrdersTraffichistory] load fail',\r\n  AddOrderRequest: '[OrdersTraffichistory] Add Order Request',\r\n  AddOrderManualRequest: '[OrdersTraffichistory] Add Order Manual Request',\r\n  AddOrderSuccess: '[OrdersTraffichistory] Add Order Success',\r\n  AddOrdersSuccess: '[OrdersTraffichistory] Add Orders Success',\r\n  AddOrderFail: '[OrdersTraffichistory] Add Order Fail',\r\n  ShowcurrentOrder: '[OrdersTraffichistory] Show Order',\r\n  RequestUpdate: '[OrdersTraffichistory] Requested Update',\r\n  UpdateMultiOrderRequest: '[OrdersTraffichistory] Update Multi Order Request',\r\n  UpdateSuccess: '[OrdersTraffichistory] Update Success',\r\n  UpdateMultiSuccess: '[OrdersTraffichistory] Update Multi Success',\r\n  UpdateFail: '[OrdersTraffichistory] Update Fail',\r\n  ClearSelected: '[OrdersTraffichistory] Clear selected account',\r\n  GroupLoadedRequest: '[OrdersTraffichistory] Group Loaded Request',\r\n  GroupLoadedSuccess: '[OrdersTraffichistory] Group Loaded Success',\r\n  GroupLoadedFail: '[OrdersTraffichistory] Group Loaded Fail',\r\n  GroupAddRequest: '[OrdersTraffichistory] GroupAddRequest',\r\n  GroupAddSuccess: '[OrdersTraffichistory] Group Add Success',\r\n  GroupAddFail: '[OrdersTraffichistory] Group Add Fail',\r\n  GroupDeleteRequest: '[OrdersTraffichistory] Group Delete Request',\r\n  GroupDeleteSuccess: '[OrdersTraffichistory] Group Delete Success',\r\n  SelectGroup: '[OrdersTraffichistory] Select Group',\r\n  DeleteOrderRequest: '[OrdersTraffichistory] Delete Order Request',\r\n  DeleteOrderSuccess: '[OrdersTraffichistory] Delete Order Success',\r\n  CheckedChange: '[OrdersTraffichistory] Checked Change',\r\n  CheckedAllChange: '[OrdersTraffichistory] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (item.videoid === action.payload?.videoid) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.videoid === action.payload?.webtraffic?.videoid) {\r\n            return action.payload?.webtraffic\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.webtraffic.find((_item:OrderModel)=>{\r\n            if(_item.videoid===item.videoid){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.videoid===action.payload?.data?.videoid){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (webtraffic: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { webtraffic } }),\r\n  updateSuccess: (webtraffic: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { webtraffic } }),\r\n  updateMultiSuccess: (webtraffic: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { webtraffic } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\r\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.webtraffic))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.webtraffic))\r\n  })\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.webtraffic)\r\n    if (result && result.webtraffic) {\r\n      yield put(actions.updateMultiSuccess(result.webtraffic))\r\n    } else {\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.webtraffic)) {\r\n            yield put(actions.addOrderSuccess(result.webtraffic))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.webtraffic) {\r\n          yield put(actions.updateMultiSuccess(result.webtraffic))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.groupName\r\n      const { data: result } = yield addGroup(payload)\r\n      if (result && result.group) {\r\n        yield put(actions.addGroupSuccess(result.group))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.videoid\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.webtraffic!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\redux\\OrdersCRUD.ts",["4722"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"webtraffic/getorderviewhhistory?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function findorder( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\n\r\n\r\nexport async function addGroup(groupName:string) {\r\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\r\n    name: groupName\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function deleteGroup(id:number) {\r\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(videoid:string) {\r\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\OrderList.tsx",["4723","4724","4725","4726","4727","4728","4729","4730","4731","4732","4733","4734","4735","4736","4737","4738","4739","4740","4741","4742","4743","4744","4745","4746","4747","4748","4749","4750","4751","4752","4753","4754","4755","4756","4757","4758","4759","4760","4761","4762","4763","4764","4765","4766","4767","4768","4769","4770","4771","4772","4773","4774","4775","4776","4777","4778","4779","4780","4781","4782","4783","4784","4785","4786","4787","4788","4789","4790","4791","4792","4793","4794","4795","4796","4797","4798","4799","4800","4801","4802"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\n\r\n\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id:0,\r\n    orderid:0,\r\n    link: \"\",\r\n    keywords:\"\",\r\n    trafficorder:0,\r\n    traffictotal:0,\r\n    insertdate: \"\",\r\n    enddate: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtimedone=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n\r\n  orders.forEach(item=>{\r\n    sumtimedone=sumtimedone+Math.round(Number(item.traffictotal==null?0:item.traffictotal))\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n    }\r\n  })\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n      console.log(list_user)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-5 col-sm-12 c-order__header\">\r\n                <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Đã xong {totaldordershow}</span> </span>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng chạy {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>Tổng tiền {useEff<=1?summoney.toFixed(3):totalmoneyshow.toFixed(3)}$ </span> </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <div style={{float:\"right\",fontWeight:\"bold\"}}>\r\n                  <DatePicker\r\n\r\n                      value={startDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\r\n                      }\r\n                      }\r\n\r\n                  />\r\n                  <DatePicker\r\n                      value={endDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{\r\n                        setEndDate(date)\r\n                      }\r\n                      }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)}\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {setKeyTrue(1)\r\n                          }}\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div style={{width:\"40%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Export\r\n                </button>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n\r\n                </Input>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-google'\r\n                >\r\n                  Đối soát\r\n                </button>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {\r\n                          setShowAddManual(true)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Tra cứu nhanh\r\n                </button>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Check</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keytrue==0&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)&&keytrue==0&&keyusertrue==0&&keydate==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.videoid)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))\r\n\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.traffictotal==null?0:order.traffictotal))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        link: order.link,\r\n                        keywords:order.keywords,\r\n                        trafficorder:order.trafficorder,\r\n                        traffictotal:order.traffictotal,\r\n                        insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\r\n                        enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.videoid+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n              {/* end::Table body */}\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\EditModal\\index.tsx",["4803","4804","4805","4806","4807","4808","4809","4810","4811","4812","4813","4814","4815","4816","4817","4818","4819"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/ordertraffichistory/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { Group } from '../../models/Order'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\r\n    //const [videoid, setVideoid] = useState(\"\")\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [view_need, setView_need] = useState(1000)\r\n    const [premium_rate,setPremium_rate]=useState(5)\r\n    const [view_percent,setView_percent]=useState(4000)\r\n    //\r\n    const [homerate,setHome_rate]=useState(item.homerate)\r\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\r\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\r\n    const [directrate,setDirect_rate]=useState(item.directrate)\r\n    //\r\n    const [likerate,setLike_rate]=useState(item.likerate)\r\n    const [commentrate,setComment_rate]=useState(item.commentrate)\r\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\r\n    const [user,setUser]=useState(username)\r\n    const [note, setNote] = useState(item.note)\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(item.timebuff)\r\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\r\n    const [enabled,setEnabled]=useState(item.enabled)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n\r\n    const submit = () => {\r\n\r\n        if(homerate+searchrate+suggestrate+directrate !=100){\r\n            alert(\"Tổng nguồn view không đúng\")\r\n            return\r\n        }\r\n        if(likerate>100||likerate<0){\r\n            alert(\"Tỉ lệ like không đúng\")\r\n            return\r\n        }\r\n        if(view_percent>1000000||view_percent<0){\r\n            alert(\"phần trăm xem video không đúng\")\r\n            return\r\n        }\r\n\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            homerate,\r\n            note,\r\n            directrate,\r\n            commentrate,\r\n            mobilerate,\r\n            searchrate,\r\n            enabled,\r\n            maxthreads,\r\n            viewstart,\r\n            likerate,\r\n            suggestrate,\r\n            timebuff,\r\n            optionbuff,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.videoid}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p>Cài đặt danh sách đơn</p>\r\n                    <Form>\r\n                        <p>Nguồn view tổng = 100%</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Home \r\n                                </Label>\r\n                                <Input\r\n                                    id=\"home_rate\"\r\n                                    name=\"home_rate\"\r\n                                    value={homerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Search\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"search_rate\"\r\n                                    name=\"search_rate\"\r\n                                    value={searchrate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Suggest\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"suggest_rate\"\r\n                                    name=\"suggest_rate\"\r\n                                    value={suggestrate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Direct\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"direct_rate\"\r\n                                    name=\"direct_rate\"\r\n                                    value={directrate}\r\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <p>Cài đặt tương tác</p>\r\n                        <div className='flex flex-row justify-between space-x-3'>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Like\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"like_rate\"\r\n                                    name=\"like_rate\"\r\n                                    value={likerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Comment\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"comment_rate\"\r\n                                    name=\"comment_rate\"\r\n                                    value={commentrate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    % Mobile\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobilerate\"\r\n                                    name=\"mobilerate\"\r\n                                    value={mobilerate}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={maxthreads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                   Time(h)\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={timebuff}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Chế độ buff\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={optionbuff}\r\n                            >\r\n                                <option key={10} value={10}>\r\n                                    {\"10 phút\"}\r\n                                </option>\r\n                                <option key={30} value={30}>\r\n                                    {\"30 phút\"}\r\n                                </option>\r\n                                <option key={60} value={60}>\r\n                                    {\"60 phút\"}\r\n                                </option>\r\n                                <option key={120} value={120}>\r\n                                    {\"120 phút\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Auto\"}\r\n                                </option>\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Trạng thái\r\n                            </Label>\r\n                            <Input\r\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\r\n                                className=\"form-control form-control-solid\"\r\n                                type=\"select\"\r\n                                value={enabled}\r\n                            >\r\n                                <option key={1} value={1}>\r\n                                    {\"Chạy\"}\r\n                                </option>\r\n                                <option key={2} value={2}>\r\n                                    {\"Test1\"}\r\n                                </option>\r\n                                <option key={3} value={3}>\r\n                                    {\"Test2\"}\r\n                                </option>\r\n                                <option key={0} value={0}>\r\n                                    {\"Ngừng\"}\r\n                                </option>\r\n                            </Input>\r\n\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\AddManualModal\\index.tsx",["4820","4821","4822","4823","4824","4825","4826","4827","4828","4829","4830","4831","4832","4833","4834"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\AddModal\\index.tsx",["4835","4836","4837","4838","4839","4840","4841","4842","4843","4844","4845","4846","4847","4848","4849","4850","4851"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\modals\\EditMulti\\index.tsx",["4852","4853","4854","4855","4856","4857","4858","4859","4860","4861","4862","4863","4864","4865","4866","4867","4868","4869","4870"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\ordertraffichistory\\components\\OrderItem\\index.tsx",["4871","4872","4873","4874","4875","4876","4877","4878","4879","4880","4881","4882","4883","4884","4885","4886","4887","4888","4889","4890"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.videoid))\r\n        }\r\n    }\r\n\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100}}>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={item.link} className='badge badge-danger'>\r\n                    Link\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#ffffff\"}}>{item.trafficorder}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#000000\"}}>{item.traffictotal==null?0:item.traffictotal}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.traffictotal==null?0:item.traffictotal))/item.trafficorder*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.traffictotal==null?0:item.traffictotal))/item.trafficorder*100))+'%'}</span></span>\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.timestart!=0?\"#03d96e\":\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        {item.timestart!=0?(((item.enddate-item.timestart)/1000/60/60)>=24?((((item.enddate-item.timestart)/1000/60/60/24)).toFixed(2)+'D'):((item.enddate-item.timestart)/1000/60/60)>=1?((item.enddate-item.timestart)/1000/60/60).toFixed(2)+'H':((item.enddate-item.timestart)/1000/60).toFixed(0)+'m'):'C'}</span>\r\n                     <br/>\r\n                     <span style={{fontSize:10}}>\r\n                        🔗 {item.link}</span>\r\n                    <br/>\r\n                     <span style={{fontSize:10,color:\"#620909\",fontWeight:\"bold\"}}>\r\n                        Keywords: {item.keywords}</span>\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //   <img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.insertdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n            </td>\r\n            <td >\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.timestart!=0?(new Date(item.timestart).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timestart).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.package<=1?\"#03d96e\":item.package<=7?\"rgba(225,135,15,0.97)\":\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {item.package+\"D\"}</span>\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.enddate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.enddate).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td >\r\n                {(item.viewend>-1&&item.viewend!=null)&&<span  style={{color:'white',fontSize:11,backgroundColor:item.viewend>=(item.vieworder)?\"rgba(16,128,201,0.66)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.viewend}</span>}\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.timecheckbh>0?(new Date(item.timecheckbh).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timecheckbh).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\SockList.tsx",["4891","4892","4893","4894","4895","4896","4897","4898","4899","4900","4901"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport {SockModel} from './models/Account'\r\nimport SockItem from './components/SockItem'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { actions } from './redux/AccountRedux'\r\nimport { RootState } from '../../../setup'\r\nimport {Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\ntype Props = {\r\n  className: string,\r\n}\r\n\r\nconst SockList: React.FC<Props> = ({ className }) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [ipv4, setipv4] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [addtrue, setAddTrue] = useState(0)\r\n  const [status, setStatus] = useState(true)\r\n  const authens:SockModel[] = useSelector<RootState>(({ histories }) => histories.socks, shallowEqual) as SockModel[] || []\r\n  let sum_total=0;\r\n  let sum_die=0;\r\n  useEffect(() => {\r\n    if(status===true){\r\n      dispatch(actions.requestSocks())\r\n      setipv4('')\r\n      setKeyTrue(0)\r\n    }\r\n    setStatus(false)\r\n  }, [status])\r\n  async function delipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/delauthen?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/addauthen?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" IP!\") == true) {\r\n      for(var i=0;i<arr.length;i++){\r\n        delipv4(arr[i])\r\n      }\r\n      setStatus(true)\r\n    }\r\n  }\r\n  const clickAddHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    for(var i=0;i<arr.length;i++){\r\n      addipv4(arr[i])\r\n    }\r\n    setStatus(true)\r\n  }\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>IP SOCK</span>\r\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {authens.length})</span>\r\n            </div>\r\n            {keytrue==1&&<div className=\"col-lg-6 col-sm-12 text-right\">\r\n              <button\r\n                  onClick={() => {\r\n                    setKeyTrue(1)\r\n                    setAddTrue(1)\r\n                  }}\r\n                  className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>\r\n                <button style={{margin:5}}\r\n                    onClick={() => {\r\n                      setKeyTrue(1)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>\r\n            </div>}\r\n\r\n          </div>\r\n        </div>\r\n        {keytrue==1&&<div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\r\n            <div >\r\n                <Input style={{height:500,width:'100%',float:\"left\"}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 ipv4 một dòng!\"}\r\n                       value={ipv4}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setipv4(e.target.value)}\r\n                />\r\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                        onClick={() => {\r\n                          clickDeleteHandler()\r\n                        }}\r\n                    /*\r\n                    if(key.trim().length==0){\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.requestOrders(''))\r\n                      }else{\r\n                        dispatch(actions.requestOrders(user))\r\n                      }\r\n                    }else{\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.showordersfilter(key,''))\r\n                      }else{\r\n                        dispatch(actions.showordersfilter(key,user))\r\n                      }\r\n                    }\r\n                    //setKey(\"\")\r\n                  }}\r\n\r\n                     */\r\n                        className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>}\r\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                                   onClick={() => {\r\n                                     clickAddHandler()\r\n                                   }}\r\n                  /*\r\n                  if(key.trim().length==0){\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.requestOrders(''))\r\n                    }else{\r\n                      dispatch(actions.requestOrders(user))\r\n                    }\r\n                  }else{\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.showordersfilter(key,''))\r\n                    }else{\r\n                      dispatch(actions.showordersfilter(key,user))\r\n                    }\r\n                  }\r\n                  //setKey(\"\")\r\n                }}\r\n\r\n                   */\r\n                                   className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>}\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      {keytrue==0&&<div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Host</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Auth_Ips</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>TimeUpdate</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {\r\n                authens&&authens?.map((item: SockModel,index:number) => {\r\n                  return <SockItem key={\"ipv4-\"+index} item={item} index={index}/>\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {/* end::Table */}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>}\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SockList\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\AuthenList.tsx",["4902","4903","4904","4905","4906","4907","4908","4909","4910","4911","4912"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React, {useEffect, useState} from 'react'\r\nimport {AuthenModel} from 'app/modules/history/models/Account'\r\nimport AuthenItem from './components/AuthenItem'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { actions } from './redux/AccountRedux'\r\nimport { RootState } from 'setup'\r\nimport {Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\ntype Props = {\r\n  className: string,\r\n}\r\n\r\nconst AuthenList: React.FC<Props> = ({ className }) => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [ipv4, setipv4] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [addtrue, setAddTrue] = useState(0)\r\n  const [status, setStatus] = useState(true)\r\n  const authens:AuthenModel[] = useSelector<RootState>(({ histories }) => histories.authens, shallowEqual) as AuthenModel[] || []\r\n  let sum_total=0;\r\n  let sum_die=0;\r\n  useEffect(() => {\r\n    if(status===true){\r\n      dispatch(actions.requestAuthens())\r\n      setipv4('')\r\n      setKeyTrue(0)\r\n    }\r\n    setStatus(false)\r\n  }, [status])\r\n  async function delipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/delauthen?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  async function addipv4(ipv4:string) {\r\n    let  requestUrl = API_URL+'proxy/addauthen?ipv4='+ipv4;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {status} = responseJson;\r\n    return status\r\n  }\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" IP!\") == true) {\r\n      for(var i=0;i<arr.length;i++){\r\n        delipv4(arr[i])\r\n      }\r\n      setStatus(true)\r\n    }\r\n  }\r\n  const clickAddHandler = () => {\r\n    const arr:string[]=ipv4.split('\\n');\r\n    for(var i=0;i<arr.length;i++){\r\n      addipv4(arr[i])\r\n    }\r\n    setStatus(true)\r\n  }\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>IP Authen</span>\r\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {authens.length})</span>\r\n            </div>\r\n            {keytrue==0&&<div className=\"col-lg-6 col-sm-12 text-right\">\r\n              <button\r\n                  onClick={() => {\r\n                    setKeyTrue(1)\r\n                    setAddTrue(1)\r\n                  }}\r\n                  className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>\r\n                <button style={{margin:5}}\r\n                    onClick={() => {\r\n                      setKeyTrue(1)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>\r\n            </div>}\r\n\r\n          </div>\r\n        </div>\r\n        {keytrue==1&&<div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\r\n            <div >\r\n                <Input style={{height:500,width:'100%',float:\"left\"}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 ipv4 một dòng!\"}\r\n                       value={ipv4}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setipv4(e.target.value)}\r\n                />\r\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                        onClick={() => {\r\n                          clickDeleteHandler()\r\n                        }}\r\n                    /*\r\n                    if(key.trim().length==0){\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.requestOrders(''))\r\n                      }else{\r\n                        dispatch(actions.requestOrders(user))\r\n                      }\r\n                    }else{\r\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                        dispatch(actions.showordersfilter(key,''))\r\n                      }else{\r\n                        dispatch(actions.showordersfilter(key,user))\r\n                      }\r\n                    }\r\n                    //setKey(\"\")\r\n                  }}\r\n\r\n                     */\r\n                        className='btn btn-success'\r\n                >\r\n                  Xóa\r\n                </button>}\r\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\r\n                                   onClick={() => {\r\n                                     clickAddHandler()\r\n                                   }}\r\n                  /*\r\n                  if(key.trim().length==0){\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.requestOrders(''))\r\n                    }else{\r\n                      dispatch(actions.requestOrders(user))\r\n                    }\r\n                  }else{\r\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                      dispatch(actions.showordersfilter(key,''))\r\n                    }else{\r\n                      dispatch(actions.showordersfilter(key,user))\r\n                    }\r\n                  }\r\n                  //setKey(\"\")\r\n                }}\r\n\r\n                   */\r\n                                   className='btn btn-success'\r\n              >\r\n                Thêm\r\n              </button>}\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>}\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      {keytrue==0&&<div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Ipv4</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-50px'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Lock</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {\r\n                authens&&authens?.map((item: AuthenModel,index:number) => {\r\n                  return <AuthenItem key={\"ipv4-\"+index} item={item} index={index}/>\r\n                })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {/* end::Table */}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>}\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthenList\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\SockItem\\index.tsx",["4913","4914","4915","4916"],"import React from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport {SockModel} from 'app/modules/history/models/Account'\r\nimport moment from 'moment'\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: SockModel,\r\n    index: number\r\n}\r\n\r\nconst SockItem: React.FC<Props> = ({ item, index }) => {\r\n\r\n\r\n    return (\r\n        <tr style={{margin:100}}>\r\n            <td>\r\n                <div className='d-flex flex-stack mb-2'>\r\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:\"rgba(20,122,178,0.66)\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.ip}\r\n                </span>\r\n            </td>\r\n            <td>\r\n                 <span style={{fontSize:11,marginLeft:5,backgroundColor:\"rgba(218,30,30,0.97)\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.auth.split(\",\").length}\r\n                </span>\r\n            </td>\r\n            <td>\r\n                <span style={{color:'black',fontWeight:\"bold\",fontSize:11}}>\r\n                    {new Date(item.timeupdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timeupdate).toLocaleTimeString('vn-VN')}\r\n                    <span style={{fontSize:11,marginLeft:5,backgroundColor:\"rgba(20,122,178,0.66)\",color:\"white\",}} className='badge badge-danger'>\r\n                    {((Date.now()-item.timeupdate)/1000/60/60)>=24?((((Date.now()-item.timeupdate)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timeupdate)/1000/60/60)>=1?((Date.now()-item.timeupdate)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timeupdate)/1000/60).toFixed(0)+'m'}</span>\r\n                </span>\r\n            </td>\r\n\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default SockItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\ProxySettingList.tsx",["4917","4918","4919","4920","4921","4922","4923","4924","4925","4926","4927","4928","4929","4930","4931","4932","4933","4934","4935","4936","4937","4938","4939","4940","4941","4942","4943","4944","4945","4946","4947","4948","4949","4950"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel ,AccountLimitModel,ProxySettingModel} from 'app/modules/setting/models/Account'\r\n\r\nimport ProxySettingItem from './components/ProxySettingItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: ProxySettingModel[]\r\n}\r\n\r\nconst ProxySettingList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const isShowFixMulti = accounts.find((item) => {\r\n    if (item.checked) {\r\n\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  useEffect(() => {\r\n  },[]);\r\n\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>Cài đặt Proxy</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-100px'>Option</th>\r\n                <th className='min-w-100px'>Username</th>\r\n                <th className='min-w-100px'>Password</th>\r\n                <th className='min-w-100px'>Crontab</th>\r\n                <th className='min-w-100px'>Total_Hv6</th>\r\n                <th className='min-w-100px'>Total_Sv6</th>\r\n                <th className='min-w-100px'>TimeUpdate</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: ProxySettingModel,index:number) => {\r\n                      return <ProxySettingItem key={item.id+index} item={item} index={index} />\r\n                    })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n    </div>\r\n  )\r\n}\r\nexport  { ProxySettingList}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\modals\\EditProxyModal\\index.tsx",["4951","4952","4953","4954","4955","4956","4957","4958","4959","4960"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { ProxySettingModel } from 'app/modules/setting/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\n\r\ntype Props = {\r\n    item: ProxySettingModel\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst EditProxyModal: React.FC<Props> = ({ item }) => {\r\n    console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [total_port, settotal_port] = useState(item.total_port)\r\n    const [total_sock_port, settotal_sock_port] = useState(item.total_sock_port)\r\n    const [username, setusername] = useState(item.username)\r\n    const [password, setpassword] = useState(item.password)\r\n    const [cron, setcron] = useState(item.cron)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentProxySetting())\r\n    }\r\n    const updateUser = () => {\r\n\r\n        dispatch(actions.requestUpdateProxySetting({\r\n            ...item,\r\n            total_port,\r\n            total_sock_port,\r\n            username,\r\n            password,\r\n            cron\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update Proxy Option {item.option_proxy}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Username</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={username} type=\"text\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setusername(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Password</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={password} type=\"text\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setpassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Crontab</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={cron} type=\"text\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => setcron(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Tổng Port HTTP V6</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={total_port} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => settotal_port(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">port</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Tổng Port SOCKS5 V6</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={total_sock_port} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                               onChange={(e) => settotal_sock_port(parseInt(e.target.value))}\r\n                        />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">port</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditProxyModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\history\\components\\AuthenItem\\index.tsx",["4961","4962","4963","4964","4965","4966"],"import React from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport {AuthenModel} from 'app/modules/history/models/Account'\r\nimport moment from 'moment'\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AuthenModel,\r\n    index: number\r\n}\r\n\r\nconst AuthenItem: React.FC<Props> = ({ item, index }) => {\r\n\r\n\r\n    return (\r\n        <tr style={{margin:100}}>\r\n            <td>\r\n                <div className='d-flex flex-stack mb-2'>\r\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:item.lockmode==1?\"#03d96e\":\"rgba(20,122,178,0.66)\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.ipv4}\r\n                </span>\r\n                {item.host.length>0&&<span style={{fontSize:11,marginLeft:5,backgroundColor:\"rgba(183,42,42,0.97)\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.host}\r\n                </span>}\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\",}} className='badge badge-danger'>\r\n                    {((Date.now()-item.timecheck)/1000/60/60)>=24?((((Date.now()-item.timecheck)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timecheck)/1000/60/60)>=1?((Date.now()-item.timecheck)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timecheck)/1000/60).toFixed(0)+'m'}\r\n            </span>\r\n            </td>\r\n            <td>\r\n                <span style={{fontSize:11,backgroundColor:item.lockmode==0?\"#6d7773\":\"rgba(20,122,178,0.66)\",color:\"white\",}} className='badge badge-danger'>\r\n                    {item.lockmode}\r\n                </span>\r\n            </td>\r\n\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default AuthenItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\setting\\components\\ProxySettingItem\\index.tsx",["4967","4968","4969","4970","4971","4972","4973","4974"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { ProxySettingModel } from 'app/modules/setting/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: ProxySettingModel,\r\n    index:number\r\n}\r\nfunction format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n}\r\nconst ProxySettingItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n       dispatch(actions.showCurrentProxySetting(item))\r\n    }\r\n    return (\r\n\r\n        <tr>\r\n            <td>\r\n                <span>\r\n                    <text style={{fontSize:12,fontWeight:\"bold\"}} >\r\n                    {item.option_proxy}\r\n                    </text>\r\n                </span>\r\n\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.username}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.password}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.cron}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.total_port}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{fontSize:11}} >\r\n                                <text style={{fontWeight:\"bold\"}} >\r\n                                        {item.total_sock_port}\r\n                                </text>\r\n                    </span>\r\n            </td>\r\n            <td >\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11}}>\r\n                        {new Date(item.timeupdate).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.timeupdate).toLocaleTimeString('vn-VN')}\r\n                    </span>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ProxySettingItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\AccountPage.tsx",["4975","4976","4977","4978","4979","4980","4981"],"import React,{useEffect,useState} from 'react'\r\nimport {UserList} from './UserList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from './redux/AccountRedux'\r\nimport {AccountModel} from 'app/modules/vpssub/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from './modals/EditModal'\r\nimport {Input} from \"reactstrap\";\r\nconst AccountPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [vpstype, setvpstype] = useState('')\r\n  const accounts: AccountModel[] = useSelector<RootState>(({vpsdub}) => vpsdub.accounts, shallowEqual) as AccountModel[] || []\r\n  const currentAccount: AccountModel = useSelector<RootState>(({vpsdub}) => vpsdub.currentAccount, shallowEqual) as AccountModel || undefined\r\n    const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n      if(refresh===true){\r\n          dispatch(actions.requestAccounts())\r\n      }\r\n    setRefresh(false)\r\n  },[refresh]);\r\n\r\n\r\n  return (\r\n      <>\r\n        <div className='row gy-5 gx-xl-12'>\r\n            <div className='col-xl-12' style={{margin:0}}>\r\n                <a style={{float:\"right\"}} href='#' onClick={() => {\r\n                    setRefresh(true)\r\n                }} >\r\n                    <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n                </a>\r\n            </div>\r\n          <div className='col-xl-12' style={{margin:0}}>\r\n            <UserList accounts={vpstype.length==0?accounts:(accounts.filter(vps=>vps.vps.search(vpstype)!=-1))} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n          </div>\r\n          {\r\n              currentAccount&&<EditModal key={currentAccount?.vps} item={currentAccount} />\r\n          }\r\n        </div>\r\n      </>\r\n  )\r\n}\r\nexport default AccountPage","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\redux\\AccountRedux.ts",["4982","4983","4984","4985"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { AccountModel,AccountForm } from '../models/Account'\r\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\r\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\r\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestAccounts: '[VpsSub] Requested',\r\n  AccountsLoadedSuccess: '[VpsSub] Loaded succcess',\r\n  AccountsLoadedFail: '[VpsSub] load fail',\r\n  ShowCurrentAccount: '[VpsSub] Show Account',\r\n  RequestUpdate: '[VpsSub] Requested Update',\r\n  UpdateSuccess: '[VpsSub] Update Success',\r\n  UpdateFail: '[VpsSub] Update Fail',\r\n  ClearSelected:'[VpsSub] Clear selected account',\r\n  DeleteVpsRequest: '[VpsSub] Delete Account Request',\r\n  DeleteVpsSuccess: '[VpsSub] Delete Account Success',\r\n  DeleteMultiVpsRequest: '[VpsSub] Delete Account Request',\r\n  DeleteMultiVpsSuccess: '[VpsSub] Delete Account Success',\r\n  CheckedChange: '[VpsSub] Checked Change',\r\n  CheckedAllChange: '[VpsSub] Checked All Change',\r\n  UpdateMultiOrderRequest: '[VpsSub] Update Multi Account Request',\r\n  UpdateRestartMultiOrderRequest: '[VpsSub] Update Restart Multi Account Request',\r\n  UpdateMultiSuccess: '[VpsSub] Update Multi Success',\r\n}\r\n\r\nconst initialAccountState: IAccountState = {\r\n  accounts: [],\r\n  loading: false,\r\n  adding:false,\r\n  currentAccount:undefined\r\n}\r\n\r\nexport interface IAccountState {\r\n  accounts: AccountModel[]\r\n  loading: boolean\r\n  adding:boolean\r\n  currentAccount?:AccountModel\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-accounts', whitelist: [] },\r\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestAccounts: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: action.payload?.accounts || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n\r\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\r\n          if(item.vps===action.payload?.account?.vps){\r\n            return action.payload?.account\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remapAccounts,\r\n          loading: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      case actionTypes.DeleteVpsSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: state.accounts.filter((item: AccountModel) => {\r\n            if (action.payload?.vps.indexOf(item.vps)>=0)  {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccount: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            if(item.vps===action.payload?.data?.vps){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateRestartMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.accounts.map((item: AccountForm) => {\r\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\r\n            if(_item.vps===item.vps){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\r\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\r\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\r\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\r\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\r\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\r\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\r\n  checkedChange: (data:{vps:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\r\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\r\n    const {data: accounts} = yield getListAccount()\r\n    yield put(actions.fulfillAccounts(accounts.accounts))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: account} = yield updateAccount(param.payload.account)\r\n    console.log(\"------update account res-----\",account.account)\r\n    yield put(actions.updateSuccess(account.account))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.vps\r\n      const { data: result } = yield deleteVps(payload)\r\n      if (result&&result.vps!==null) {\r\n        yield put(actions.deleteVpsSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateAccount(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateResetVPS(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\UserList.tsx",["4986","4987","4988","4989","4990","4991","4992","4993","4994","4995","4996","4997","4998","4999","5000","5001","5002","5003","5004","5005","5006","5007","5008","5009","5010"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/vpssub/models/Account'\r\n\r\nimport UserItem from './components/UserItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport EditMulti from \"./modals/EditMulti\";\r\nimport RestartMulti from \"./modals/RestartMulti\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport {randomInt} from \"crypto\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountModel[]\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const [statusVNTrue, setstatusVNTrue] = useState(0)\r\n  const [Checked, setChecked] = useState(false)\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const [list_vps,setList_VPS]=useState([{\r\n    id:0,\r\n    vps:\"\",\r\n  },])\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n\r\n  var icount=0;\r\n  const isShowFixMulti = accounts.find((item) => {\r\n\r\n    if (item.checked) {\r\n      icount=icount+1\r\n    }\r\n    if(icount>=2){\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  let total_waring=0;\r\n  let total_thread=0;\r\n  let total_view24h=0;\r\n  let total_thread_set=0;\r\n  let total_tool_warning=0;\r\n  let [totalvps, setTotalVps] = useState(0)\r\n  let [totaldvpsshow, setTotalVpsShow] = useState(0)\r\n  for(let i=0;i<accounts.length;i++){\r\n    if(parseInt(accounts[i].timegettask)>30){\r\n      total_tool_warning=total_tool_warning+1;\r\n    }\r\n    if((Date.now()-accounts[i].timecheck)/1000/60>6){\r\n      total_waring=total_waring+1;\r\n    }else{\r\n      total_thread_set=total_thread_set+(accounts[i].threads);\r\n      total_thread=total_thread+accounts[i].total;\r\n    }\r\n    total_view24h=total_view24h+accounts[i].view24h;\r\n  }\r\n  async function getcounts(){\r\n    const requestUrl = API_URL+'sub/countgmailslive';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {counts}=responseJson;\r\n    console.log(counts);\r\n    settotal_user(counts);\r\n  }\r\n  async function getcountsbyendtrial(){\r\n    const requestUrl = API_URL+'sub/sumgmails';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {counts}=responseJson;\r\n    console.log(counts);\r\n    settotal_user_endtrial(counts);\r\n  }\r\n  async function changer_vn(){\r\n    const requestUrl = API_URL+'vps/changer_vn';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {status}=responseJson;\r\n    if(parseInt(status)>0){\r\n      alert('Thay thành công '+status+' tài khoản mới!')\r\n    }else{\r\n      alert('Thay tài khoản thất bại!')\r\n    }\r\n  }\r\n  async function changer_us(){\r\n    const requestUrl = API_URL+'vps/changer_us';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {status}=responseJson;\r\n    if(parseInt(status)>0){\r\n      alert('Thay thành công '+status+' tài khoản mới!')\r\n    }else{\r\n      alert('Thay tài khoản thất bại!')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(accounts.length!=0){\r\n      setLoading(false)\r\n    }\r\n    setList_VPS([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldvpsshow=totalvps\r\n    setTotalVpsShow(totaldvpsshow)\r\n    setTotalVps(0)\r\n    if(useEff<=1){\r\n      getcountsbyendtrial();\r\n      getcounts();\r\n    }\r\n\r\n  },[keytrue,key,keystatus,vpstpye,accounts.length,,]);\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    accounts.forEach(item=>{\r\n      const myElem = list_vps.find(value => value.vps===item.vps)\r\n      if(myElem && item.checked){\r\n        arr.push(item.vps)\r\n      }\r\n    })\r\n    const vps=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" VPS!\") == true) {\r\n      dispatch(actions.deleteVpsRequest(vps))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-8 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>{totaldvpsshow} vps </span>\r\n              <span className='badge badge-warning' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_waring} vps warning</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_tool_warning} tool warning</span>\r\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_thread} thread</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_thread_set} thread set</span>\r\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_user_endtrial} sum user</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_user} user</span>\r\n              <span className='badge badge-danger' style={{ color:'white',margin:4,backgroundColor:\"#e57624\"}}>{total_user_endtrial-total_user} user die</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              {isShowFixMulti && (\r\n                  <div>\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowEditMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Chỉnh sửa\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowRestartMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Restart\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={()=>clickDeleteHandler()}\r\n                            className='btn btn-light'>\r\n                      Xóa VPS\r\n                    </button>\r\n                  </div>\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setKeyStatus(e.target.value)\r\n                                             setKeyStatusTrue(1)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={keystatus}\r\n              >\r\n                <option key={'all'} value={'all'}>All</option>\r\n                <option key={'die'} value={'die'}>Die</option>\r\n                <option key={'live'} value={'live'}>Live</option>\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='w-5px'>STT</th>\r\n                <th className='min-w-100px '>VPS</th>\r\n                <th className='min-w-100px'>VPS Option</th>\r\n                <th className='min-w-100px'>Trạng thái</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\r\n                    if (keystatustrue==0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <UserItem key={item.id} item={item} index={index} />\r\n                    }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatustrue==0&&keytrue==1){\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <UserItem key={item.id} item={item} index={index} />\r\n                    }else if(keystatustrue==1&&keytrue==0){\r\n                        if(keystatus.indexOf(\"all\")>=0){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }\r\n                    }else if(keystatustrue==1&&keytrue==1){\r\n                      if(keystatus.indexOf(\"all\")>=0&&(item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }\r\n                    }\r\n                  })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      <EditMulti\r\n          list_vps={list_vps}\r\n          show={showEditMulti}\r\n          close={() => {\r\n            setShowEditMulti(false)\r\n          }}\r\n      />\r\n      <RestartMulti\r\n          list_vps={list_vps}\r\n          show={showRestartMulti}\r\n          close={() => {\r\n            setShowRestartMulti(false)\r\n          }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport  { UserList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\redux\\AccountCRUD.ts",["5011"],"import axios from 'axios'\r\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\r\nimport { AccountModel } from '../models/Account'\r\n\r\n\r\n\r\nexport async function getListAccount() {\r\n  const res:any = await getFunciton(\"vpssub/list\")\r\n  return res\r\n}\r\n\r\n\r\nexport async function updateAccount(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"vpssub/update\",account)\r\n  return res\r\n}\r\n\r\nexport async function updateResetVPS(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"vpssub/updaterestart\",account)\r\n  return res\r\n}\r\n\r\nexport async function deleteVps(vps:string) {\r\n  const res:any = await deleteFunciton(\"/vpssub/delete?vps=\"+vps)\r\n  return res\r\n}\r\n\r\nexport async function allAccount() {\r\n  const res:any = await getFunciton(\"/gmails/countgmails\")\r\n  return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\modals\\EditModal\\index.tsx",["5012","5013","5014","5015","5016","5017","5018","5019","5020","5021","5022","5023","5024","5025","5026","5027","5028","5029"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/vpssub/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\n\r\ntype Props = {\r\n    item: AccountModel\r\n}\r\nconst EditModal: React.FC<Props> = ({ item }) => {\r\n    console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [vpsoption, setvpsoption] = useState(item.vpsoption)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(item.get_account)\r\n    const [threads, setthreads] = useState(item.threads)\r\n    const [state, setstate] = useState(item.state)\r\n    const [ext, setext] = useState(item.ext)\r\n    const [cmt, setcmt] = useState(item.cmt)\r\n    const [running, setrunning] = useState(item.running)\r\n    const [live, setlive] = useState(item.live)\r\n    const [proxy, setproxy] = useState(item.proxy)\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'vpssub/resetrunningaccbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'vpssub/resetrunningacccmtbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const updateUser = () => {\r\n        if(vpsreset==2){\r\n            resetrunningacc(item.vps.trim())\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            vpsoption:vpsoption,\r\n            threads:threads,\r\n            vpsreset:vpsreset,\r\n            live:live,\r\n            running:running,\r\n            state:state,\r\n            proxy:proxy,\r\n            cmt:cmt\r\n        }))\r\n    }\r\n    const handleChange = (e:any) => {\r\n        setthreads(parseInt(e.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update cho VPS IP:  {item?.vps}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Số user</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={threads} onChange={(e) => setthreads(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">user</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số thread</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={running} onChange={(e) => setrunning(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsoption}\r\n                        >\r\n                            <option key={0} value={\"Sub_Pending\"}>\r\n                                {\"PENDING\"}\r\n                            </option>\r\n                            <option key={1} value={\"sub\"}>\r\n                                {\"SUB\"}\r\n                            </option>\r\n                            <option key={2} value={\"like\"}>\r\n                                {\"LIKE\"}\r\n                            </option>\r\n                            <option key={3} value={\"like_sub\"}>\r\n                                {\"LIKE_SUB\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số Sub 24H</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={state} onChange={(e) => setstate(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">sub</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số Like 24H</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={live} onChange={(e) => setlive(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">like</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart & DelAcc\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\modals\\EditMulti\\index.tsx",["5030","5031","5032","5033","5034","5035","5036","5037","5038","5039","5040","5041","5042","5043","5044","5045","5046","5047","5048"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel,OrderModelChecked } from 'app/modules/vpssub/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\nimport {RootState} from \"../../../../../setup\";\r\n\r\n\r\n\r\ntype Props = {\r\n    list_vps:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({list_vps, show,close }) => {\r\n    //console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ vpsdub }) => vpsdub.adding, shallowEqual) as boolean || false\r\n    const accounts: AccountModel[] = useSelector<RootState>(({ vpsdub }) => vpsdub.accounts, shallowEqual) as AccountModel[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n\r\n    const [vpsoption, setvpsoption] = useState('sub')\r\n    const [threads, setthreads] = useState(2000)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(0)\r\n    const [ext, setext] = useState(1)\r\n    const [cmt, setcmt] = useState(1)\r\n    const [proxy, setproxy] = useState(1)\r\n    const [running, setrunning] = useState(10)\r\n    const [live, setlive] = useState(5)\r\n    const [state, setstate] = useState(5)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'vpssub/resetrunningaccbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'vpssub/resetrunningacccmtbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        accounts.forEach(item=>{\r\n            const myElem = list_vps.find(value => value.vps===item.vps)\r\n            if(myElem && item.checked){\r\n                arr.push(item.vps)\r\n            }\r\n        })\r\n        if(vpsreset==2){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n            }\r\n        }\r\n        console.log(accounts)\r\n        const vps=arr.join('\\n')\r\n\r\n        dispatch(actions.editMultiOrderRequest({\r\n            vps,\r\n            vpsoption,\r\n            vpsreset,\r\n            threads,\r\n            get_account,\r\n            ext,\r\n            running,\r\n            state,\r\n            live,\r\n            cmt,\r\n            proxy\r\n        }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Số user</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={threads} onChange={(e) => setthreads(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">user</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số thread</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={running} onChange={(e) => setrunning(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsoption}\r\n                        >\r\n                            <option key={0} value={\"Sub_Pending\"}>\r\n                                {\"PENDING\"}\r\n                            </option>\r\n                            <option key={1} value={\"sub\"}>\r\n                                {\"SUB\"}\r\n                            </option>\r\n                            <option key={2} value={\"like\"}>\r\n                                {\"LIKE\"}\r\n                            </option>\r\n                            <option key={3} value={\"like_sub\"}>\r\n                                {\"LIKE_SUB\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số Sub 24H</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={state} onChange={(e) => setstate(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">sub</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Số Like 24H</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <input style={{fontWeight:'bold'}} value={live} onChange={(e) => setlive(parseInt(e.target.value))} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n                        <span className=\"input-group-text\" id=\"basic-addon2\">like</span>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart & DelAcc\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" disabled={adding}  style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn\">Lưu thông tin mới</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\modals\\RestartMulti\\index.tsx",["5049","5050","5051","5052","5053","5054","5055","5056","5057","5058","5059","5060","5061","5062","5063","5064","5065","5066","5067","5068","5069","5070","5071","5072","5073","5074","5075"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel,OrderModelChecked } from 'app/modules/vpssub/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {Group, OrderModel} from \"../../../orders/models/Order\";\r\n\r\n\r\n\r\ntype Props = {\r\n    list_vps:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst RestartMulti: React.FC<Props> = ({list_vps, show,close }) => {\r\n    //console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ vpsdub }) => vpsdub.adding, shallowEqual) as boolean || false\r\n    const accounts: AccountModel[] = useSelector<RootState>(({ vpsdub }) => vpsdub.accounts, shallowEqual) as AccountModel[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n\r\n    const [vpsoption, setvpsoption] = useState('Pending')\r\n    const [threads, setthreads] = useState(2000)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(0)\r\n    const [ext, setext] = useState(1)\r\n    const [cmt, setcmt] = useState(1)\r\n    const [proxy, setproxy] = useState(1)\r\n    const [running, setrunning] = useState(10)\r\n    const [live, setlive] = useState(5)\r\n    const [state, setstate] = useState(5)\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'vpssub/resetrunningaccbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'vpssub/resetrunningacccmtbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        accounts.forEach(item=>{\r\n            const myElem = list_vps.find(value => value.vps===item.vps)\r\n            if(myElem && item.checked){\r\n                arr.push(item.vps)\r\n            }\r\n        })\r\n        if(vpsreset==2){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n            }\r\n        }\r\n        if(vpsreset==3){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacccmt(arr[i].trim())\r\n            }\r\n        }\r\n        const vps=arr.join('\\n')\r\n\r\n        dispatch(actions.editRestartMultiOrderRequest({\r\n            vps,\r\n            vpsoption,\r\n            vpsreset,\r\n            threads,\r\n            get_account,\r\n            ext,\r\n            running,\r\n            state,\r\n            live,\r\n            cmt,\r\n            proxy\r\n        }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart & DelAcc\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" disabled={adding} style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn btn-primary\">Lưu thông tin mới</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RestartMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\components\\UserItem\\index.tsx",["5076","5077","5078","5079","5080","5081","5082","5083","5084","5085","5086","5087","5088","5089","5090"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/vpssub/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AccountModel,\r\n    index:number\r\n}\r\n\r\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.vps!) == true) {\r\n            dispatch(actions.deleteVpsRequest(item.vps))\r\n        }\r\n    }\r\n    return (\r\n\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                vps:item.vps,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                         />\r\n                </div>\r\n            </td>\r\n            <td className='w-25px'>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <div className='d-flex align-items-center'>\r\n                    <div className='d-flex justify-content-start flex-column'>\r\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\r\n                            {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length).length!=0&&<span style={{marginRight:2,backgroundColor:\"#26695c\"}} className='badge badge-dark'>\r\n                                <text style={{fontSize:11}}>\r\n                                {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length)}\r\n                                </text>\r\n                            </span>}\r\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"black\"}}>\r\n                                {item.vps.substring(0,item.vps.lastIndexOf('-'))}\r\n                                </text>\r\n                            </span>\r\n                            <span style={{marginRight:2,backgroundColor:round((Date.now()-item.timecheck)/1000/60)<10?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"white\"}}>\r\n                                    {((Date.now()-item.timecheck)/1000/60/60)>=24?((((Date.now()-item.timecheck)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timecheck)/1000/60/60)>=1?((Date.now()-item.timecheck)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timecheck)/1000/60).toFixed(0)+'m'}\r\n                                </text>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginRight:2, backgroundColor:item.vpsoption=='Sub_Pending'?'rgba(9,9,9,0.68)':'rgba(218,30,30,0.97)'}}>\r\n                    <text >\r\n                    {item.vpsoption=='Sub_Pending'?'Pending'.toUpperCase():item.vpsoption=='Pending'?item.vpsoption:item.vpsoption.toUpperCase()}\r\n                    </text>\r\n                </span>\r\n                <span style={{fontWeight:'bold',fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\"}} className='badge badge-dark'>\r\n\r\n                        <text >\r\n                              {item.acccount==0?'0':+item.acccount}|{item.threads==0?'0':+item.threads}\r\n                        </text>\r\n\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'#50CD89'}}>\r\n                    <text >\r\n                    Live {item.acccountlive}\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'#c0271b'}}>\r\n                    <text >\r\n                    Die {item.acccount-item.acccountlive}\r\n                    </text>\r\n                </span>\r\n            </td>\r\n            <td className='text-end'>\r\n                <div  className='d-flex flex-column w-100 me-2'>\r\n                    <div  className='d-flex flex-stack mb-2'>\r\n                        <span  style={{color:\"black\",fontWeight:\"bold\"}} className={parseInt(item.timegettask)>=30?'badge badge-warning':''} >Max Thread: {item.running} | Max Sub: {item.state} | Max Like: {item.live} </span>\r\n                        {\r\n                            item.vpsreset!=0 && <span style={{fontWeight:'bold',fontSize:11,marginTop:2,backgroundColor:\"#e57624\"}} className='badge badge-danger'>\r\n\r\n                                <text >\r\n                                        Reset{item.vpsreset}\r\n                                </text>\r\n\r\n                </span>\r\n\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                    <button\r\n                        onClick={()=>clickDeleteHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'>\r\n                        <KTSVG\r\n                            path='/media/icons/duotune/general/gen027.svg'\r\n                            className='svg-icon-3'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpssub\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\OrdersPage.tsx",["5091","5092","5093","5094","5095","5096"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orderfollowertiktok }) => orderfollowertiktok.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderfollowertiktok }) => orderfollowertiktok.currentOrder, shallowEqual) as OrderModel || undefined\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n      {\r\n        currentOrder && <EditModal key={currentOrder?.orderid} item={currentOrder}  />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\redux\\OrdersRedux.ts",["5097","5098","5099","5100","5101","5102"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel,  OrderForm, OrderUpdateForm } from '../models/Order'\r\nimport {\r\n  getListOrder,\r\n  getOrderFilter,\r\n  updateOrder,\r\n  updateThread,\r\n  addOrder,\r\n  deleteChannel,\r\n  getOrderPercentFilter\r\n} from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[OrderFollowerTikTok] Filter',\r\n  ShowOrdersPercentFilter:'[OrderFollowerTikTok] Percent Filter',\r\n  RequestOrders: '[OrderFollowerTikTok] Requested',\r\n  OrdersLoadedSuccess: '[OrderFollowerTikTok] Loaded succcess',\r\n  OrdersLoadedFail: '[OrderFollowerTikTok] load fail',\r\n  AddOrderRequest: '[OrderFollowerTikTok] Add Order Request',\r\n  AddOrderManualRequest: '[OrderFollowerTikTok] Add Order Manual Request',\r\n  AddOrderSuccess: '[OrderFollowerTikTok] Add Order Success',\r\n  AddOrdersSuccess: '[OrderFollowerTikTok] Add Orders Success',\r\n  AddOrderFail: '[OrderFollowerTikTok] Add Order Fail',\r\n  ShowcurrentOrder: '[OrderFollowerTikTok] Show Order',\r\n  RequestUpdate: '[OrderFollowerTikTok] Requested Update',\r\n  RequestUpdateThread: '[OrderFollowerTikTok] Requested UpdateThread',\r\n  UpdateMultiOrderRequest: '[OrderFollowerTikTok] Update Multi Order Request',\r\n  UpdateMultiThreadRequest: '[OrderFollowerTikTok] Update Multi Thread Request',\r\n  UpdateSuccess: '[OrderFollowerTikTok] Update Success',\r\n  UpdateMultiSuccess: '[OrderFollowerTikTok] Update Multi Success',\r\n  UpdateFail: '[OrderFollowerTikTok] Update Fail',\r\n  ClearSelected: '[OrderFollowerTikTok] Clear selected account',\r\n  GroupLoadedRequest: '[OrderFollowerTikTok] Group Loaded Request',\r\n  GroupLoadedSuccess: '[OrderFollowerTikTok] Group Loaded Success',\r\n  GroupLoadedFail: '[OrderFollowerTikTok] Group Loaded Fail',\r\n  GroupAddRequest: '[OrderFollowerTikTok] GroupAddRequest',\r\n  GroupAddSuccess: '[OrderFollowerTikTok] Group Add Success',\r\n  GroupAddFail: '[OrderFollowerTikTok] Group Add Fail',\r\n  GroupDeleteRequest: '[OrderFollowerTikTok] Group Delete Request',\r\n  GroupDeleteSuccess: '[OrderFollowerTikTok] Group Delete Success',\r\n  SelectGroup: '[OrderFollowerTikTok] Select Group',\r\n  DeleteOrderRequest: '[OrderFollowerTikTok] Delete Order Request',\r\n  DeleteOrderSuccess: '[OrderFollowerTikTok] Delete Order Success',\r\n  CheckedChange: '[OrderFollowerTikTok] Checked Change',\r\n  CheckedAllChange: '[OrderFollowerTikTok] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  currentOrder: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersPercentFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n   \r\n      case actionTypes.DeleteOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: state.orders.filter((item: OrderModel) => {\r\n            if (action.payload?.tiktok_id==item.tiktok_id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdateThread: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiThreadRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          if (item.tiktok_id == action.payload?.channel_tiktok?.tiktok_id) {\r\n            return action.payload?.channel_tiktok\r\n          } else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: true,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.orders.map((item: OrderModel) => {\r\n          const findItem = action.payload?.channel_tiktok.find((_item:OrderModel)=>{\r\n            if(_item.tiktok_id===item.tiktok_id){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          orders: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentOrder: undefined\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            if(item.tiktok_id===action.payload?.data?.tiktok_id){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (channel_tiktok: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { channel_tiktok } }),\r\n  requestUpdateThread: (channel_tiktok: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { channel_tiktok } }),\r\n  updateSuccess: (channel_tiktok: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { channel_tiktok } }),\r\n  updateMultiSuccess: (channel_tiktok: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { channel_tiktok } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  deleteOrderRequest: (tiktok_id: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { tiktok_id,cancel } }),\r\n  deleteOrderSuccess: (tiktok_id: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { tiktok_id,cancel } }),\r\n  checkedChange: (data:{tiktok_id: string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.channel_tiktok))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.channel_tiktok))\r\n  })\r\n\r\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.channel_tiktok))\r\n  })\r\n\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n\r\n\r\n\r\n\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.channel_tiktok)\r\n    if (result && result.channel_tiktok) {\r\n      yield put(actions.updateMultiSuccess(result.channel_tiktok))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateThread(param.payload.channel_tiktok)\r\n    if (result && result.channel_tiktok) {\r\n      yield put(actions.updateMultiSuccess(result.channel_tiktok))\r\n    } else {\r\n      alert(result.message)\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.channel_tiktok) {\r\n          yield put(actions.updateMultiSuccess(result.channel_tiktok))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateThread(payload)\r\n      if (result && result.channel_tiktok) {\r\n        yield put(actions.updateMultiSuccess(result.channel_tiktok))\r\n      } else {\r\n        yield put(actions.addOrderFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload\r\n      const { data: result } = yield deleteChannel(payload.tiktok_id,payload.cancel)\r\n      if (result&&result.channel_tiktok!==null) {\r\n        console.log(\"OKE\")\r\n        yield put(actions.deleteOrderSuccess(payload.tiktok_id,payload.cancel))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\OrderList.tsx",["5103","5104","5105","5106","5107","5108","5109","5110","5111","5112","5113","5114","5115","5116","5117","5118","5119","5120","5121","5122","5123","5124","5125","5126","5127","5128","5129","5130","5131","5132","5133","5134","5135","5136","5137","5138","5139","5140","5141","5142","5143","5144","5145","5146","5147","5148","5149","5150","5151","5152","5153","5154","5155","5156","5157","5158","5159","5160","5161","5162","5163","5164","5165","5166","5167","5168","5169","5170","5171","5172","5173","5174","5175","5176","5177","5178","5179","5180","5181","5182","5183","5184","5185","5186","5187","5188","5189","5190","5191"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport { OrderModel} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {Spinner} from \"react-bootstrap-v5\";\r\nimport BhManualModal from \"./modals/BhManualModal\";\r\n\r\ntype Props = {\r\n  done:number,\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [keyrate, setKeyRate] = useState(0)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyratetrue, setKeyRateTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showManual, setShowManual] = useState(false)\r\n  const [showBhManual, setShowBhManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\r\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\r\n  let [totaltimeorderus, setTotalTimeOrderUs] = useState(0)\r\n  let [totaltimeorderusshow, setTotalTimeOrderUsShow] = useState(0)\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaltimebuffedorderus, setTotalTimeBuffedOrderUs] = useState(0)\r\n  let [totaltimebuffedorderusshow, setTotalTimeBuffedOrderUsShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n\r\n  let [totalthreadset, setTotalThreadSet] = useState(0)\r\n  let [totalthreadsetshow, setTotalThreadSetShow] = useState(0)\r\n  let [totalthreadusset, setTotalThreadUsSet] = useState(0)\r\n  let [totalthreadsetusshow, setTotalThreadSetUsShow] = useState(0)\r\n  let [totalthread, setTotalThread] = useState(0)\r\n  let [totalthreadshow, setTotalThreadShow] = useState(0)\r\n  let [totalthreadus, setTotalThreadUs] = useState(0)\r\n  let [totalthreadusshow, setTotalThreadUsShow] = useState(0)\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let [useEff, setuseEff] = useState(0)\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  let sumtime=0;\r\n  let sumtimeus=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let sumthreadset=0;\r\n  let sumthread=0;\r\n  let sumthreadusset=0;\r\n  let sumthreadus=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n  let sumtimedone=0;\r\n  const arr:String[]=[]\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  const [list_video,setList_Video]=useState([{\r\n    id:0,\r\n    tiktok_id:\"\",\r\n  },])\r\n  orders.forEach(item=>{\r\n    sumthreadset=sumthreadset +item.max_threads;\r\n    sumthread=sumthread+item.total;\r\n    sumtime=sumtime+item.follower_order;\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    sumtimedone=sumtimedone+Math.round(Number(item.follower_total==null?0:item.follower_total))\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      sumtimeus=sumtimeus+item.follower_order;\r\n      sumthreadusset=sumthreadusset+item.max_threads;\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n      sumthreadus=sumthreadus+item.total\r\n    }\r\n  })\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  let videos=''\r\n  const handleWindowResize = () => {\r\n    setIsMobile(window.innerWidth <= 800);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_video.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_Video([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totaltimeordershow=totaltimeorder\r\n    setTotalTimeOrderShow(totaltimeordershow)\r\n    totaltimeorder=0\r\n    setTotalTimeOrder(0)\r\n\r\n    totaltimeorderusshow=totaltimeorderus\r\n    setTotalTimeOrderUsShow(totaltimeorderusshow)\r\n    totaltimeorderus=0\r\n    setTotalTimeOrderUs(0)\r\n\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n\r\n    totalthreadsetshow=totalthreadset\r\n    setTotalThreadSetShow(totalthreadsetshow)\r\n    setTotalThreadSet(0)\r\n\r\n    totalthreadsetusshow=totalthreadusset\r\n    setTotalThreadSetUsShow(totalthreadsetusshow)\r\n    setTotalThreadUsSet(0)\r\n\r\n    totalthreadshow=totalthread\r\n    setTotalThreadShow(totalthreadshow)\r\n    setTotalThread(0)\r\n\r\n    totalthreadusshow=totalthreadus\r\n    setTotalThreadUsShow(totalthreadusshow)\r\n    setTotalThreadUs(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    totaltimebuffedorder=0\r\n    setTotalTimeBuffedOrder(0)\r\n\r\n    totaltimebuffedorderusshow=totaltimebuffedorderus\r\n    setTotalTimeBuffedOrderUsShow(totaltimebuffedorderusshow)\r\n    totaltimebuffedorderus=0\r\n    setTotalTimeBuffedOrderUs(0)\r\n\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    handleWindowResize();\r\n    window.addEventListener('resize', handleWindowResize);\r\n\r\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\r\n\r\n  const clickDeleteHandler = () => {\r\n    const strings:number[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.tiktok_id===item.tiktok_id)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.tiktok_id)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hủy \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,1))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const clickDeleteOrderDoneHandler = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_video.find(value => value.tiktok_id===item.tiktok_id)\r\n      if(myElem && item.checked){\r\n        arr.push(item.tiktok_id)\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn hoàn thành \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.deleteOrderRequest(orderarr,0))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginTop:10,marginBottom:10,marginRight:5,marginLeft:5}}>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5}}>{(isMobile==false?\"Đang chạy \":\"Total Order \") +totaldordershow}</span>\r\n                </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span  className='fw-bolder fs-3 mb-1'>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695CFF\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Luồng cấp \":\"Set \")+ ((useEff<=1?sumthreadset:totalthreadsetshow)>=1000?(format1((useEff<=1?sumthreadset/1000:totalthreadsetshow/1000))+\"K\"):(format1((useEff<=1?sumthreadset:totalthreadsetshow))))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#b7080f\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Luồng chạy \":\"Run \") +((useEff<=1?sumthread:totalthreadshow)>=1000?(format1((useEff<=1?sumthread/1000:totalthreadshow/1000))+\"K\"):(format1((useEff<=1?sumthread:totalthreadshow))))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"#fcfcfc\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Tổng đặt \":\"Quantity \")+ ((useEff<=1?sumtime:totaltimeordershow)>=1000?(format1((useEff<=1?sumtime/1000:totaltimeordershow/1000))+\"K\"):(format1((useEff<=1?sumtime:totaltimeordershow))))}</span>\r\n                  </span>\r\n                </p>\r\n                <p style={{fontSize:11}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' >\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Đã chạy \":\"Done \")+ ((useEff<=1?sumtimedone:totaltimebuffedordershow)>=1000?(format1((useEff<=1?sumtimedone/1000:totaltimebuffedordershow/1000))+\"K\"):(format1((useEff<=1?sumtimedone:totaltimebuffedordershow))))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#26695CFF\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Còn tồn \":\"Remains \")+ (((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))>=1000?(format1(((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow))/1000)+\"K\"):(format1(((useEff<=1?sumtime:totaltimeordershow)-(useEff<=1?sumtimedone:totaltimebuffedordershow)))))}</span>\r\n                  <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"#b7080f\",marginLeft:5,marginTop:3}}>{(isMobile==false?\"Tổng tiền \":\"\") +(useEff<=1?summoney.toFixed(0):totalmoneyshow.toFixed(0))}$</span>\r\n                  </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-5 col-sm-12 text-right\">\r\n                {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                    <button style={{marginRight:5}}\r\n                            onClick={() => {\r\n                              clickDeleteHandler()\r\n                            }}\r\n                            className='btn btn-google'\r\n                    >\r\n                      Hủy\r\n                    </button>\r\n                )}\r\n                {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\r\n                    <button\r\n                        onClick={() => {\r\n                          setShowEditMulti(true)\r\n                        }}\r\n                        className='btn btn-light'\r\n                    >\r\n                      Sửa luồng\r\n                    </button>\r\n                )}\r\n\r\n                {isShowFixMulti &&  (\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              clickDeleteOrderDoneHandler()\r\n                            }}\r\n                            className='btn btn-light'\r\n                    >\r\n                      Hoàn thành\r\n                    </button>\r\n                )}\r\n                {role === \"ROLE_ADMIN111\"&&<button style={{marginRight:5,color:\"white\"}}\r\n                                                   onClick={() => {\r\n                                                     setShowBhManual(true)\r\n                                                   }}\r\n                                                   className='btn btn-google'\r\n                >Bảo hành\r\n                </button>}\r\n                <button\r\n                    onClick={() => {\r\n                      setShowAddManual(true)\r\n                    }}\r\n                    className='btn btn-success'\r\n                >\r\n                  Thêm Link\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)\r\n                         }\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {\r\n                            setKeyTrue(1)\r\n                          }}\r\n                      /*\r\n                      if(key.trim().length==0){\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.requestOrders(''))\r\n                        }else{\r\n                          dispatch(actions.requestOrders(user))\r\n                        }\r\n                      }else{\r\n                        if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                          dispatch(actions.showordersfilter(key,''))\r\n                        }else{\r\n                          dispatch(actions.showordersfilter(key,user))\r\n                        }\r\n                      }\r\n                      //setKey(\"\")\r\n                    }}\r\n\r\n                       */\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{width:\"40%\"}}>\r\n                <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                       onChange={(e) => {\r\n                         setKeyRate(parseInt(e.target.value))\r\n                         setKeyRateTrue(1)\r\n                         /*\r\n                         if(parseInt(e.target.value)==0){\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.requestOrders(''))\r\n                           }else{\r\n                             dispatch(actions.requestOrders(user))\r\n                           }\r\n                         }else{\r\n                           if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\r\n                           }else{\r\n                             dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\r\n                           }\r\n\r\n                         }\r\n\r\n                          */\r\n                         //setKeyRate(keyrate)\r\n                       }}\r\n                       className=\"form-control form-control-solid\"\r\n                       type=\"select\"\r\n                       value={keyrate}\r\n                >\r\n                  <option key={0} value={0}>\r\n                    {\"All %\"}\r\n                  </option>\r\n                  <option key={10} value={10}>\r\n                    {\"10\"}\r\n                  </option>\r\n                  <option key={20} value={20}>\r\n                    {\"20\"}\r\n                  </option>\r\n                  <option key={30} value={30}>\r\n                    {\"30\"}\r\n                  </option>\r\n                  <option key={40} value={40}>\r\n                    {\"40\"}\r\n                  </option>\r\n                  <option key={50} value={50}>\r\n                    {\"50\"}\r\n                  </option>\r\n                  <option key={60} value={60}>\r\n                    {\"60\"}\r\n                  </option>\r\n                  <option key={70} value={70}>\r\n                    {\"70\"}\r\n                  </option>\r\n                  <option key={80} value={80}>\r\n                    {\"80\"}\r\n                  </option>\r\n                  <option key={90} value={90}>\r\n                    {\"90\"}\r\n                  </option>\r\n                  <option key={101} value={101}>\r\n                    {\"101\"}\r\n                  </option>\r\n                  <option key={104} value={104}>\r\n                    {\"104\"}\r\n                  </option>\r\n                  <option key={106} value={106}>\r\n                    {\"106\"}\r\n                  </option>\r\n                  <option key={110} value={110}>\r\n                    {\"110\"}\r\n                  </option>\r\n                </Input>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                               //setKeyRate(keyrate)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n                </Input>}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\r\n                </th>}\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n                <th   className='min-w-150px text-sm'>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        tiktok_id: order.tiktok_id\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        tiktok_id: order.tiktok_id\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(Math.round((Math.round(Number(order.follower_total==null?0:order.follower_total))/order.follower_order*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        tiktok_id: order.tiktok_id\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.max_threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        tiktok_id: order.tiktok_id\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0|| order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.max_threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && Math.round((Math.round(Number(order.follower_total==null?0:order.follower_total))/order.follower_order*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        tiktok_id: order.tiktok_id\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.follower_total==null?0:order.follower_total))/order.follower_order*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        tiktok_id: order.tiktok_id\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_video.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={totaldorder}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid}\r\n                              item={order}\r\n                          />\r\n                      )}\r\n                    else if(((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.max_threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                        let orderitem = {\r\n                          id: totaldorder,\r\n                          tiktok_id: order.tiktok_id\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_video.push(orderitem)\r\n                        return (\r\n                            <OrderItem\r\n                                index={totaldorder}\r\n                                showEdit={role === 'ROLE_ADMIN'}\r\n                                key={order.orderid}\r\n                                item={order}\r\n                            />\r\n                        )\r\n                    }else if(((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0 || order.max_threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.follower_total==null?0:order.follower_total))/order.follower_order*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totaltimeorder=order.follower_order\r\n                        totalthreadset=order.max_threads\r\n                        totalthread=order.total\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        if(order.service>600){\r\n                          totalvn=1\r\n                        }else{\r\n                          totalmoneyUS=order.price\r\n                          totalUs=1\r\n                          totalthreadus=order.total\r\n                          totalthreadusset=order.max_threads\r\n                          totaltimeorderus=order.follower_order\r\n                          totaltimebuffedorderus=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totalthreadset=totalthreadset+order.max_threads\r\n                        totalthread=totalthread+order.total\r\n                        totaltimeorder=order.follower_order+totaltimeorder\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                        if(order.service>600){\r\n                          totalvn=1+totalvn\r\n                        }else{\r\n                          totalmoneyUS=totalmoneyUS+order.price\r\n                          totalUs=1+totalUs\r\n                          totalthreadus=totalthreadus+order.total\r\n                          totalthreadusset=totalthreadusset+order.max_threads\r\n                          totaltimeorderus=totaltimeorderus+order.follower_order\r\n                          totaltimebuffedorderus=totaltimebuffedorderus+Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                        }\r\n                      }\r\n                        let orderitem = {\r\n                          id: totaldorder,\r\n                          tiktok_id: order.tiktok_id\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_video.push(orderitem)\r\n                        return (\r\n                            <OrderItem\r\n                                index={totaldorder}\r\n                                showEdit={role === 'ROLE_ADMIN'}\r\n                                key={order.orderid}\r\n                                item={order}\r\n                            />\r\n                        )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            listvieoid={list_video}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n\r\n        <AddModal\r\n            show={showManual}\r\n            close={() => {\r\n              setShowManual(false)\r\n            }}\r\n        />\r\n\r\n        <BhManualModal\r\n            show={showBhManual}\r\n            close={() => {\r\n              setShowBhManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\redux\\OrdersCRUD.ts",["5192"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderModel} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"channel_tiktok/getOrderFollower?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"webtraffic/getorderfilterbuffh?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderPercentFilter(key:number,user:string) {\r\n  const res:any = await getFunciton(\"webtraffic/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\r\n  return res\r\n}\r\nexport async function addorderv2( tiktok_id:string,\r\n                                  note:string,\r\n                                  max_threads:number,\r\n                                  follower_order:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"channel_tiktok/orderFollower\", {\r\n    tiktok_id:tiktok_id,\r\n    max_threads:max_threads,\r\n    follower_order:follower_order,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function addorderbychannelv2( videoid:string,\r\n                                  note:string,\r\n                                  maxthreads:number,\r\n                                  vieworder:number,\r\n                                  service:number,\r\n                                  user:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/orderchannelview\", {\r\n    videoid:videoid,\r\n    maxthreads:maxthreads,\r\n    vieworder:vieworder,\r\n    note:note,\r\n    user:user,\r\n    service:service\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/bhview\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"channel_tiktok/update\",order)\r\n  return res\r\n}\r\nexport async function updateThread(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"channel_tiktok/updatethread\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\n\r\n\r\n\r\n\r\nexport async function deleteChannel(orderid:string,cancel:number) {\r\n  const res:any = await deleteFunciton(\"/channel_tiktok/delete?tiktok_id=\"+orderid+'&cancel='+cancel)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\EditModal\\index.tsx",["5193","5194","5195","5196","5197","5198","5199","5200","5201","5202","5203","5204","5205","5206","5207"],"import React, { useState, useEffect } from 'react'\r\nimport { OrderModel } from 'app/modules/orderfollowertiktok/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\r\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\r\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\r\n\r\n\r\ntype Props = {\r\n    item: OrderModel\r\n\r\n}\r\n\r\nconst EditModal: React.FC<Props> = ({ item}) => {\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\r\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const adding: boolean = useSelector<RootState>(({ orderfollowertiktok }) => orderfollowertiktok.adding, shallowEqual) as boolean || false\r\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\r\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [max_threads, setMax_threads] = useState(item.max_threads)\r\n    const [note, setNote] = useState(item.note)\r\n    const [follower_order, setfollower_order] = useState(item.follower_order)\r\n    const [user,setUser]=useState(item.user)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    let [timebuff_old,setTimebuff_Old]=useState(0);\r\n    const submit = () => {\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            note,\r\n            max_threads,\r\n            follower_order,\r\n            user\r\n        }))\r\n     \r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Update {item.orderid} | Đã chạy {format1((item.follower_total==null?0:item.follower_total))}</h5>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Follower order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"vieworder\"\r\n                                    name=\"vieworder\"\r\n                                    value={follower_order}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setfollower_order(parseInt(e.target.value)\r\n                                    )}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={max_threads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMax_threads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                {role==\"adc\"&&\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n                        <span>Số tiền {follower_order<item.follower_total?\"hoàn\": \"trả thêm\"}: {format1(((follower_order<item.follower_order?(item.follower_order-follower_order):(follower_order-item.follower_order))/4000)*(price*(1-discount/100)+(vip!=1?(\r\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\r\n                            <br/>\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>}\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\AddModal\\index.tsx",["5208","5209","5210","5211","5212","5213","5214","5215","5216","5217","5218","5219","5220","5221","5222","5223","5224","5225","5226"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport {\r\n  Modal,\r\n  Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n  show: boolean\r\n  close: () => void\r\n}\r\n\r\nconst AddModal: React.FC<Props> = ({ show, close }) => {\r\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n  const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const [maxthreads, setMaxthreads] = useState(50)\r\n  const [videoid, setVideoid] = useState(\"\")\r\n  const [service, setService] = useState(666)\r\n  const [note, setNote] = useState(\"\")\r\n  const [vieworder, setVieworder] = useState(1000)\r\n  const [countorder, setCountorder] = useState(8)\r\n  const [user,setUser]=useState(username)\r\n  const [showorder,setShowOrder]=useState(true)\r\n  const [orderdonenum,setOrderDoneNum]=useState(0)\r\n  const [list_order,setList_Todo]=useState([{\r\n    id:\"0000000000\",\r\n    videoid:\"\",\r\n    state:\"\",\r\n    time:0,\r\n    price:0\r\n\r\n  },])\r\n  const [list_service,setList_Service]=useState([{\r\n    id:\"000\",\r\n    user:\"All Service\"\r\n  },])\r\n\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'servive/getallservice?role='+role;\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    console.log(\"tiktok\")\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: arrlist[i].split('|')[0].trim(),\r\n        user: arrlist[i]\r\n      }\r\n      setList_Service([...list_service, orderitem])\r\n      list_service.push(orderitem)\r\n    }\r\n  }\r\n\r\n  async  function   getkey() {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    return key\r\n  }\r\n  let [sumprice,setSumPrice]=useState(0)\r\n  let [sumtime,setSumTime]=useState(0)\r\n  let [sumorder,setSumOrder]=useState(0)\r\n  const dismissModal = () => {\r\n    close()\r\n    setShowOrder(true)\r\n    setVideoid(\"\")\r\n\r\n    let or={\r\n      id:\"0000000000\",\r\n      videoid:\"\",\r\n      state:\"\",\r\n      time:0,\r\n      price:0\r\n    }\r\n    setList_Todo([or])\r\n    if(orderdonenum>0){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setOrderDoneNum(0)\r\n  }\r\n \r\n  const  submit = async () => {\r\n    let  requestUrl = API_URL+'videoview/getkey';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {key} = responseJson;\r\n    setSumOrder(0)\r\n    setSumTime(0)\r\n    setSumPrice(0)\r\n    if (videoid.trim() === \"\") {\r\n      alert(\"VideoId không để trống!\")\r\n      return\r\n    }\r\n\r\n    if (vieworder < 100) {\r\n      alert(\"Số giờ phải lớn hơn 100!\")\r\n      return\r\n    }\r\n    setShowOrder(false)\r\n    const channelid = videoid.split('\\n')\r\n    console.log(channelid.length)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getcounttimeorder()\r\n    console.log(list_service)\r\n    if (!adding) {\r\n      close()\r\n    }\r\n  }, [adding])\r\n\r\n  return (\r\n      <Modal isOpen={show}\r\n             modalTransition={{ timeout: 500 }}>\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n            <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách UID':'Thành công: '+sumorder+' | view: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n              <span className=\"svg-icon svg-icon-2x\"></span>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n            <Form>\r\n              <FormGroup>\r\n                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                  Danh sách link kênh\r\n                </Label>\r\n                <Input style={{minHeight:250}}\r\n                       id=\"list_id\"\r\n                       name=\"list_id\"\r\n                       className=\"form-control form-control-solid\"\r\n                       placeholder={\"1 UID một dòng...\"}\r\n                       value={videoid}\r\n                       type={\"textarea\"}\r\n                       onChange={(e) => setVideoid(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <div>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Số video Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={countorder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setCountorder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Views Order\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"vieworder\"\r\n                         name=\"vieworder\"\r\n                         value={vieworder}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 100\"\r\n                         onChange={(e) => setVieworder(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                    Dịch vụ\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         onChange={(e) => setService(parseInt(e.target.value))}\r\n                         className=\"form-control form-control-solid\"\r\n                         type=\"select\"\r\n                         value={service}\r\n                  >\r\n                    {\r\n                      list_service.map((item, index) => {\r\n                        if(item.id!='000')\r\n                          return(\r\n                              <option key={item.id} value={item.id}>\r\n                                {item.user}</option>)\r\n                      })\r\n                    }\r\n                  </Input>\r\n                </FormGroup>\r\n                {role != \"ROLE_USER\" &&<FormGroup>\r\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                    Luồng\r\n                  </Label>\r\n                  <Input style={{fontWeight:\"bold\"}}\r\n                         id=\"max_thread\"\r\n                         name=\"max_thread\"\r\n                         value={maxthreads}\r\n                         className=\"form-control form-control-solid\"\r\n                         placeholder=\"ví dụ : 1000\"\r\n                         onChange={(e) => setMaxthreads(parseInt(e.target.value))}\r\n                         type=\"number\"\r\n                  />\r\n                </FormGroup>}\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\" >\r\n                    Ghi chú\r\n                  </Label>\r\n                  <Input\r\n                      id=\"note\"\r\n                      name=\"note\"\r\n                      value={note}\r\n                      className=\"form-control form-control-solid\"\r\n                      placeholder=\"...\"\r\n                      onChange={(e) => setNote(e.target.value)}\r\n                      type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"card-body\" style={{width: \"100%\"}}>\r\n              {/* begin::Table container */}\r\n\r\n              {\r\n                list_order.map((item, index) => {\r\n                  if (item.videoid.length >0) return (\r\n                      <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                            <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                            <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                            <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                              {item.price.toPrecision()}$\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      </ul>\r\n                  )\r\n                })\r\n              }\r\n              {/* end::Table container */}\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n            <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n  )\r\n}\r\n\r\nexport default AddModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\AddManualModal\\index.tsx",["5227","5228","5229","5230","5231","5232","5233","5234","5235","5236","5237","5238","5239","5240"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { addorderv2 } from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderfollowertiktok }) => orderfollowertiktok.adding, shallowEqual) as boolean || false\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [max_threads, setMax_threads] = useState(50)\r\n    const [tiktok_id, setTiktok_id] = useState(\"\")\r\n    const [service, setService] = useState(1555)\r\n    const [note, setNote] = useState(\"\")\r\n    const [follower_order, setFollower_order] = useState(1000)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        tiktok_id:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    const [list_service,setList_Service]=useState([{\r\n        id:\"000\",\r\n        user:\"All Service\"\r\n    },])\r\n\r\n\r\n    async function getcounttimeorder() {\r\n        let  requestUrl = API_URL+'servive/getAllServiceTiktok?role='+role;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {user} = responseJson;\r\n        let arrlist =user.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: arrlist[i].split('|')[0].trim(),\r\n                user: arrlist[i]\r\n            }\r\n            setList_Service([...list_service, orderitem])\r\n            list_service.push(orderitem)\r\n        }\r\n    }\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setTiktok_id(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            tiktok_id:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(tiktok_id: string) {\r\n            await addorderv2(tiktok_id,note,max_threads,follower_order,service,user)\r\n                .then((data: any) => {\r\n                    if (data.data.channel_tiktok == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            tiktok_id: tiktok_id,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + follower_order;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        console.log(sumprice, sumtime, sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            tiktok_id: tiktok_id,\r\n                            time: 0,\r\n                            state: data.data.channel_tiktok,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        tiktok_id: tiktok_id,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n\r\n        if (follower_order < 100) {\r\n            alert(\"Số follower phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        setShowOrder(false)\r\n        const list_Link = tiktok_id.split('\\n')\r\n        for (var i = 0; i < list_Link.length; i++) {\r\n            let link_web = list_Link[i]\r\n            await order_video_ver2(link_web)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getcounttimeorder()\r\n        console.log(list_service)\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách link tiktok':'Thành công: '+sumorder+' | traffic: '+format1(sumtime)+' | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách link tiktok\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 link  một dòng...\"}\r\n                                value={tiktok_id}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setTiktok_id(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <div>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Follower Order\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"trafficorder\"\r\n                                    name=\"trafficorder\"\r\n                                    value={follower_order}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 100\"\r\n                                    onChange={(e) => setFollower_order(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\"  className=\"required form-label\">\r\n                                    Dịch vụ\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    onChange={(e) => setService(parseInt(e.target.value))}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    type=\"select\"\r\n                                    value={service}\r\n                                >\r\n                                    {\r\n                                        list_service.map((item, index) => {\r\n                                            if(item.id!='000')\r\n                                            return(\r\n                                                <option key={item.id} value={item.id}>\r\n                                                    {item.user}</option>)\r\n                                        })\r\n                                    }\r\n                                </Input>\r\n                            </FormGroup>\r\n                            {role != \"ROLE_USER\" &&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input style={{fontWeight:\"bold\"}}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={max_threads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"ví dụ : 1000\"\r\n                                    onChange={(e) => setMax_threads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.tiktok_id.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.tiktok_id} key={item.tiktok_id}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.tiktok_id}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\EditMulti\\index.tsx",["5241","5242","5243","5244","5245","5246","5247","5248","5249","5250","5251","5252","5253"],"import React, {useState, useEffect, ReactChild} from 'react'\r\nimport {OrderModel, OrderModelChecked} from 'app/modules/orderfollowertiktok/models/Order'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Button, Modal,\r\n    Form, FormGroup, Input, Label, ModalFooter,\r\n    ModalHeader, ModalBody\r\n} from \"reactstrap\"\r\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\r\n\r\nimport { RootState } from 'setup'\r\n\r\n\r\ntype Props = {\r\n    listvieoid:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderfollowertiktok }) => orderfollowertiktok.adding, shallowEqual) as boolean || false\r\n    const orders: OrderModel[] = useSelector<RootState>(({ orderfollowertiktok }) => orderfollowertiktok.orders, shallowEqual) as OrderModel[] || []\r\n\r\n    const dispatch = useDispatch()\r\n    const [max_threads, setMax_threads] = useState(5)\r\n    const [orderid, setOrderid] = useState(0)\r\n    //const [list_video, setList_video] = useState(\"\")\r\n    //\r\n    const [follower_order,setfollower_order]=useState(1000)\r\n    //\r\n    //\r\n\r\n    const [note, setNote] = useState(\"\")\r\n    const [tiktok_id, setTiktok_id] = useState(\"\")\r\n    const [user,setUser]=useState(username)\r\n    const [service,setservice]=useState(666)\r\n\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearcurrentOrder())\r\n    }\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n        const myElem = listvieoid.find(value => value.tiktok_id===item.tiktok_id)\r\n        if(myElem && item.checked){\r\n            arr.push(item.tiktok_id)\r\n        }\r\n    })\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        orders.forEach(item=>{\r\n            const myElem = listvieoid.find(value => value.tiktok_id===item.tiktok_id)\r\n            if(myElem && item.checked){\r\n                arr.push(item.tiktok_id)\r\n            }\r\n        })\r\n        const tiktok_id=arr.join('\\n')\r\n\r\n        dispatch(actions.editMultiThreadRequest({\r\n            orderid,\r\n            tiktok_id,\r\n            note,\r\n            max_threads,\r\n            user,\r\n            service,\r\n            follower_order\r\n        }))\r\n     \r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <Form>\r\n\r\n                        <div>\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    View order\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"mobile_rate\"\r\n                                    name=\"mobile_rate\"\r\n                                    value={follower_order}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setfollower_order(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role===\"Ver2\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" >\r\n                                    Ghi chú\r\n                                </Label>\r\n                                <Input\r\n                                    id=\"note\"\r\n                                    name=\"note\"\r\n                                    value={note}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    placeholder=\"...\"\r\n                                    onChange={(e) => setNote(e.target.value)}\r\n                                    type=\"text\"\r\n                                />\r\n                            </FormGroup>}\r\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\r\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                    Luồng\r\n                                </Label>\r\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\r\n                                    id=\"max_thread\"\r\n                                    name=\"max_thread\"\r\n                                    value={max_threads}\r\n                                    className=\"form-control form-control-solid\"\r\n                                    onChange={(e) => setMax_threads(parseInt(e.target.value))}\r\n                                    type=\"number\"\r\n                                />\r\n                            </FormGroup>}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\modals\\BhManualModal\\index.tsx",["5254","5255","5256","5257","5258","5259","5260","5261","5262","5263","5264","5265","5266","5267","5268","5269","5270","5271","5272","5273","5274","5275","5276","5277","5278","5279","5280","5281","5282","5283","5284","5285","5286","5287","5288"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n    Modal,\r\n    Form, FormGroup, Input, Label\r\n} from \"reactstrap\"\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport {addorderv2, bhorderv2} from '../../redux/OrdersCRUD'\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\r\ntype Props = {\r\n    show: boolean\r\n    close: () => void\r\n}\r\n\r\nconst BhManualModal: React.FC<Props> = ({ show, close }) => {\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const [maxthreads, setMaxthreads] = useState(50)\r\n    const [videoid, setVideoid] = useState(\"\")\r\n    const [homerate,setHome_rate]=useState(0)\r\n    //\r\n    const [searchrate,setSearch_rate]=useState(80)\r\n    const [suggestrate,setSuggest_rate]=useState(0)\r\n    const [directrate,setDirect_rate]=useState(20)\r\n    //\r\n    const [likerate,setLike_rate]=useState(25)\r\n    const [commentrate,setComment_rate]=useState(25)\r\n    const [mobilerate,setMobile_rate]=useState(0)\r\n    //\r\n    const [note, setNote] = useState(\"\")\r\n    const [viewstart, setViewstart] = useState(0)\r\n    const [timebuff, setTimebuff] = useState(4000)\r\n    const [optionbuff, setOptionbuff] = useState(0)\r\n    const [enabled,setEnabled]=useState(1)\r\n    const [user,setUser]=useState(username)\r\n    const [showorder,setShowOrder]=useState(true)\r\n    const [orderdonenum,setOrderDoneNum]=useState(0)\r\n    const [list_order,setList_Todo]=useState([{\r\n        id:\"0000000000\",\r\n        videoid:\"\",\r\n        state:\"\",\r\n        time:0,\r\n        price:0\r\n\r\n    },])\r\n    let [sumprice,setSumPrice]=useState(0)\r\n    let [sumtime,setSumTime]=useState(0)\r\n    let [sumorder,setSumOrder]=useState(0)\r\n    const dismissModal = () => {\r\n        close()\r\n        setShowOrder(true)\r\n        setVideoid(\"\")\r\n        let or={\r\n            id:\"0000000000\",\r\n            videoid:\"\",\r\n            state:\"\",\r\n            time:0,\r\n            price:0\r\n        }\r\n        setList_Todo([or])\r\n        if(orderdonenum>0){\r\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n                dispatch(actions.requestOrders(''))\r\n            }else{\r\n                dispatch(actions.requestOrders(user))\r\n            }\r\n        }\r\n        setOrderDoneNum(0)\r\n    }\r\n    async function order_video_ver2(video: string) {\r\n            await bhorderv2(video)\r\n                .then((data: any) => {\r\n                    if (data.data.videoview == \"true\") {\r\n                        setOrderDoneNum(orderdonenum + 1)\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            state: \"OK\",\r\n                            time: data.data.time,\r\n                            price: data.data.price\r\n                        }\r\n\r\n                        sumprice = sumprice + data.data.price\r\n                        setSumPrice(sumprice)\r\n                        sumtime = sumtime + timebuff;\r\n                        setSumTime(sumtime)\r\n                        sumorder = sumorder + 1\r\n                        setSumOrder(sumorder)\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    } else {\r\n                        let orderitem = {\r\n                            id: randomString(10),\r\n                            videoid: video,\r\n                            time: 0,\r\n                            state: data.data.videoview,\r\n                            price: 0\r\n                        }\r\n                        setList_Todo([...list_order, orderitem])\r\n                        list_order.push(orderitem)\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    let orderitem = {\r\n                        id: randomString(10),\r\n                        videoid: video,\r\n                        state: 'Error',\r\n                        time: 0,\r\n                        price: 0\r\n                    }\r\n                    setList_Todo([...list_order, orderitem])\r\n                    list_order.push(orderitem)\r\n                })\r\n    }\r\n    const  submit = async () => {\r\n        setSumOrder(0)\r\n        setSumTime(0)\r\n        setSumPrice(0)\r\n        if (videoid.trim() === \"\") {\r\n            alert(\"VideoId không để trống!\")\r\n            return\r\n        }\r\n\r\n        if (timebuff < 100) {\r\n            alert(\"Số giờ phải lớn hơn 100!\")\r\n            return\r\n        }\r\n\r\n        if (homerate + searchrate + suggestrate + directrate != 100) {\r\n            alert(\"Tổng nguồn view không đúng!\")\r\n            return\r\n        }\r\n        setShowOrder(false)\r\n        const videoidlist = videoid.split('\\n')\r\n        for (var i = 0; i < videoidlist.length; i++) {\r\n            let video = videoidlist[i]\r\n            await order_video_ver2(video)\r\n            await getUserByToken()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\r\n                    <h5 className=\"modal-title\">{showorder==true?'Bảo hành với DS VideoId hoặc OrderId':'Bảo hành thành công: '+sumorder+' | Giờ: '+sumtime.toPrecision()+'view | Giá: '+sumprice.toPrecision()+'$'}</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\r\n                    <Form>\r\n                        <FormGroup>\r\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\r\n                                Danh sách VideoId hoặc Orderid\r\n                            </Label>\r\n                            <Input style={{minHeight:250}}\r\n                                id=\"list_id\"\r\n                                name=\"list_id\"\r\n                                className=\"form-control form-control-solid\"\r\n                                placeholder={\"1 VideoId hoặc Orderid một dòng...\"}\r\n                                value={videoid}\r\n                                type={\"textarea\"}\r\n                                onChange={(e) => setVideoid(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\r\n                        {/* begin::Table container */}\r\n\r\n                        {\r\n                            list_order.map((item, index) => {\r\n                                if (item.videoid.length >0) return (\r\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\r\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">\r\n                                                            <span className='symbol-label'>\r\n                                                              <img\r\n\r\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\r\n                                                                  className='svg-icon-1'\r\n                                                                  alt=''\r\n                                                              />\r\n                                                            </span>\r\n                                                </div>\r\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\r\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\r\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time} view</div>\r\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\r\n                                                    {item.price.toPrecision()}$\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    </ul>\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* end::Table container */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default BhManualModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\components\\OrderItem\\index.tsx",["5289","5290","5291","5292","5293","5294","5295","5296","5297","5298","5299","5300","5301","5302","5303","5304","5305","5306","5307","5308","5309","5310","5311"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n    const [isHovering, setIsHovering] = useState(false);\r\n    let role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.orderid!\r\n    ) == true) {\r\n            dispatch(actions.deleteOrderRequest(item.tiktok_id.toString().trim(),1))\r\n        }\r\n    }\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                tiktok_id:item.tiktok_id,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\r\n            </td>\r\n            <td>\r\n                    <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5,color:\"white\",}} href=\"#\" className='badge badge-danger'>\r\n                        {item.orderid}\r\n                    </a>\r\n            </td>\r\n            <td>\r\n                <a  target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.tiktok.com/' + item.tiktok_id} className='badge badge-danger'>\r\n                    {item.tiktok_id}\r\n                </a>\r\n                <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order <span style={{color:\"#ffffff\"}}>{item.follower_order}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Start <span style={{color:\"black\"}}>{item.follower_start}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total <span style={{color:\"#000000\"}}>{item.follower_total==null?0:item.follower_total}</span></span>\r\n                    {(item.max_threads>0||item.follower_total>0)&&<span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.follower_total==null?0:item.follower_total))/item.follower_order*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.follower_total==null?0:item.follower_total))/item.follower_order*100))+'%'}</span></span>}\r\n                    {item.max_threads<=0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(20,122,178,0.66)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        Pending</span>\r\n                    }\r\n                </span>\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\r\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\r\n                    {\"Đang lấy dữ liệu\"}\r\n                </span> :\r\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=0?\"#c0e1ce\":\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-dark'>{item.total}/{item.max_threads}</span>\r\n                }\r\n            </td>}\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {item.service}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.insert_date).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insert_date).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //    <img style={{width:20,height:20,marginRight:5,marginBottom:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                  {((Date.now()-item.time_start)/1000/60/60)>=24?((((Date.now()-item.time_start)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.time_start)/1000/60/60)>=1?((Date.now()-item.time_start)/1000/60/60).toFixed(2)+'H':((Date.now()-item.time_start)/1000/60).toFixed(2)+'m'}</span>\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.time_start).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.time_start).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n\r\n            {\r\n                 <td >\r\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </a>\r\n                     {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\r\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\r\n                    </a>}\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktok\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\redux\\OrdersRedux.ts",["5312","5313","5314","5315","5316","5317","5318"],"import { Action } from '@reduxjs/toolkit'\r\nimport { App } from 'app/App'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\r\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\r\nconst sleep = (milliseconds: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  ShowOrdersFilter:'[OrdersFollowersTiktokHistory] Filter',\r\n  RequestOrders: '[OrdersFollowersTiktokHistory] Requested',\r\n  OrdersLoadedSuccess: '[OrdersFollowersTiktokHistory] Loaded succcess',\r\n  OrdersLoadedFail: '[OrdersFollowersTiktokHistory] load fail',\r\n  AddOrderRequest: '[OrdersFollowersTiktokHistory] Add Order Request',\r\n  AddOrderManualRequest: '[OrdersFollowersTiktokHistory] Add Order Manual Request',\r\n  AddOrderSuccess: '[OrdersFollowersTiktokHistory] Add Order Success',\r\n  AddOrdersSuccess: '[OrdersFollowersTiktokHistory] Add Orders Success',\r\n  AddOrderFail: '[OrdersFollowersTiktokHistory] Add Order Fail',\r\n  ShowcurrentOrder: '[OrdersFollowersTiktokHistory] Show Order',\r\n  RequestUpdate: '[OrdersFollowersTiktokHistory] Requested Update',\r\n  UpdateMultiOrderRequest: '[OrdersFollowersTiktokHistory] Update Multi Order Request',\r\n  UpdateSuccess: '[OrdersFollowersTiktokHistory] Update Success',\r\n  UpdateMultiSuccess: '[OrdersFollowersTiktokHistory] Update Multi Success',\r\n  UpdateFail: '[OrdersFollowersTiktokHistory] Update Fail',\r\n  ClearSelected: '[OrdersFollowersTiktokHistory] Clear selected account',\r\n  GroupLoadedRequest: '[OrdersFollowersTiktokHistory] Group Loaded Request',\r\n  GroupLoadedSuccess: '[OrdersFollowersTiktokHistory] Group Loaded Success',\r\n  GroupLoadedFail: '[OrdersFollowersTiktokHistory] Group Loaded Fail',\r\n  GroupAddRequest: '[OrdersFollowersTiktokHistory] GroupAddRequest',\r\n  GroupAddSuccess: '[OrdersFollowersTiktokHistory] Group Add Success',\r\n  GroupAddFail: '[OrdersFollowersTiktokHistory] Group Add Fail',\r\n  GroupDeleteRequest: '[OrdersFollowersTiktokHistory] Group Delete Request',\r\n  GroupDeleteSuccess: '[OrdersFollowersTiktokHistory] Group Delete Success',\r\n  SelectGroup: '[OrdersFollowersTiktokHistory] Select Group',\r\n  DeleteOrderRequest: '[OrdersFollowersTiktokHistory] Delete Order Request',\r\n  DeleteOrderSuccess: '[OrdersFollowersTiktokHistory] Delete Order Success',\r\n  CheckedChange: '[OrdersFollowersTiktokHistory] Checked Change',\r\n  CheckedAllChange: '[OrdersFollowersTiktokHistory] Checked All Change',\r\n}\r\n\r\nconst initialorderstate: Iorderstate = {\r\n  orders: [],\r\n  loading: false,\r\n  adding: false,\r\n  groups: [],\r\n  currentOrder: undefined,\r\n  currentGroup: undefined,\r\n  channel_prior: 0,\r\n  \r\n}\r\n\r\nexport interface Iorderstate {\r\n  orders: OrderModel[]\r\n  loading: boolean\r\n  adding: boolean\r\n  currentOrder?: OrderModel\r\n  groups: Group[]\r\n  currentGroup?: Group\r\n  channel_prior: number\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-orders', whitelist: [] },\r\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestOrders: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.ShowOrdersFilter: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.OrdersLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          orders: action.payload?.orders || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.GroupLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: action.payload?.groups\r\n        }\r\n      }\r\n      case actionTypes.SelectGroup: {\r\n        return {\r\n          ...state,\r\n          currentGroup: action.payload?.group\r\n        }\r\n      }\r\n      case actionTypes.GroupDeleteSuccess: {\r\n        return {\r\n          ...state,\r\n          currentGroup: undefined,\r\n          groups: state.groups.filter((item: Group) => {\r\n            if (item.id === action.payload?.id) {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.OrdersLoadedFail: {\r\n        return {\r\n          ...state,\r\n          orders: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AddOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.AddOrderManualRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.GroupAddSuccess: {\r\n        return {\r\n          ...state,\r\n          groups: state.groups.concat(action.payload?.group)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.order)\r\n        }\r\n      }\r\n      case actionTypes.AddOrdersSuccess: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          orders: state.orders.concat(action.payload?.orders)\r\n        }\r\n      }\r\n      case actionTypes.AddOrderFail: {\r\n        return {\r\n          ...state,\r\n          adding: false,\r\n          message: action.payload?.message\r\n        }\r\n      }\r\n      case actionTypes.ShowcurrentOrder: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentOrder: action.payload?.currentOrder\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          orders:  state.orders.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\r\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\r\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\r\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\r\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\r\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\r\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\r\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\r\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\r\n  requestUpdate: (channel_tiktok: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { channel_tiktok } }),\r\n  updateSuccess: (channel_tiktok: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { channel_tiktok } }),\r\n  updateMultiSuccess: (channel_tiktok: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { channel_tiktok } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\r\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\r\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\r\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\r\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\r\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\r\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\r\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\r\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\r\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\r\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\r\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\r\n    const payload = param.payload.user\r\n    const { data: orders } = yield getListOrder(payload)\r\n    yield put(actions.fulfillorders(orders.channel_tiktok))\r\n  })\r\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\r\n    const payload = param.payload\r\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\r\n    yield put(actions.fulfillorders(orders.channel_tiktok))\r\n  })\r\n\r\n  http://localhost:8080/Fitnees/\r\n\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    const { data: result } = yield updateOrder(param.payload.channel_tiktok)\r\n    if (result && result.channel_tiktok) {\r\n      yield put(actions.updateMultiSuccess(result.channel_tiktok))\r\n    } else {\r\n      yield put(actions.addOrderFail(result.message))\r\n    }\r\n\r\n  })\r\n  \r\n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrderManual(payload)\r\n        if (result && (result.channel_tiktok)) {\r\n            yield put(actions.addOrderSuccess(result.channel_tiktok))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield addOrder(payload)\r\n        if (result && (result.channel||result.channels)) {\r\n          if(payload.channel_id.includes(\"\\n\")){\r\n            console.log(\"------channels------\",result.channels)\r\n            yield put(actions.addOrdersSuccess(result.channels))\r\n          }else{\r\n            yield put(actions.addOrderSuccess(result.channel))\r\n          }\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        }\r\n      \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n        const { data: result } = yield updateOrder(payload)\r\n        if (result && result.channel_tiktok) {\r\n          yield put(actions.updateMultiSuccess(result.channel_tiktok))\r\n        } else {\r\n          yield put(actions.addOrderFail(result.message))\r\n        } \r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.groupName\r\n      const { data: result } = yield addGroup(payload)\r\n      if (result && result.group) {\r\n        yield put(actions.addGroupSuccess(result.group))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.addOrderFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.videoid\r\n      const { data: result } = yield deleteChannel(payload)\r\n      if (result&&result.channel_tiktok!==null) {\r\n        yield put(actions.deleteOrderSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\OrdersPage.tsx",["5319","5320","5321","5322","5323","5324","5325","5326"],"import React, { useEffect, useState } from 'react'\r\nimport { OrderList } from './OrderList'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\r\nimport { OrderModel } from './models/Order'\r\nimport { RootState } from 'setup'\r\nimport { actions } from './redux/OrdersRedux'\r\nimport EditModal from './modals/EditModal'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\n\r\nconst WidgetsPage: React.FC = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const orders: OrderModel[] = useSelector<RootState>(({ orderfollowertiktokhistory }) => orderfollowertiktokhistory.orders, shallowEqual) as OrderModel[] || []\r\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderfollowertiktokhistory }) => orderfollowertiktokhistory.currentOrder, shallowEqual) as OrderModel || undefined\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const [refresh, setRefresh] = useState(true)\r\n  useEffect(() => {\r\n    if(refresh===true){\r\n      if(role.indexOf(\"ROLE_ADMIN\")>=0){\r\n        dispatch(actions.requestOrders(''))\r\n      }else{\r\n        dispatch(actions.requestOrders(user))\r\n      }\r\n    }\r\n    setRefresh(false)\r\n  }, [refresh])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='row gy-5 gx-xl-12'>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <a style={{float:\"right\"}} href='#' onClick={() => {\r\n            setRefresh(true)\r\n          }} >\r\n            <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n          </a>\r\n        </div>\r\n        <div className='col-xl-12' style={{margin:0}}>\r\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WidgetsPage\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\redux\\OrdersCRUD.ts",["5327"],"import axios from 'axios'\r\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\r\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\r\n\r\n\r\n\r\nexport async function getListOrder(user:string) {\r\n  const res:any = await getFunciton(\"channel_tiktok/getOrderFollowerHistory?user=\"+user)\r\n  return res\r\n}\r\n\r\nexport async function getOrderFilter(key:string,user:string) {\r\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\r\n  return res\r\n}\r\n\r\nexport async function updateSetting(channel_prior:number) {\r\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\r\n  return res\r\n}\r\n\r\nexport async function updateOrder(order:OrderModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\r\n  return res\r\n}\r\n\r\n\r\nexport async function addOrder(order:OrderForm) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function addOrderManual(order:OrderFormManual) {\r\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\r\n  return res\r\n}\r\n\r\nexport async function addOrderMulti(order:OrderPost) {\r\n  const res:any = await postWithoutTokenFunciton(\"\",order)\r\n  return res\r\n}\r\nexport async function bhorderv2( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function findorder( videoid:string) {\r\n  const res = await postWithoutTokenFunciton(\"webtraffic/findorder\", {\r\n    videoid:videoid\r\n  })\r\n  return res\r\n}\r\n\r\n\r\n\r\nexport async function addGroup(groupName:string) {\r\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\r\n    name: groupName\r\n  })\r\n  return res\r\n}\r\n\r\nexport async function deleteGroup(id:number) {\r\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\r\n  return res\r\n}\r\n\r\nexport async function deleteChannel(videoid:string) {\r\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\r\n  return res\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\OrderList.tsx",["5328","5329","5330","5331","5332","5333","5334","5335","5336","5337","5338","5339","5340","5341","5342","5343","5344","5345","5346","5347","5348","5349","5350","5351","5352","5353","5354","5355","5356","5357","5358","5359","5360","5361","5362","5363","5364","5365","5366","5367","5368","5369","5370","5371","5372","5373","5374","5375","5376","5377","5378","5379","5380","5381","5382","5383","5384","5385","5386","5387","5388","5389","5390","5391","5392","5393","5394","5395","5396","5397","5398","5399","5400","5401","5402","5403","5404","5405","5406","5407"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderItem from './components/OrderItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\n\r\n\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModel[]\r\n}\r\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    tiktok_id: '',\r\n    orderid:0,\r\n    follower_total: 0,\r\n    follower_start:0,\r\n    follower_end:0,\r\n    insert_date: \"\",\r\n    end_date: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    price:0,\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n\r\n  let role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n      (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n      (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  let sumtimedone=0;\r\n  let sumorder=0;\r\n  let summoney=0;\r\n  let summoneyUS=0;\r\n  let sumvn=0;\r\n  let sumus=0;\r\n\r\n  orders.forEach(item=>{\r\n    sumtimedone=sumtimedone+Math.round(Number(item.follower_total==null?0:item.follower_total))\r\n    sumorder=sumorder+1;\r\n    summoney=summoney+item.price\r\n    if(item.service>600){\r\n      sumvn=sumvn+1;\r\n    }else{\r\n      summoneyUS=summoneyUS+item.price\r\n      sumus=sumus+1;\r\n    }\r\n  })\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n      console.log(list_user)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const addGroup = () => {\r\n    if (groupName.length === 0) {\r\n      alert('vui lòng điền tên nhóm')\r\n      return\r\n    }\r\n\r\n    dispatch(actions.addGroupRequest(groupName))\r\n    setGroupName('')\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  return (\r\n      <div className={`card ${className}`}>\r\n        <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{margin:10}}>\r\n              <div className=\"col-lg-5 col-sm-12 c-order__header\">\r\n                <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Đã xong {totaldordershow}</span> </span>\r\n                <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                  <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng chạy {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>Tổng tiền {useEff<=1?summoney.toFixed(3):totalmoneyshow.toFixed(3)}$ </span> </span>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n                <div style={{float:\"right\",fontWeight:\"bold\"}}>\r\n                  <DatePicker\r\n\r\n                      value={startDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\r\n                      }\r\n                      }\r\n\r\n                  />\r\n                  <DatePicker\r\n                      value={endDate}\r\n                      onChange={(date: React.SetStateAction<Date>) =>{\r\n                        setEndDate(date)\r\n                      }\r\n                      }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              <div style={{width:\"60%\"}}>\r\n                <div>\r\n                  <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                         id=\"note\"\r\n                         name=\"note\"\r\n                         value={key}\r\n                         placeholder=\"Search...\"\r\n                         onChange={(e) => setKey(e.target.value)}\r\n                         type=\"text\"\r\n                  />\r\n                  <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                          onClick={() => {setKeyTrue(1)\r\n                          }}\r\n                          className='btn btn-sm'\r\n                  >\r\n                    Search\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div style={{width:\"40%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Export\r\n                </button>\r\n                {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                    //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                             onChange={(e) => {\r\n                                               setKeyUser(e.target.value)\r\n                                               setKeyUserTrue(1)\r\n                                             }}\r\n                                             className=\"form-control form-control-solid\"\r\n                                             type=\"select\"\r\n                                             value={keyuser}\r\n                >\r\n                  {\r\n                    list_user.map((item, index) => {\r\n                      return(\r\n                          <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                            {item.user}</option>)\r\n                    })\r\n                  }\r\n\r\n                </Input>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"page-header__content\">\r\n            <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n              {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {Export(list_orderhistory,nameExport)\r\n                        }}\r\n                        className='btn btn-google'\r\n                >\r\n                  Đối soát\r\n                </button>\r\n                <button style={{height:40,margin:10,float:\"right\"}}\r\n                        onClick={() => {\r\n                          setShowAddManual(true)\r\n                        }}\r\n                        className='btn btn-success'\r\n                >\r\n                  Tra cứu nhanh\r\n                </button>\r\n              </div>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='card-body py-3'>\r\n          <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n              {/* begin::Table head */}\r\n              <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Check</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              {/* end::Table head */}\r\n              {/* begin::Table body */}\r\n              <tbody>\r\n              {orders &&\r\n                  orders.map((order: OrderModel, index: number) => {\r\n                    if (keyusertrue==0&&keytrue==0&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==0){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((keydatestart<=order.end_date&&order.end_date<=keydateend+24*60*60*1000-1)&&keytrue==0&&keyusertrue==0&&keydate==1){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.end_date&&order.end_date<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }else if((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                        &&keytrue==1&&keyusertrue==0&&keydate==1&&\r\n                        (keydatestart<=order.end_date&&order.end_date<=keydateend+24*60*60*1000-1)\r\n                    ){\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==0) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    else if(((key.indexOf(order.tiktok_id)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || key.indexOf(order.orderid.toString()) >=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                        &&keytrue==1&&keyusertrue==1&&keydate==1&&\r\n                        (keydatestart<=order.end_date&&order.end_date<=keydateend+24*60*60*1000-1)) {\r\n                      if(index===0){\r\n                        totaldorder=1\r\n                        totalmoney=order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n                      }else{\r\n                        totaldorder=totaldorder+1\r\n                        totalmoney=totalmoney+order.price\r\n                        totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                      }\r\n                      let orderitem = {\r\n                        id: totaldorder,\r\n                        orderid:order.orderid,\r\n                        tiktok_id: order.tiktok_id,\r\n                        follower_start:order.follower_start,\r\n                        follower_end:order.follower_end,\r\n                        follower_total: order.follower_total,\r\n                        insert_date: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                        end_date: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                        cancel:order.cancel,\r\n                        user:order.user,\r\n                        note:order.note,\r\n                        price:order.price\r\n\r\n                      }\r\n                      list_orderhistory.push(orderitem)\r\n                      return (\r\n                          <OrderItem\r\n                              index={index}\r\n                              showEdit={role === 'ROLE_ADMIN'}\r\n                              key={order.orderid.toString()+index.toString()}\r\n                              item={order}\r\n                          />\r\n                      )\r\n                    }\r\n                    return null\r\n                  })}\r\n              </tbody>\r\n              {/* end::Table body */}\r\n            </table>\r\n            {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n              <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>}\r\n          </div>\r\n          {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        {showAdd && (\r\n            <AddModal\r\n                show={true}\r\n                close={() => {\r\n                  setShowAdd(false)\r\n                }}\r\n            />\r\n        )}\r\n\r\n        <EditMulti\r\n            show={showEditMulti}\r\n            close={() => {\r\n              setShowEditMulti(false)\r\n            }}\r\n        />\r\n        <AddManualModal\r\n            show={showAddManual}\r\n            close={() => {\r\n              setShowAddManual(false)\r\n            }}\r\n        />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport {OrderList}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\EditModal\\index.tsx",["5408","5409","5410","5411","5412","5413","5414","5415","5416","5417","5418","5419","5420","5421","5422","5423","5424"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\AddManualModal\\index.tsx",["5425","5426","5427","5428","5429","5430","5431","5432","5433","5434","5435","5436","5437","5438","5439"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\AddModal\\index.tsx",["5440","5441","5442","5443","5444","5445","5446","5447","5448","5449","5450","5451","5452","5453","5454","5455","5456"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\modals\\EditMulti\\index.tsx",["5457","5458","5459","5460","5461","5462","5463","5464","5465","5466","5467","5468","5469","5470","5471","5472","5473","5474","5475"],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderfollowertiktokhistory\\components\\OrderItem\\index.tsx",["5476","5477","5478","5479","5480","5481","5482","5483","5484","5485","5486","5487","5488","5489","5490","5491","5492","5493"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModel } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModel,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const clickUpdateHandler = () => {\r\n        dispatch(actions.showcurrentOrder(item))\r\n    }\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100}}>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.tiktok.com/' + item.tiktok_id} className='badge badge-danger'>\r\n                    {item.tiktok_id}\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#ffffff\"}}>{item.follower_order}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"black\"}}>{item.follower_start}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#000000\"}}>{item.follower_total==null?0:item.follower_total}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.follower_total==null?0:item.follower_total))/item.follower_order*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.follower_total==null?0:item.follower_total))/item.follower_order*100))+'%'}</span></span>\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.time_start!=0?\"#03d96e\":\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        {item.time_start!=0?(((item.end_date-item.time_start)/1000/60/60)>=24?((((item.end_date-item.time_start)/1000/60/60/24)).toFixed(2)+'D'):((item.end_date-item.time_start)/1000/60/60)>=1?((item.end_date-item.time_start)/1000/60/60).toFixed(2)+'H':((item.end_date-item.time_start)/1000/60).toFixed(2)+'m'):'C'}</span>\r\n                    <br/>\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                {//{item.service<600?<img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/united-states.svg')} alt='metronic' />:\r\n                    //   <img style={{width:20,height:20,marginRight:5,borderImage:\"-moz-initial\",float:\"left\",borderRadius:3}} src={toAbsoluteUrl('/media/flags/vietnam.svg')} alt='metronic' />}\r\n                }\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.insert_date).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insert_date).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n            </td>\r\n            <td >\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.time_start!=0?(new Date(item.time_start).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.time_start).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{new Date(item.end_date).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.end_date).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td >\r\n                {(item.follower_end>-1&&item.follower_end!=null)&&<span  style={{color:'white',fontSize:11,backgroundColor:item.follower_end>=(item.follower_start+item.follower_order)?\"rgba(16,128,201,0.66)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.follower_end}</span>}\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.time_check_refill>0?(new Date(item.time_check_refill).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.time_check_refill).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n            </td>}\r\n            <td>\r\n               <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'normal',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\AccountPage.tsx",["5494","5495","5496","5497","5498","5499","5500","5501","5502"],"import React,{useEffect,useState} from 'react'\r\nimport {UserList} from './UserList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from './redux/AccountRedux'\r\nimport {AccountModel} from 'app/modules/vpstiktok/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from './modals/EditModal'\r\nimport DeviceModal  from './modals/DeviceModal'\r\nimport {Input} from \"reactstrap\";\r\nimport DeviceShow from \"./modals/DeviceModal\";\r\nconst AccountPage: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [vpstype, setvpstype] = useState('')\r\n  const accounts: AccountModel[] = useSelector<RootState>(({vpstiktok}) => vpstiktok.accounts, shallowEqual) as AccountModel[] || []\r\n  const currentAccount: AccountModel = useSelector<RootState>(({vpstiktok}) => vpstiktok.currentAccount, shallowEqual) as AccountModel || undefined\r\n  const currentEditAccount: AccountModel = useSelector<RootState>(({vpstiktok}) => vpstiktok.currentEditAccount, shallowEqual) as AccountModel || undefined\r\n    const [refresh, setRefresh] = useState(true)\r\n let vps=currentAccount?.vps\r\n  useEffect(() => {\r\n      if(refresh===true){\r\n          dispatch(actions.requestAccounts())\r\n          vps=currentAccount?.vps\r\n      }\r\n    setRefresh(false)\r\n  },[refresh]);\r\n\r\n\r\n  return (\r\n      <>\r\n        <div className='row gy-5 gx-xl-12'>\r\n            <div className='col-xl-12' style={{margin:0}}>\r\n                <a style={{float:\"right\"}} href='#' onClick={() => {\r\n                    setRefresh(true)\r\n                }} >\r\n                    <img style={{width:32,height:32}} src='/media/dowload/refresh-cw-alt-1-svgrepo-com.svg' className='svg-icon-6' />\r\n                </a>\r\n            </div>\r\n          <div className='col-xl-12' style={{margin:0}}>\r\n            <UserList accounts={vpstype.length==0?accounts:(accounts.filter(vps=>vps.vps.search(vpstype)!=-1))} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n          </div>\r\n              {\r\n                  currentAccount&&<DeviceShow  key={currentAccount?.vps} vps={currentAccount?.vps} />\r\n            }\r\n            {\r\n                currentEditAccount&&<EditModal key={currentEditAccount?.vps} item={currentEditAccount} />\r\n            }\r\n\r\n        </div>\r\n\r\n      </>\r\n  )\r\n}\r\nexport default AccountPage","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\index.ts",[],"C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\redux\\AccountRedux.ts",["5503","5504","5505","5506"],"import { Action } from '@reduxjs/toolkit'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { put, takeLatest } from 'redux-saga/effects'\r\nimport { AccountModel,AccountForm,DeviceModel } from '../models/Account'\r\nimport {getListAccount,getListDevicesByVPS, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\r\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\r\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\r\nexport interface ActionWithPayload<T> extends Action {\r\n  payload?: T\r\n}\r\n\r\nexport const actionTypes = {\r\n  RequestAccounts: '[VpsTikTok] Requested',\r\n  RequestDevicesByVPS: '[VpsTikTok] Requested Devices',\r\n  DevicesByVPSLoadedSuccess: '[VpsTikTok] Loaded Devices succcess',\r\n  AccountsLoadedSuccess: '[VpsTikTok] Loaded succcess',\r\n  DevicesByVPSLoadedFail: '[VpsTikTok] load Devices fail',\r\n  AccountsLoadedFail: '[VpsTikTok] load fail',\r\n  ShowCurrentAccount: '[VpsTikTok] Show Account',\r\n  ShowCurrentEditAccount: '[VpsTikTok] Show Edits Accounts',\r\n  RequestUpdate: '[VpsTikTok] Requested Update',\r\n  UpdateSuccess: '[VpsTikTok] Update Success',\r\n  UpdateFail: '[VpsTikTok] Update Fail',\r\n  ClearSelected:'[VpsTikTok] Clear selected account',\r\n  ClearSelectedEdit:'[VpsTikTok] Clear selected edit accounts',\r\n  DeleteVpsRequest: '[VpsTikTok] Delete Account Request',\r\n  DeleteVpsSuccess: '[VpsTikTok] Delete Account Success',\r\n  DeleteMultiVpsRequest: '[VpsTikTok] Delete Account Request',\r\n  DeleteMultiVpsSuccess: '[VpsTikTok] Delete Account Success',\r\n  CheckedChange: '[VpsTikTok] Checked Change',\r\n  CheckedDeviceChange: '[VpsTikTok] Checked Device Change',\r\n  CheckedAllChange: '[VpsTikTok] Checked All Change',\r\n  CheckedDevicesAllChange: '[VpsTikTok] Checked Devices All Change',\r\n  UpdateMultiOrderRequest: '[VpsTikTok] Update Multi Account Request',\r\n  UpdateRestartMultiOrderRequest: '[VpsTikTok] Update Restart Multi Account Request',\r\n  UpdateMultiSuccess: '[VpsTikTok] Update Multi Success',\r\n}\r\n\r\nconst initialAccountState: IAccountState = {\r\n  accounts: [],\r\n  devices: [],\r\n  loading: false,\r\n  adding:false,\r\n  currentAccount:undefined,\r\n  currentEditAccount:undefined,\r\n  currentDevice:undefined\r\n}\r\n\r\nexport interface IAccountState {\r\n  devices:DeviceModel[]\r\n  accounts: AccountModel[]\r\n  loading: boolean\r\n  adding:boolean\r\n  currentAccount?:AccountModel\r\n  currentEditAccount?:AccountModel\r\n  currentDevice?:DeviceModel\r\n}\r\n\r\nexport const reducer = persistReducer(\r\n  { storage, key: 'v1-accounts', whitelist: [] },\r\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\r\n    switch (action.type) {\r\n      case actionTypes.RequestAccounts: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.RequestDevicesByVPS: {\r\n        return {\r\n          ...state,\r\n          devices: [],\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: action.payload?.accounts || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.AccountsLoadedFail: {\r\n        return {\r\n          ...state,\r\n          accounts: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.DevicesByVPSLoadedSuccess: {\r\n        return {\r\n          ...state,\r\n          devices: action.payload?.devices || [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.DevicesByVPSLoadedFail: {\r\n        return {\r\n          ...state,\r\n          devices: [],\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.RequestUpdate: {\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateSuccess: {\r\n\r\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\r\n          if(item.vps===action.payload?.account?.vps){\r\n            return action.payload?.account\r\n          }else {\r\n            return item\r\n          }\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remapAccounts,\r\n          loading: false,\r\n          currentEditAccount: undefined\r\n        }\r\n      }\r\n      case actionTypes.DeleteVpsSuccess: {\r\n        return {\r\n          ...state,\r\n          accounts: state.accounts.filter((item: AccountModel) => {\r\n            if (action.payload?.vps.indexOf(item.vps)>=0)  {\r\n              return false\r\n            }\r\n            return true\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateFail: {\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentAccount: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n      case actionTypes.ShowCurrentEditAccount: {\r\n        return {\r\n          ...state,\r\n          currentEditAccount: action.payload?.currentEditAccount\r\n        }\r\n      }\r\n      case actionTypes.ClearSelected: {\r\n        return {\r\n          ...state,\r\n          currentAccount: action.payload?.currentAccount\r\n        }\r\n      }\r\n    case actionTypes.ClearSelectedEdit: {\r\n        return {\r\n          ...state,\r\n          currentEditAccount: action.payload?.currentEditAccount\r\n        }\r\n      }\r\n\r\n      case actionTypes.CheckedChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            if(item.vps===action.payload?.data?.vps){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedDeviceChange: {\r\n        return {\r\n          ...state,\r\n          devices:  state.devices.map(item=>{\r\n            if(item.device_id===action.payload?.data?.device_id){\r\n              return {\r\n                ...item,\r\n                checked:action?.payload?.data?.checked\r\n              }\r\n            }\r\n            return item\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedAllChange: {\r\n        return {\r\n          ...state,\r\n          accounts:  state.accounts.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.CheckedDevicesAllChange: {\r\n        return {\r\n          ...state,\r\n          devices:  state.devices.map(item=>{\r\n            return {\r\n              ...item,\r\n              checked:action?.payload?.checked\r\n            }\r\n          })\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateRestartMultiOrderRequest: {\r\n        return {\r\n          ...state,\r\n          adding: true\r\n        }\r\n      }\r\n      case actionTypes.UpdateMultiSuccess: {\r\n        const remaporders = state.accounts.map((item: AccountForm) => {\r\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\r\n            if(_item.vps===item.vps){\r\n              return true\r\n            }\r\n            return false\r\n          })\r\n          if(findItem){\r\n            return findItem\r\n          }\r\n          return item\r\n        })\r\n        return {\r\n          ...state,\r\n          accounts: remaporders,\r\n          loading: false,\r\n          adding: false,\r\n          currentAccount: undefined\r\n        }\r\n      }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n)\r\n\r\nexport const actions = {\r\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\r\n  requestDevicesByVPS: (vps:string) => ({ type: actionTypes.RequestDevicesByVPS,payload:{vps} }),\r\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\r\n  fulfillDevicesByVPS: (devices: DeviceModel[]) => ({ type: actionTypes.DevicesByVPSLoadedSuccess, payload: { devices } }),\r\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\r\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\r\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\r\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\r\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\r\n  showCurrentEditAccount: (currentEditAccount: AccountModel) => ({ type: actionTypes.ShowCurrentEditAccount, payload: { currentEditAccount } }),\r\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\r\n  clearCurrentAccountEdit: () => ({ type: actionTypes.ClearSelectedEdit}),\r\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\r\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\r\n  checkedChange: (data:{vps:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\r\n  checkedDeviceChange: (data:{device_id:string,checked:boolean}) => ({ type: actionTypes.CheckedDeviceChange, payload: { data } }),\r\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\r\n  checkedDevicesAllChange: (checked:boolean) => ({ type: actionTypes.CheckedDevicesAllChange, payload: { checked } }),\r\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\r\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\r\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\r\n}\r\n\r\nexport function* saga() {\r\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\r\n    const {data: accounts} = yield getListAccount()\r\n    yield put(actions.fulfillAccounts(accounts.accounts))\r\n  })\r\n  yield takeLatest(actionTypes.RequestDevicesByVPS, function* userRequested(param: any) {\r\n    const payload = param.payload.vps\r\n    const {data: devices} = yield getListDevicesByVPS(payload)\r\n    yield put(actions.fulfillDevicesByVPS(devices.devices))\r\n  })\r\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\r\n    console.log(\"------update account param-----\",param.payload.account)\r\n    const {data: account} = yield updateAccount(param.payload.account)\r\n    console.log(\"------update account res-----\",account.account)\r\n    yield put(actions.updateSuccess(account.account))\r\n  })\r\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\r\n    try {\r\n      const payload = param.payload.vps\r\n      const { data: result } = yield deleteVps(payload)\r\n      if (result&&result.vps!==null) {\r\n        yield put(actions.deleteVpsSuccess(payload))\r\n      } else {\r\n\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  })\r\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateAccount(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\r\n    const payload = param.payload.data\r\n    try {\r\n      const { data: result } = yield updateResetVPS(payload)\r\n      if (result && result.accounts) {\r\n        yield put(actions.updateMultiSuccess(result.accounts))\r\n      } else {\r\n        yield put(actions.updateFail(result.message))\r\n      }\r\n    } catch (error) {\r\n      yield put(actions.updateFail(\"\"))\r\n    }\r\n  })\r\n\r\n}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\UserList.tsx",["5507","5508","5509","5510","5511","5512","5513","5514","5515","5516","5517","5518","5519","5520","5521","5522","5523","5524","5525","5526","5527","5528","5529","5530","5531","5532"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/vpstiktok/models/Account'\r\n\r\nimport UserItem from './components/UserItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport EditMulti from \"./modals/EditMulti\";\r\nimport RestartMulti from \"./modals/RestartMulti\";\r\nimport {Input} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport {randomInt} from \"crypto\";\r\ntype Props = {\r\n  className: string,\r\n  accounts: AccountModel[]\r\n}\r\n\r\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const [statusVNTrue, setstatusVNTrue] = useState(0)\r\n  const [Checked, setChecked] = useState(false)\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const [list_vps,setList_VPS]=useState([{\r\n    id:0,\r\n    vps:\"\",\r\n  },])\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n\r\n  var icount=0;\r\n  const isShowFixMulti = accounts.find((item) => {\r\n\r\n    if (item.checked) {\r\n      icount=icount+1\r\n    }\r\n    if(icount>=2){\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  let total_acc=0;\r\n  let total_acc_live=0;\r\n  let total_acc_follower=0;\r\n  let total_tool_warning=0;\r\n  let [totalvps, setTotalVps] = useState(0)\r\n  let [totaldvpsshow, setTotalVpsShow] = useState(0)\r\n  for(let i=0;i<accounts.length;i++){\r\n    if(((Date.now()-accounts[i].timegettask)/1000/60)>30&&accounts[i].timegettask!=0){\r\n      total_tool_warning=total_tool_warning+1;\r\n    }\r\n    total_acc=total_acc+accounts[i].acccount;\r\n    total_acc_live=total_acc_live+accounts[i].acccountlive;\r\n    total_acc_follower=total_acc_follower+accounts[i].follower;\r\n  }\r\n  async function getcounts(){\r\n    const requestUrl = API_URL+'sub/countgmailslive';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {counts}=responseJson;\r\n    settotal_user(counts);\r\n  }\r\n  async function getcountsbyendtrial(){\r\n    const requestUrl = API_URL+'sub/sumgmails';\r\n    const response= await fetch(requestUrl,{\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson= await  response.json();\r\n    const {counts}=responseJson;\r\n    settotal_user_endtrial(counts);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(accounts.length!=0){\r\n      setLoading(false)\r\n    }\r\n    setList_VPS([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldvpsshow=totalvps\r\n    setTotalVpsShow(totaldvpsshow)\r\n    setTotalVps(0)\r\n    if(useEff<=1){\r\n      getcountsbyendtrial();\r\n      getcounts();\r\n    }\r\n\r\n  },[keytrue,key,keystatus,vpstpye,accounts.length,,]);\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    accounts.forEach(item=>{\r\n      const myElem = list_vps.find(value => value.vps===item.vps)\r\n      if(myElem && item.checked){\r\n        arr.push(item.vps)\r\n      }\r\n    })\r\n    const vps=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" VPS!\") == true) {\r\n      dispatch(actions.deleteVpsRequest(vps))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-8 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>{totaldvpsshow} vps </span>\r\n              <span className='badge badge-warning' style={{ color:'white',margin:4,backgroundColor:\"rgba(220,133,18,0.97)\"}}>Warning {total_tool_warning}</span>\r\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"rgba(187,11,11,0.97)\"}}>Users {total_acc}</span>\r\n              <span className='badge badge-secondary' style={{ color:'black',margin:4,backgroundColor:\"#ffffff\"}}>Live {total_acc_live} </span>\r\n              <span className='badge badge-danger' style={{ color:'white',margin:4,backgroundColor:\"#4d4c4b\"}}>Die {total_acc-total_acc_live} </span>\r\n              <span className='badge badge-danger' style={{ color:'white',margin:4,backgroundColor:\"rgba(20,122,178,0.66)\"}}>Follower {total_acc_follower} </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              {isShowFixMulti && (\r\n                  <div>\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowEditMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Chỉnh sửa\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowRestartMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Restart\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={()=>clickDeleteHandler()}\r\n                            className='btn btn-light'>\r\n                      Xóa VPS\r\n                    </button>\r\n                  </div>\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setKeyStatus(e.target.value)\r\n                                             setKeyStatusTrue(1)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={keystatus}\r\n              >\r\n                <option key={'all'} value={'all'}>All</option>\r\n                <option key={'die'} value={'die'}>Die</option>\r\n                <option key={'live'} value={'live'}>Live</option>\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='w-5px'>STT</th>\r\n                <th className='min-w-100px '>VPS</th>\r\n                <th className='min-w-100px'>VPS Option</th>\r\n                <th className='min-w-100px'>Trạng thái</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\r\n                    if (keystatustrue==0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <UserItem key={item.id} item={item} index={index} />\r\n                    }else if((item.vps.indexOf(key)>=0  || item.vpsoption.indexOf(key)>=0)&&keystatustrue==0&&keytrue==1){\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <UserItem key={item.id} item={item} index={index} />\r\n                    }else if(keystatustrue==1&&keytrue==0){\r\n                        if(keystatus.indexOf(\"all\")>=0){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <UserItem key={item.id} item={item} index={index} />\r\n                        }\r\n                    }else if(keystatustrue==1&&keytrue==1){\r\n                      if(keystatus.indexOf(\"all\")>=0&&(item.vps.indexOf(key)>=0  || item.vpsoption.indexOf(key)>=0)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }else if((item.vps.indexOf(key)>=0  || item.vpsoption.indexOf(key)>=0)&&keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0)&&keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <UserItem key={item.id} item={item} index={index} />\r\n                      }\r\n                    }\r\n                  })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      <EditMulti\r\n          list_vps={list_vps}\r\n          show={showEditMulti}\r\n          close={() => {\r\n            setShowEditMulti(false)\r\n          }}\r\n      />\r\n      <RestartMulti\r\n          list_vps={list_vps}\r\n          show={showRestartMulti}\r\n          close={() => {\r\n            setShowRestartMulti(false)\r\n          }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport  { UserList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\redux\\AccountCRUD.ts",["5533"],"import axios from 'axios'\r\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\r\nimport { AccountModel } from '../models/Account'\r\n\r\n\r\n\r\nexport async function getListAccount() {\r\n  const res:any = await getFunciton(\"vps_tiktok/listVPS\")\r\n  return res\r\n}\r\nexport async function getListDevicesByVPS(vps:string) {\r\n  const res:any = await getFunciton(\"vps_tiktok/getListDevicesByVPS?vps=\"+vps.trim())\r\n  return res\r\n}\r\n\r\n\r\nexport async function updateAccount(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"vps_tiktok/update\",account)\r\n  return res\r\n}\r\n\r\nexport async function updateResetVPS(account:AccountModel) {\r\n  const res:any = await postWithoutTokenFunciton(\"vps_tiktok/updaterestart\",account)\r\n  return res\r\n}\r\n\r\nexport async function deleteVps(vps:string) {\r\n  const res:any = await deleteFunciton(\"/vps_tiktok/delete?vps=\"+vps)\r\n  return res\r\n}\r\n\r\nexport async function allAccount() {\r\n  const res:any = await getFunciton(\"/gmails/countgmails\")\r\n  return res\r\n}","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\EditModal\\index.tsx",["5534","5535","5536","5537","5538","5539","5540","5541","5542","5543","5544","5545","5546","5547","5548","5549","5550","5551","5552","5553","5554","5555"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/vpstiktok/models/Account'\r\nimport { useDispatch } from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\n\r\n\r\n\r\ntype Props = {\r\n    item: AccountModel\r\n}\r\nconst EditModal: React.FC<Props> = ({ item }) => {\r\n    const dispatch = useDispatch()\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n    const [vpsoption, setvpsoption] = useState(item.vpsoption)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(item.get_account)\r\n    const [threads, setthreads] = useState(item.threads)\r\n    const [state, setstate] = useState(item.state)\r\n    const [ext, setext] = useState(item.ext)\r\n    const [cmt, setcmt] = useState(item.cmt)\r\n    const [running, setrunning] = useState(item.running)\r\n    const [live, setlive] = useState(item.live)\r\n    const [proxy, setproxy] = useState(item.proxy)\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'vps_tiktok/resetrunningaccbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'vps_tiktok/resetrunningacccmtbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccountEdit())\r\n    }\r\n    const updateUser = () => {\r\n        if(vpsreset==3){\r\n            resetrunningacc(item.vps.trim())\r\n        }\r\n        dispatch(actions.requestUpdate({\r\n            ...item,\r\n            vpsoption:vpsoption,\r\n            threads:threads,\r\n            vpsreset:vpsreset,\r\n            live:live,\r\n            running:running,\r\n            state:state,\r\n            proxy:proxy,\r\n        }))\r\n    }\r\n    const handleChange = (e:any) => {\r\n        setthreads(parseInt(e.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal isOpen={true}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update cho VPS IP:  {item?.vps}</h3>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsoption}\r\n                        >\r\n                            <option key={0} value={\"Tiktok_Pending\"}>\r\n                                {\"PENDING\"}\r\n                            </option>\r\n                            <option key={1} value={\"tiktok\"}>\r\n                                {\"TIKTOK\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart & DelAcc\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\EditMulti\\index.tsx",["5556","5557","5558","5559","5560","5561","5562","5563","5564","5565","5566","5567","5568","5569","5570","5571","5572","5573","5574","5575","5576","5577","5578","5579"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel,OrderModelChecked } from 'app/modules/vpstiktok/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\nimport {RootState} from \"../../../../../setup\";\r\n\r\n\r\n\r\ntype Props = {\r\n    list_vps:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst EditMulti: React.FC<Props> = ({list_vps, show,close }) => {\r\n    //console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ vpstiktok }) => vpstiktok.adding, shallowEqual) as boolean || false\r\n    const accounts: AccountModel[] = useSelector<RootState>(({ vpstiktok }) => vpstiktok.accounts, shallowEqual) as AccountModel[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n\r\n    const [vpsoption, setvpsoption] = useState('sub')\r\n    const [threads, setthreads] = useState(2000)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(0)\r\n    const [ext, setext] = useState(1)\r\n    const [cmt, setcmt] = useState(1)\r\n    const [proxy, setproxy] = useState(1)\r\n    const [running, setrunning] = useState(10)\r\n    const [live, setlive] = useState(5)\r\n    const [state, setstate] = useState(5)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'vps_tiktok/resetrunningaccbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'vps_tiktok/resetrunningacccmtbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        accounts.forEach(item=>{\r\n            const myElem = list_vps.find(value => value.vps===item.vps)\r\n            if(myElem && item.checked){\r\n                arr.push(item.vps)\r\n            }\r\n        })\r\n        if(vpsreset==3){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n            }\r\n        }\r\n        console.log(accounts)\r\n        const vps=arr.join('\\n')\r\n\r\n        dispatch(actions.editMultiOrderRequest({\r\n            vps,\r\n            vpsoption,\r\n            vpsreset,\r\n            threads,\r\n            get_account,\r\n            ext,\r\n            running,\r\n            state,\r\n            live,\r\n            proxy\r\n        }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n\r\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsoption(e.target.value)}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsoption}\r\n                        >\r\n                            <option key={0} value={\"Tiktok_Pending\"}>\r\n                                {\"PENDING\"}\r\n                            </option>\r\n                            <option key={1} value={\"tiktok\"}>\r\n                                {\"TIKTOK\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart & DelAcc\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" disabled={adding}  style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn\">Lưu thông tin mới</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\RestartMulti\\index.tsx",["5580","5581","5582","5583","5584","5585","5586","5587","5588","5589","5590","5591","5592","5593","5594","5595","5596","5597","5598","5599","5600","5601","5602","5603","5604","5605","5606"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel,OrderModelChecked } from 'app/modules/vpstiktok/models/Account'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/AccountRedux'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport {\r\n    Button, Modal, ModalFooter,\r\n    ModalHeader, ModalBody, Input\r\n} from \"reactstrap\"\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {Group, OrderModel} from \"../../../orders/models/Order\";\r\n\r\n\r\n\r\ntype Props = {\r\n    list_vps:OrderModelChecked[],\r\n    show: boolean\r\n    close: () => void\r\n}\r\nconst RestartMulti: React.FC<Props> = ({list_vps, show,close }) => {\r\n    //console.log(\"------item------\", item)\r\n    const dispatch = useDispatch()\r\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\r\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\r\n    const adding: boolean = useSelector<RootState>(({ vpstiktok }) => vpstiktok.adding, shallowEqual) as boolean || false\r\n    const accounts: AccountModel[] = useSelector<RootState>(({ vpstiktok }) => vpstiktok.accounts, shallowEqual) as AccountModel[] || []\r\n    const API_URL = process.env.REACT_APP_API_URL\r\n\r\n    const [vpsoption, setvpsoption] = useState('Pending')\r\n    const [threads, setthreads] = useState(2000)\r\n    const [vpsreset, setvpsreset] = useState(0)\r\n    const [get_account, setget_account] = useState(0)\r\n    const [ext, setext] = useState(1)\r\n    const [cmt, setcmt] = useState(1)\r\n    const [proxy, setproxy] = useState(1)\r\n    const [running, setrunning] = useState(10)\r\n    const [live, setlive] = useState(5)\r\n    const [state, setstate] = useState(5)\r\n    const [list_geo,setList_Geo]=useState([{\r\n        id:\"0000000000\",\r\n        geo:\"Pending\"\r\n    },])\r\n    let [useEff, setuseEff] = useState(0)\r\n    const dismissModal = () => {\r\n        dispatch(actions.clearCurrentAccount())\r\n    }\r\n    async function getallgeo() {\r\n        let  requestUrl = API_URL+'servive/getallgeo';\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {geo} = responseJson;\r\n        let arrlist =geo.split(',');\r\n        for(var i=0;i<arrlist.length;i++){\r\n            let orderitem = {\r\n                id: randomString(10),\r\n                geo: arrlist[i]\r\n            }\r\n            setList_Geo([...list_geo, orderitem])\r\n            list_geo.push(orderitem)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        useEff=1\r\n        getallgeo()\r\n    }, [useEff=0])\r\n    async function resetrunningacc(vps:string) {\r\n        let  requestUrl = API_URL+'vps_tiktok/resetrunningaccbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    async function resetrunningacccmt(vps:string) {\r\n        let  requestUrl = API_URL+'vps_tiktok/resetrunningacccmtbyvps?vps='+vps;\r\n        const response = await fetch(requestUrl, {\r\n            method: 'get',\r\n            headers: new Headers({\r\n                'Authorization': '1',\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n        const responseJson = await response.json();\r\n        const {status} = responseJson;\r\n        return status\r\n    }\r\n    const submit = () => {\r\n        const arr:string[]=[]\r\n        accounts.forEach(item=>{\r\n            const myElem = list_vps.find(value => value.vps===item.vps)\r\n            if(myElem && item.checked){\r\n                arr.push(item.vps)\r\n            }\r\n        })\r\n        if(vpsreset==3){\r\n            for(var i=0;i<arr.length;i++){\r\n                resetrunningacc(arr[i].trim())\r\n            }\r\n        }\r\n        const vps=arr.join('\\n')\r\n\r\n        dispatch(actions.editRestartMultiOrderRequest({\r\n            vps,\r\n            vpsoption,\r\n            vpsreset,\r\n            threads,\r\n            get_account,\r\n            ext,\r\n            running,\r\n            state,\r\n            live,\r\n            proxy\r\n        }))\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (!adding) {\r\n            close()\r\n        }\r\n    }, [adding])\r\n\r\n    return (\r\n        <Modal isOpen={show}\r\n            modalTransition={{ timeout: 500 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\r\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\r\n                        <span className=\"svg-icon svg-icon-2x\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\r\n                    <div className=\"input-group mb-5\">\r\n                        <Input\r\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\r\n                            className=\"form-control form-control-solid\"\r\n                            type=\"select\"\r\n                            style={{fontWeight:'bold'}}\r\n                            value={vpsreset}\r\n                        >\r\n                            <option key={0} value={0}>\r\n                                {\"Không\"}\r\n                            </option>\r\n                            <option key={1} value={1}>\r\n                                {\"Restart\"}\r\n                            </option>\r\n                            <option key={2} value={2}>\r\n                                {\"Restart & DelAcc\"}\r\n                            </option>\r\n                        </Input>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\r\n                    <button type=\"button\" disabled={adding} style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn btn-primary\">Lưu thông tin mới</button>\r\n                </div>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RestartMulti","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\components\\UserItem\\index.tsx",["5607","5608","5609","5610","5611","5612","5613","5614","5615","5616","5617","5618","5619","5620","5621"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { AccountModel } from 'app/modules/vpstiktok/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: AccountModel,\r\n    index:number\r\n}\r\n\r\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    const clickEditHandler =()=>{\r\n        dispatch(actions.showCurrentEditAccount(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.vps!) == true) {\r\n            dispatch(actions.deleteVpsRequest(item.vps))\r\n        }\r\n    }\r\n    return (\r\n\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChange({\r\n                                vps:item.vps,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                         />\r\n                </div>\r\n            </td>\r\n            <td className='w-25px'>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <div className='d-flex align-items-center'>\r\n                    <div className='d-flex justify-content-start flex-column'>\r\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\r\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"black\"}}>\r\n                                {item.vps}\r\n                                </text>\r\n                            </span>\r\n                            {item.timecheck!=null&&item.timegettask<item.timecheck&&<span style={{marginRight:2,backgroundColor:round((Date.now()-item.timecheck)/1000/60)<10?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\r\n                            <text style={{fontSize:11,color:\"white\"}}>\r\n                                    {((Date.now()-item.timecheck)/1000/60/60)>=24?((((Date.now()-item.timecheck)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timecheck)/1000/60/60)>=1?((Date.now()-item.timecheck)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timecheck)/1000/60).toFixed(0)+'m'}\r\n                                </text>\r\n                            </span>}\r\n                            {item.timegettask!=null&&item.timegettask>=item.timecheck&&<span style={{marginRight:2,backgroundColor:round((Date.now()-item.timegettask)/1000/60)<10?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\r\n                            <text style={{fontSize:11,color:\"white\"}}>\r\n                                    {((Date.now()-item.timegettask)/1000/60/60)>=24?((((Date.now()-item.timegettask)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timegettask)/1000/60/60)>=1?((Date.now()-item.timegettask)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timegettask)/1000/60).toFixed(0)+'m'}\r\n                                </text>\r\n                            </span>}\r\n                            {<button\r\n                                onClick={()=>clickHandler()}\r\n                                className='btn btn-icon'\r\n                            >\r\n                                <KTSVG path='/media/icons/duotune/general/gen019.svg' className='svg-icon-3' />\r\n                            </button>}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginRight:2, backgroundColor:item.vpsoption=='Tiktok_Pending'?'rgba(9,9,9,0.68)':'rgba(218,30,30,0.97)'}}>\r\n                    <text >\r\n                    {item.vpsoption=='Tiktok_Pending'?'Pending'.toUpperCase():item.vpsoption=='Pending'?item.vpsoption:item.vpsoption.toUpperCase()}\r\n                    </text>\r\n                </span>\r\n                <span style={{fontWeight:'bold',fontSize:11,backgroundColor:\"rgba(9,9,9,0.68)\",color:\"white\"}} className='badge badge-dark'>\r\n\r\n                        <text >\r\n                              Device {item.total_device==0?'0':+item.total_device}\r\n                        </text>\r\n\r\n                </span>\r\n                <span style={{fontWeight:'bold',fontSize:11,marginLeft:2,backgroundColor:\"#c0e1ce\",color:\"black\"}} className='badge badge-dark'>\r\n\r\n                        <text >\r\n                              Total {item.acccount==0?'0':+item.acccount}\r\n                        </text>\r\n\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'#50CD89'}}>\r\n                    <text >\r\n                    Live {item.acccountlive}\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'#c0271b'}}>\r\n                    <text >\r\n                    Die {item.acccount-item.acccountlive}\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'rgba(20,122,178,0.66)'}}>\r\n                    <text >\r\n                    Follower {item.follower}\r\n                    </text>\r\n                </span>\r\n            </td>\r\n            <td style={{width:'200px'}} className='text-end'>\r\n                <div  className='d-flex flex-column w-100 me-2'>\r\n                    <div  className='d-flex flex-stack mb-2'>\r\n                        {item.timegettask>0&&<span  style={{color:(((Date.now()-item.timegettask)/1000/60)>30?\"rgba(143,3,3,0.97)\":\"black\")}} >{item.total} running | {((Date.now()-item.timegettask)/1000/60/60)>=24?((((Date.now()-item.timegettask)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timegettask)/1000/60/60)>=1?((Date.now()-item.timegettask)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timegettask)/1000/60).toFixed(0)+'m'} </span>}\r\n                        {item.timegettask==0&&<span  style={{color:\"black\"}} >No running</span>}\r\n                        {\r\n                            item.vpsreset!=0 && <span style={{fontWeight:'bold',fontSize:11,marginTop:2,backgroundColor:\"#e57624\"}} className='badge badge-danger'>\r\n\r\n                                <text >\r\n                                       Reset {item.vpsreset}\r\n                                </text>\r\n\r\n                                </span>\r\n\r\n                        }\r\n                    </div>\r\n                    <div  className='progress h-6px w-300'>\r\n                        <div\r\n                            className='progress-bar bg-active-success'\r\n                            role='progressbar'\r\n                            style={{width:(item.total/(50))*200,backgroundColor:\"#6da18a\"}}\r\n                        ></div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <div className='d-flex justify-content-end flex-shrink-0'>\r\n                    <button\r\n                        onClick={()=>clickEditHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\r\n                    >\r\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\r\n                    </button>\r\n                    <button\r\n                        onClick={()=>clickDeleteHandler()}\r\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'>\r\n                        <KTSVG\r\n                            path='/media/icons/duotune/general/gen027.svg'\r\n                            className='svg-icon-3'\r\n                        />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default UserItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\OrderListFollowerTikTok.tsx",["5622","5623","5624","5625","5626","5627","5628","5629","5630","5631","5632","5633","5634","5635","5636","5637","5638","5639","5640","5641","5642","5643","5644","5645","5646","5647","5648","5649","5650","5651","5652","5653","5654","5655","5656","5657","5658","5659","5660","5661","5662","5663","5664","5665","5666","5667","5668","5669","5670","5671","5672","5673","5674","5675","5676","5677","5678","5679","5680","5681","5682","5683","5684","5685","5686","5687","5688","5689","5690","5691","5692","5693","5694","5695","5696","5697","5698","5699","5700","5701","5702","5703","5704","5705","5706","5707","5708","5709","5710","5711","5712"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\r\nimport {Group,OrderModel, OrderModelFollower,OrderModelChecked} from './models/Order'\r\nimport {Popover, Transition} from '@headlessui/react'\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {Fragment, useEffect, useState} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport AddManualModal from './modals/AddManualModal'\r\nimport AddModal from './modals/AddModal'\r\nimport EditMulti from './modals/EditMulti'\r\nimport {KTSVG} from '../../../_metronic/helpers'\r\nimport OrderFollowerTikTokItem from './components/OrderFollowerTikTokItem'\r\nimport {RootState} from 'setup'\r\nimport {actions} from './redux/OrdersRedux'\r\nimport {FormGroup, Input, Label, Modal} from \"reactstrap\";\r\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\r\nimport * as XLSX from 'xlsx';\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport * as FileSaver from 'file-saver';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DatePicker from \"react-date-picker\";\r\ntype Props = {\r\n  done:number\r\n  className: string\r\n  orders: OrderModelFollower[]\r\n}\r\nconst OrderListFollowerTikTok: React.FC<Props> = ({done,className, orders}) => {\r\n\r\n  function format1(n:number) {\r\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n    });\r\n  }\r\n  const [list_orderhistory,setList_OrderHistory]=useState([{\r\n    id: 0,\r\n    orderid:0,\r\n    videoid: '',\r\n    timebuff:0,\r\n    timebuffhtotal: 0,\r\n    viewtotal:0,\r\n    viewstart:0,\r\n    viewend:0,\r\n    insertdate: \"\",\r\n    enddate: \"\",\r\n    cancel:0,\r\n    user:\"\",\r\n    note:\"\",\r\n    price:0,\r\n\r\n  }])\r\n  let today=new Date()\r\n  today.setHours(0,0,0,0)\r\n  const dispatch = useDispatch()\r\n  let [startDate, setStartDate] = useState(today);\r\n  let [endDate, setEndDate] = useState(today);\r\n  const [showManual, setShowManual] = useState(false)\r\n  const [Checked, setChecked] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [key, setKey] = useState(\"\")\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [keyuser, setKeyUser] = useState(\"\")\r\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\r\n  let [keydate, setKeyDate] = useState(1)\r\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\r\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\r\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\r\n\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keyusertrue, setKeyUserTrue] = useState(0)\r\n  const [groupName, setGroupName] = useState('')\r\n  const [nameExport, setNameExport] = useState('')\r\n\r\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\r\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\r\n  let [totaldorder, setTotalOrder] = useState(0)\r\n  let [totaldordershow, setTotalOrderShow] = useState(0)\r\n  let [totalmoney, setTotalMoney] = useState(0)\r\n  let [totalmoneyshow, setTotalMoneyShow] = useState(0)\r\n  let [totalmoneyUS, setTotalMoneyUS] = useState(0)\r\n  let [totalmoneyUSshow, setTotalMoneyUSShow] = useState(0)\r\n  let [useEff, setuseEff] = useState(0)\r\n  let[copy,setCopy] =useState(\"\")\r\n  let[copyShow,setCopyShow] =useState(\"\")\r\n  let [totalvn, setTotalVn] = useState(0)\r\n  let [totalVnshow, setTotalVnShow] = useState(0)\r\n  let [totalUs, setTotalUs] = useState(0)\r\n  let [totalUsshow, setTotalUsShow] = useState(0)\r\n  let [copy_check,setcopy_check]=useState(\"1111111111\");\r\n  let role: string =\r\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  if(role===\"ROLE_SUPPORT\"){\r\n    role=\"ROLE_ADMIN\"\r\n  }\r\n  const user: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\r\n  const groups: Group[] =\r\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\r\n  const currentGroup: Group =\r\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\r\n  const [list_user,setList_User]=useState([{\r\n    id:\"0000000000\",\r\n    user:\"All User\"\r\n  },])\r\n  let [list_refund,setRefund]=useState([{\r\n    id:\"0000000000\",\r\n    reponse:\"\"\r\n\r\n  },])\r\n  async function getcounttimeorder() {\r\n    let  requestUrl = API_URL+'auth/getalluser';\r\n    const response = await fetch(requestUrl, {\r\n      method: 'get',\r\n      headers: new Headers({\r\n        'Authorization': '1',\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    });\r\n    const responseJson = await response.json();\r\n    const {user} = responseJson;\r\n    let arrlist =user.split(',');\r\n    for(var i=0;i<arrlist.length;i++){\r\n      let orderitem = {\r\n        id: randomString(10),\r\n        user: arrlist[i]\r\n      }\r\n      setList_User([...list_user, orderitem])\r\n      list_user.push(orderitem)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setcopy_check(randomString(10))\r\n    setLoading(true)\r\n    if(orders.length!=0 || list_orderhistory.length>0){\r\n      setLoading(false)\r\n    }\r\n    setList_OrderHistory([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    if(role===\"ROLE_ADMIN\"){\r\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n    }else {\r\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\r\n\r\n    }\r\n    if(startDate==null || endDate==null){\r\n      setKeyDateStartTrue(0)\r\n      setKeyDateEndTrue(0)\r\n      keydatestart=0\r\n      keydateend=0\r\n    }else if(startDate!=null && endDate!=null){\r\n      keydatestart=startDate.getTime()\r\n      setKeyDateStart(keydatestart)\r\n      keydateend=endDate.getTime()\r\n      setKeyDateEnd(keydateend)\r\n      keydate=1\r\n      setKeyDate(keydate)\r\n    }\r\n    totalmoneyshow=totalmoney\r\n    setTotalMoneyShow(totalmoneyshow)\r\n    setTotalMoney(0)\r\n    totaldordershow=totaldorder\r\n    setTotalOrderShow(totaldordershow)\r\n    setTotalOrder(0)\r\n\r\n    totalVnshow=totalvn\r\n    setTotalVnShow(totalVnshow)\r\n    setTotalVn(0)\r\n\r\n    totalUsshow=totalUs\r\n    setTotalUsShow(totalUsshow)\r\n    setTotalUs(0)\r\n\r\n    totalmoneyUSshow=totalmoneyUS\r\n    setTotalMoneyUSShow(totalmoneyUSshow)\r\n    setTotalMoneyUS(0)\r\n\r\n    totaltimebuffedordershow=totaltimebuffedorder\r\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\r\n    setTotalTimeBuffedOrder(0)\r\n    if(useEff<=1){\r\n      getcounttimeorder();\r\n    }\r\n    copy=\"\"\r\n    setCopy(\"\")\r\n\r\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\r\n\r\n  const selectGroup = (item: Group) => {\r\n    dispatch(actions.selectGroup(item))\r\n  }\r\n\r\n  async function Export(csvData:OrderModelChecked[],fileName:string){\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n    const ws = XLSX.utils.json_to_sheet(csvData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  }\r\n\r\n  const isShowFixMulti = orders.find((item) => {\r\n    if (item.checked) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const isShowCopy = orders.find((item) => {\r\n    if (item.status!=null) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const clickRefund100Check = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn refund \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.requestUpdateFollower(orderarr))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChangeFollower(false))\r\n  }\r\n\r\n  \r\n  let  clickCopy = () => {\r\n    const arr:string[]=[]\r\n    copy=\"\"\r\n    setCopy(\"\")\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.status.length>0){\r\n        copy=copy+item.orderid.toString()+\" | \"+item.status+\"\\n\"\r\n      }\r\n      setCopy(copy)\r\n    })\r\n  }\r\n  const clickRefund = () => {\r\n    const arr:string[]=[]\r\n    orders.forEach(item=>{\r\n      const myElem = list_orderhistory.find(value => value.orderid===item.orderid)\r\n      if(myElem && item.checked){\r\n\r\n        arr.push(item.orderid.toString())\r\n      }\r\n    })\r\n    const orderarr=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn refund phần thiếu cho \"+arr.length+\" đơn!\") == true) {\r\n      dispatch(actions.requestUpdateFollower(orderarr))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChangeFollower(false))\r\n  }\r\n  \r\n  return (\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'><span className='badge badge-success 1' style={{fontSize:12,color:\"#ffffff\",backgroundColor:\"rgb(9,9,9)\"}}>Followers TikTok</span> <span className='badge badge-success 1' style={{fontSize:12,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tìm thấy {totaldordershow}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{format1((totalVnshow))} </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{format1((totalUsshow))}</span> </span>\r\n              <p style={{fontSize:11,marginTop:5}} className=\"fw-bold c-order__list\">\r\n                <span className='fw-bolder fs-3 mb-1' ><span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(9,9,9,0.68)\"}}>Tổng chạy {format1(totaltimebuffedordershow)}</span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#090909\",backgroundColor:\"rgb(255,255,255)\"}}>Tổng tiền {totalmoneyshow.toFixed(3)}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(218,30,30,0.97)\"}}>{((totalmoneyshow-totalmoneyUSshow).toFixed(3))}$ </span> <span className='badge badge-success 1' style={{fontSize:11,color:\"#fcfcfc\",backgroundColor:\"rgba(34,126,231,0.97)\"}}>{(totalmoneyUSshow.toFixed(3))}$</span></span>\r\n              </p>\r\n            </div>\r\n            <div className=\"col-lg-5 col-sm-12 text-right\">\r\n              { isShowFixMulti && role === \"ROLE_ADMIN\"&&(\r\n                  <button style={{marginRight:5,backgroundColor:\"rgba(213,143,51,0.97)\"}}\r\n                          onClick={() => {\r\n                            clickRefund()\r\n                          }}\r\n                          className='btn btn-google'\r\n                  >\r\n                    Refunds\r\n                  </button>\r\n              )}\r\n              { isShowCopy && role === \"ROLE_ADMIN\"&&(\r\n                  <CopyToClipboard\r\n                      text={copy}\r\n                      onCopy={() => {clickCopy()}}>\r\n                    <span className='btn btn-google' style={{backgroundColor:\"white\",color:\"black\"}}>{copy==\"\"?\"Copy Text\":\"Copied\"}</span>\r\n                  </CopyToClipboard>\r\n\r\n              )}\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Export\r\n              </button>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                     onChange={(e) => {\r\n                       setKeyUser(e.target.value)\r\n                       setKeyUserTrue(1)\r\n                     }}\r\n                     className=\"form-control form-control-solid\"\r\n                     type=\"select\"\r\n                     value={keyuser}\r\n              >\r\n                {\r\n                  list_user.map((item, index) => {\r\n                    return(\r\n                        <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\r\n                          {item.user}</option>)\r\n                  })\r\n                }\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            {role===\"TEST\"&&<div style={{width:\"100%\"}}>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {Export(list_orderhistory,nameExport)\r\n                      }}\r\n                      className='btn btn-google'\r\n              >\r\n                Đối soát\r\n              </button>\r\n              <button style={{height:40,margin:10,float:\"right\"}}\r\n                      onClick={() => {\r\n                        setShowAddManual(true)\r\n                      }}\r\n                      className='btn btn-success'\r\n              >\r\n                Tra cứu nhanh\r\n              </button>\r\n            </div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='card-body py-3'>\r\n        <div className='table-responsive'>\r\n          {/* begin::Table */}\r\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedAllChangeFollower(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span  style={{fontSize:12,color:\"black\",marginLeft:5}} className='text-sm'>STT</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>OrderId</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\r\n                </th>\r\n                <th className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\r\n                </th>\r\n                <th className='min-w-15px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Check</span>\r\n                </th>\r\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\r\n                </th>}\r\n                <th   className='min-w-10px text-sm'>\r\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n            <tbody>\r\n              {Array.isArray(orders)&&\r\n                orders.map((order: OrderModelFollower, index: number) => {\r\n                  if (keyusertrue==0&&keytrue==0) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((order.tiktok_id.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                      &&keytrue==1&&keyusertrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if(keytrue==0&&keyusertrue==0){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }else if((order.tiktok_id.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0)\r\n                      &&keytrue==1&&keyusertrue==0\r\n                  ){\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(((order.tiktok_id.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0 )\r\n                      &&keytrue==1&&keyusertrue==1) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                  else if(((order.tiktok_id.indexOf(key)>=0 || order.note.indexOf(key)>=0  || key.indexOf(\"vn\")>=0&&order.service>=600 || key.indexOf(\"us\")>=0&&order.service<600 || order.orderid.toString().indexOf(key)>=0 || order.service.toString().indexOf(key.indexOf('?')>=0?key.replace('?',''):'done')>=0) && order.user.indexOf(keyuser)>=0)\r\n                      &&keytrue==1&&keyusertrue==1) {\r\n                    if(index===0){\r\n                      totaldorder=1\r\n                      totalmoney=order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))\r\n\r\n                    }else{\r\n                      totaldorder=totaldorder+1\r\n                      totalmoney=totalmoney+order.price\r\n                      totaltimebuffedorder=Math.round(Number(order.follower_total==null?0:order.follower_total))+totaltimebuffedorder\r\n                    }\r\n                    let orderitem = {\r\n                      id: totaldorder,\r\n                      orderid:order.orderid,\r\n                      videoid: order.tiktok_id,\r\n                      timebuff:order.follower_total,\r\n                      viewtotal:order.follower_total,\r\n                      timebuffhtotal: Math.round(Number(order.follower_total==null?0:order.follower_total)/3600),\r\n                      viewstart:order.follower_start,\r\n                      viewend:order.follower_end,\r\n                      insertdate: new Date(order.insert_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insert_date).toLocaleTimeString('vn-VN'),\r\n                      enddate: new Date(order.end_date).toLocaleDateString('vn-VN') +\" \"+ new Date(order.end_date).toLocaleTimeString('vn-VN'),\r\n                      cancel:order.cancel,\r\n                      user:order.user,\r\n                      note:order.note,\r\n                      price:order.price\r\n\r\n                    }\r\n                    list_orderhistory.push(orderitem)\r\n                    return (\r\n                        <OrderFollowerTikTokItem\r\n                            index={index}\r\n                            showEdit={role === 'ROLE_ADMIN'}\r\n                            key={order.orderid.toString()+index.toString()}\r\n                            item={order}\r\n                        />\r\n                    )\r\n                  }\r\n                    return null\r\n                })}\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      {showManual && (\r\n        <AddManualModal\r\n          show={true}\r\n          close={() => {\r\n            setShowManual(false)\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <EditMulti\r\n        show={showEditMulti}\r\n        close={() => {\r\n          setShowEditMulti(false)\r\n        }}\r\n      />\r\n      <AddManualModal\r\n        show={showAddManual}\r\n        close={() => {\r\n          setShowAddManual(false)\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {OrderListFollowerTikTok}\r\n","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\orderhistoryfind\\components\\OrderFollowerTikTokItem\\index.tsx",["5713","5714","5715","5716","5717","5718","5719","5720","5721","5722","5723","5724","5725","5726","5727","5728","5729","5730","5731","5732","5733","5734","5735"],"import React, { useState, useEffect } from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { OrderModelFollower } from '../../models/Order'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport { actions } from '../../redux/OrdersRedux'\r\nimport { getFunciton } from 'utils/ApiHelper'\r\nimport {RootState} from \"../../../../../setup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: OrderModelFollower,\r\n    showEdit: boolean,\r\n    index: number,\r\n    //increase: number\r\n}\r\n\r\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\r\n    let role: string =\r\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n    if(role===\"ROLE_SUPPORT\"){\r\n        role=\"ROLE_ADMIN\"\r\n    }\r\n    const [running, setRunning] = useState(0)\r\n    const [success, setSuccess] = useState(0)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    function format1(n:number) {\r\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\r\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\r\n        });\r\n    }\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const clickUpdateHandler1 = () => {\r\n        if (window.confirm(\"Bạn có chắc chắn muốn refund cho orderId \"+item.orderid!\r\n        ) == true) {\r\n            dispatch(actions.requestUpdateFollower(item.orderid.toString()))\r\n        }\r\n    }\r\n\r\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\r\n    //const increase = item.current_view - item.start_view\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td  className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedChangeFollower({\r\n                                orderid:item.orderid,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{marginLeft:5}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n            <td>\r\n                <span style={{ color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.orderid}</span>\r\n                <br/>\r\n                {item.info.length>0&&<span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{item.info.split(',')[0]}</span>}\r\n            </td>\r\n            <td>\r\n\r\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.tiktok.com/' + item.tiktok_id} className='badge badge-danger'>\r\n                    {item.tiktok_id}\r\n                </a>\r\n                <span>\r\n                  <span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"rgba(241,133,133,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"rgb(9,9,9)\"}}>{item.price==null?0:item.price.toPrecision()}</span>$</span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#ffffff\"}}>{item.follower_order}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"black\"}}>{item.follower_start}</span></span>\r\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#000000\"}}>{item.follower_total==null?0:item.follower_total}</span></span>\r\n                    <span style={{ color:'white',fontSize:11,backgroundColor:Math.round((Math.round(Number(item.follower_total==null?0:item.follower_total))/item.follower_order*100))>=100?\"rgba(234,100,100,0.97)\":\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.follower_total==null?0:item.follower_total))/item.follower_order*100))+'%'}</span></span>\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.time_start!=0?\"#03d96e\":\"rgba(218,30,30,0.97)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                        {item.time_start!=0?(((item.end_date-item.time_start)/1000/60/60)>=24?((((item.end_date-item.time_start)/1000/60/60/24)).toFixed(2)+'D'):((item.end_date-item.time_start)/1000/60/60)>=1?((item.end_date-item.time_start)/1000/60/60).toFixed(2)+'H':((item.end_date-item.time_start)/1000/60).toFixed(0)+'m'):'C'}</span>\r\n                    <br/>\r\n                      {item.info.length>0&&<span>\r\n                      <a target=\"_blank\" style={{textDecorationLine:'none',fontWeight:'normal',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.tiktok.com/' + item.tiktok_id} className='badge badge-danger'>\r\n                        Previous Order\r\n                      </a>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{parseFloat(item.info.split(',')[2])==null?0:parseFloat(item.info.split(',')[2]).toPrecision()}</span>$</span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{item.info.split(',')[3]}</span></span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{item.info.split(',')[4]}</span></span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{item.info.split(',')[5]}</span></span>\r\n                      <span style={{ color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"white\"}}>{Math.round((Math.round(Number(parseInt(item.info.split(',')[5])==null?0:parseInt(item.info.split(',')[5])))/parseInt(item.info.split(',')[3])*100))+'%'}</span></span>\r\n                      </span>\r\n                      }\r\n                </span>\r\n                </span>\r\n            </td>\r\n            <td >\r\n                <span style={{color:'white',fontSize:11,backgroundColor:item.service>1000?\"rgba(3,37,80,0.97)\":(item.service<600?\"rgba(34,126,231,0.97)\":\"#b7080f\"),marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.service}</span>\r\n\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.insert_date).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.insert_date).toLocaleTimeString('vn-VN')}</span>\r\n\r\n                <br/>\r\n                {item.info.length>0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.info.split(',')[6]}</span>}\r\n\r\n                {item.info.length>0&&<span style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(parseFloat(item.info.split(',')[7])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[7])).toLocaleTimeString('vn-VN')}</span>}\r\n\r\n            </td>\r\n            <td >\r\n                {\r\n                    <span className='badge badge-success' style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.time_start!=0?(new Date(item.time_start).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.time_start).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n                <br/>\r\n                {\r\n                    item.info.length>0&&<span className='badge badge-success' style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{parseFloat(item.info.split(',')[8])!=0?(new Date(parseFloat(item.info.split(',')[8])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[8])).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            <td>\r\n                {\r\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                        item.cancel === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#dc7a30\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(item.end_date).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.end_date).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n                <br/>\r\n                { item.info.length>0&&\r\n                   parseInt(item.info.split(',')[9]) === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success'>D</span> :\r\n                    item.info.length>0&&parseInt(item.info.split(',')[9]) === 2 ? <span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-success'>P</span> :\r\n                        item.info.length>0&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\",marginRight:5,marginBottom:5}} className='badge badge-danger'>C</span>\r\n\r\n                }\r\n                {\r\n                    item.info.length>0&&<span style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{new Date(parseFloat(item.info.split(',')[10])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[10])).toLocaleTimeString('vn-VN')}</span>\r\n                }\r\n\r\n            </td>\r\n            <td >\r\n                {(item.follower_end>-1&&item.follower_end!=null)&&<span style={{color:'white',fontSize:11,backgroundColor:item.follower_end>=(item.follower_start+item.follower_total)?\"rgba(16,128,201,0.66)\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.follower_end}</span>}\r\n                {\r\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,marginRight:5,marginBottom:5}} >{item.time_check_refill>0?(new Date(item.time_check_refill).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(item.time_check_refill).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n                <br/>\r\n                {(parseInt(item.info.split(',')[12])>-1&&parseInt(item.info.split(',')[12])!=null)&&<span style={{color:'white',fontSize:11,backgroundColor:\"rgba(105,101,101,0.6)\"}} className='badge badge-success'>\r\n                    {parseInt(item.info.split(',')[12])}</span>}\r\n                {\r\n                    <span style={{color:'rgba(9,9,9,0.58)',fontWeight:\"bold\",fontSize:11,margin:5}} >{parseFloat(item.info.split(',')[11])>0?(new Date(parseFloat(item.info.split(',')[11])).toLocaleDateString('vn-VN').replace(\"/2024\",\"\") +\" \"+ new Date(parseFloat(item.info.split(',')[11])).toLocaleTimeString('vn-VN')):\"\"}</span>\r\n                }\r\n            </td>\r\n            {role!=\"ROLE_USER\"&&<td>\r\n                <span className='badge badge-success' style={{color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.user.replace(\"@gmail.com\",\"\")}</span>\r\n                <br/>\r\n                {item.info.length>0&&<span className='badge badge-success' style={{color:'rgba(9,9,9,0.58)',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.info.split(',')[13].replace(\"@gmail.com\",\"\")}</span>}\r\n            </td>}\r\n            <td>\r\n                <span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'black',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.note}</span>\r\n                <br/>\r\n                {item.info.length>0&&<span className='badge badge-success' style={{overflow:\"hidden\",maxWidth:100,color:'rgba(9,9,9,0.58)',fontSize:11,fontWeight:'bold',marginRight:5,marginBottom:5,backgroundColor:\"white\"}} >{item.info.split(',')[14]}</span>}\r\n            </td>\r\n\r\n            {item.status==null&&\r\n                role === \"ROLE_ADMIN\"&&item.price!=0&&<td >\r\n                    <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"rgba(213,143,51,0.97)\",marginRight:5,marginBottom:5,color:\"white\",padding:8}} onClick={clickUpdateHandler1} className='badge badge-danger'>\r\n                        R\r\n                    </a>\r\n                </td>\r\n            }\r\n            {item.status!=null&&\r\n                role === \"ROLE_ADMIN\"&&<td >\r\n                    <span style={{color:'white',fontSize:11,backgroundColor:item.status.includes(\"Đã\")?\"#03d96e\":\"#b7080f\",marginRight:5,marginBottom:5}} className='badge badge-success'>\r\n                    {item.status}</span>\r\n                </td>\r\n            }\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default OrderItem","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\modals\\DeviceModal\\index.tsx",["5736","5737","5738","5739"],"import React,{useEffect,useState} from 'react'\r\nimport {DeviceList} from 'app/modules/vpstiktok/DeviceList'\r\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\r\nimport {actions} from 'app/modules/vpstiktok/redux/AccountRedux'\r\nimport {DeviceModel} from 'app/modules/vpstiktok/models/Account'\r\nimport {RootState} from 'setup'\r\nimport EditModal  from 'app/modules/vpstiktok/modals/EditModal'\r\nimport {Input} from \"reactstrap\";\r\n\r\n\r\ntype Props = {\r\n    vps: string\r\n}\r\nconst DeviceShow: React.FC<Props> = ({ vps }) => {\r\n    const dispatch = useDispatch()\r\n    const devices: DeviceModel[] = useSelector<RootState>(({vpstiktok}) => vpstiktok.devices, shallowEqual) as DeviceModel[] || []\r\n    const currentDevice: DeviceModel = useSelector<RootState>(({vpstiktok}) => vpstiktok.currentDevice, shallowEqual) as DeviceModel || undefined\r\n    const [refresh, setRefresh] = useState(true)\r\n    useEffect(() => {\r\n        if(refresh===true){\r\n            dispatch(actions.requestDevicesByVPS(vps))\r\n        }\r\n        setRefresh(false)\r\n    },[refresh]);\r\n    return (\r\n        <>\r\n            <div className='row gy-5 gx-xl-12'>\r\n                <div className='col-xl-12' style={{margin:0}}>\r\n                    <DeviceList devices={devices} className='card-xxl-stretch mb-5 mb-xl-12' />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DeviceShow","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\DeviceList.tsx",["5740","5741","5742","5743","5744","5745","5746","5747","5748","5749","5750","5751","5752","5753","5754","5755","5756","5757","5758","5759","5760","5761","5762","5763","5764","5765","5766","5767","5768","5769","5770","5771","5772","5773"],"/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\r\nimport { DeviceModel } from 'app/modules/vpstiktok/models/Account'\r\n\r\nimport UserItem from './components/UserItem'\r\nimport DeviceItem from './components/DeviceItem'\r\nimport {actions} from \"./redux/AccountRedux\";\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {ComputerModel} from \"../history/models/Account\";\r\nimport {RootState} from \"../../../setup\";\r\nimport EditMulti from \"./modals/EditMulti\";\r\nimport RestartMulti from \"./modals/RestartMulti\";\r\nimport {Input,Modal} from \"reactstrap\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\nimport {randomInt} from \"crypto\";\r\ntype Props = {\r\n  className: string,\r\n  devices: DeviceModel[]\r\n}\r\n\r\nconst DeviceList: React.FC<Props> = ({ className, devices }) => {\r\n  const dispatch = useDispatch()\r\n  const API_URL = process.env.REACT_APP_API_URL\r\n  const [loading, setLoading] = useState(true)\r\n  const [showEditMulti, setShowEditMulti] = useState(false)\r\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\r\n  const [showAddManual, setShowAddManual] = useState(false)\r\n  const [total_user, settotal_user] = useState(0)\r\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\r\n  const [vpstpye, setvpstpye] = useState('')\r\n  const [keytrue, setKeyTrue] = useState(0)\r\n  const [keystatus, setKeyStatus] = useState('')\r\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\r\n  const [key, setKey] = useState(\"\")\r\n  const [statusVNTrue, setstatusVNTrue] = useState(0)\r\n  const [Checked, setChecked] = useState(false)\r\n  const role: string =\r\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\r\n  const [list_vps,setList_VPS]=useState([{\r\n    id:0,\r\n    vps:\"\",\r\n  },])\r\n  let [useEff, setuseEff] = useState(0)\r\n\r\n\r\n  var icount=0;\r\n  const isShowFixMulti = devices.find((item) => {\r\n\r\n    if (item.checked) {\r\n      icount=icount+1\r\n    }\r\n    if(icount>=2){\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  let total_waring=0;\r\n  let total_thread=0;\r\n  let total_view24h=0;\r\n  let total_thread_set=0;\r\n  let total_tool_warning=0;\r\n  let [totalvps, setTotalVps] = useState(0)\r\n  let [totaldvpsshow, setTotalVpsShow] = useState(0)\r\n\r\n  const dismissModal = () => {\r\n    dispatch(actions.clearCurrentAccount())\r\n  }\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    if(devices.length!=0){\r\n      setLoading(false)\r\n    }\r\n    setList_VPS([])\r\n    useEff=useEff+1\r\n    setuseEff(useEff)\r\n    totaldvpsshow=totalvps\r\n    setTotalVpsShow(totaldvpsshow)\r\n    setTotalVps(0)\r\n\r\n  },[keytrue,key,keystatus,vpstpye,devices.length,,]);\r\n\r\n  const clickDeleteHandler = () => {\r\n    const arr:string[]=[]\r\n    devices.forEach(item=>{\r\n      const myElem = list_vps.find(value => value.vps===item.vps)\r\n      if(myElem && item.checked){\r\n        arr.push(item.vps)\r\n      }\r\n    })\r\n    const vps=arr.join(',')\r\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" VPS!\") == true) {\r\n      dispatch(actions.deleteVpsRequest(vps))\r\n    }\r\n    setChecked(false)\r\n    dispatch(actions.checkedAllChange(false))\r\n  }\r\n\r\n  return (\r\n      <Modal isOpen={true}\r\n             modalTransition={{ timeout: 500 }}>\r\n    <div className={`card ${className}`}>\r\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{margin:10}}>\r\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\r\n              <span  className='fw-bolder fs-3 mb-1'>{totaldvpsshow} devices </span>\r\n            </div>\r\n            <div className=\"col-lg-5 col-sm-12 text-right\">\r\n              {isShowFixMulti && (\r\n                  <div>\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowEditMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Chỉnh sửa\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={() => {\r\n                              setShowRestartMulti(true)\r\n                            }}\r\n                            className='btn btn-light'>\r\n                      Restart\r\n                    </button>\r\n\r\n                    <button style={{margin:5}}\r\n                            onClick={()=>clickDeleteHandler()}\r\n                            className='btn btn-light'>\r\n                      Xóa Device\r\n                    </button>\r\n                  </div>\r\n\r\n              )}\r\n              <div>\r\n                <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"page-header__content\">\r\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\r\n            <div style={{width:\"60%\"}}>\r\n              <div>\r\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\r\n                       id=\"note\"\r\n                       name=\"note\"\r\n                       value={key}\r\n                       placeholder=\"Search...\"\r\n                       onChange={(e) => setKey(e.target.value)}\r\n                       type=\"text\"\r\n                />\r\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\r\n                        onClick={() => {setKeyTrue(1)\r\n                        }}\r\n                        className='btn btn-sm'\r\n                >\r\n                  Search\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div style={{width:\"40%\"}}>\r\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\r\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\r\n                                           onChange={(e) => {\r\n                                             setKeyStatus(e.target.value)\r\n                                             setKeyStatusTrue(1)\r\n                                           }}\r\n                                           className=\"form-control form-control-solid\"\r\n                                           type=\"select\"\r\n                                           value={keystatus}\r\n              >\r\n                <option key={'all'} value={'all'}>All</option>\r\n                <option key={'die'} value={'die'}>Die</option>\r\n                <option key={'live'} value={'live'}>Live</option>\r\n\r\n              </Input>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* end::Header */}\r\n      {/* begin::Body */}\r\n      <div className='card-body py-3'>\r\n        {/* begin::Table container */}\r\n        <div className='table-responsive'>\r\n          {/* begin::Menu */}\r\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\r\n            {/* begin::Table head */}\r\n            <thead>\r\n              <tr className='fw-bolder text-muted'>\r\n\r\n                <th className='w-25px'>\r\n                  <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt) => {\r\n                          dispatch(actions.checkedDevicesAllChange(evt.target.checked))\r\n                          setChecked(evt.target.checked)\r\n                        }}\r\n                        checked={Checked}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value='1'\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th className='w-5px'>STT</th>\r\n                <th className='min-w-100px '>Device Id</th>\r\n                <th className='min-w-100px'>Device Option</th>\r\n                <th className='min-w-100px'>Status</th>\r\n              </tr>\r\n            </thead>\r\n            {/* end::Table head */}\r\n            {/* begin::Table body */}\r\n\r\n            <tbody>\r\n              {\r\n                  devices&&devices?.map((item: DeviceModel,index:number) => {\r\n                    if (keystatustrue==0&&keytrue==0) {\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <DeviceItem key={item.id} item={item} index={index} />\r\n                    }else if((item.device_id.indexOf(key)>=0)&&keystatustrue==0&&keytrue==1){\r\n                      if(index===0){\r\n                        totalvps=1\r\n                      }else {\r\n                        totalvps=totalvps+1\r\n                      }\r\n                      let orderitem = {\r\n                        id: index,\r\n                        vps: item.vps\r\n                      }\r\n                      //setList_User([...list_user, orderitem])\r\n                      list_vps.push(orderitem)\r\n                      return <DeviceItem key={item.id} item={item} index={index} />\r\n                    }else if(keystatustrue==1&&keytrue==0){\r\n                        if(keystatus.indexOf(\"all\")>=0){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <DeviceItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('live')>=0&&(round((Date.now()-item.timegettask)/1000/60)<=5)){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <DeviceItem key={item.id} item={item} index={index} />\r\n                        }else if(keystatus.indexOf('die')>=0&&round((Date.now()-item.timegettask)/1000/60)>=5){\r\n                          if(index===0){\r\n                            totalvps=1\r\n                          }else {\r\n                            totalvps=totalvps+1\r\n                          }\r\n                          let orderitem = {\r\n                            id: index,\r\n                            vps: item.vps\r\n                          }\r\n                          //setList_User([...list_user, orderitem])\r\n                          list_vps.push(orderitem)\r\n                          return <DeviceItem key={item.id} item={item} index={index} />\r\n                        }\r\n                    }else if(keystatustrue==1&&keytrue==1){\r\n                      if(keystatus.indexOf(\"all\")>=0&&(item.device_id.indexOf(key)>=0)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <DeviceItem key={item.id} item={item} index={index} />\r\n                      }else if(item.device_id.indexOf(key)>=0&&keystatus.indexOf('live')>=0&&(round((Date.now()-item.timegettask)/1000/60)<=5)){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <DeviceItem key={item.id} item={item} index={index} />\r\n                      }else if(item.device_id.indexOf(key)>=0&&keystatus.indexOf('die')>=0&&round((Date.now()-item.timegettask)/1000/60)>=5){\r\n                        if(index===0){\r\n                          totalvps=1\r\n                        }else {\r\n                          totalvps=totalvps+1\r\n                        }\r\n                        let orderitem = {\r\n                          id: index,\r\n                          vps: item.vps\r\n                        }\r\n                        //setList_User([...list_user, orderitem])\r\n                        list_vps.push(orderitem)\r\n                        return <DeviceItem key={item.id} item={item} index={index} />\r\n                      }\r\n                    }\r\n                  })\r\n              }\r\n\r\n            </tbody>\r\n            {/* end::Table body */}\r\n          </table>\r\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\r\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n        {/* end::Table container */}\r\n      </div>\r\n      {/* begin::Body */}\r\n      <EditMulti\r\n          list_vps={list_vps}\r\n          show={showEditMulti}\r\n          close={() => {\r\n            setShowEditMulti(false)\r\n          }}\r\n      />\r\n      <RestartMulti\r\n          list_vps={list_vps}\r\n          show={showRestartMulti}\r\n          close={() => {\r\n            setShowRestartMulti(false)\r\n          }}\r\n      />\r\n    </div>\r\n      </Modal>\r\n  )\r\n}\r\nexport  { DeviceList }","C:\\Users\\PC1\\Documents\\View\\reactjs-ytview\\src\\app\\modules\\vpstiktok\\components\\DeviceItem\\index.tsx",["5774","5775","5776","5777","5778","5779","5780","5781","5782","5783","5784","5785","5786"],"import React, {useEffect, useState} from 'react'\r\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\r\nimport { DeviceModel } from 'app/modules/vpstiktok/models/Account'\r\nimport {useDispatch} from 'react-redux'\r\nimport {actions} from '../../redux/AccountRedux'\r\nimport moment from 'moment'\r\nimport {date} from \"yup\";\r\nimport {round} from \"@popperjs/core/lib/utils/math\";\r\ntype Props = {\r\n    item: DeviceModel,\r\n    index:number\r\n}\r\n\r\nconst DeviceItem : React.FC<Props> = ({ item ,index}) => {\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const clickHandler =()=>{\r\n        //dispatch(actions.showCurrentAccount(item))\r\n    }\r\n    const clickDeleteHandler = () => {\r\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.vps!) == true) {\r\n            dispatch(actions.deleteVpsRequest(item.vps))\r\n        }\r\n    }\r\n    return (\r\n        <tr style={{margin:100,backgroundColor:item.checked==true?\"rgba(252,226,207,0.62)\":\"\"}}>\r\n            <td className='w-25px'>\r\n                <div style={{marginLeft:5}} className='form-check form-check-sm form-check-custom form-check-solid'>\r\n                    <input\r\n                        onChange={(evt)=>{\r\n                            dispatch(actions.checkedDeviceChange({\r\n                                device_id:item.device_id,\r\n                                checked:evt.target.checked\r\n                            }))\r\n                        }}\r\n                        className='form-check-input'\r\n                        type='checkbox'\r\n                        value={1}\r\n                        checked={item.checked}\r\n                        data-kt-check='true'\r\n                        data-kt-check-target='.widget-13-check'\r\n                         />\r\n                </div>\r\n            </td>\r\n            <td className='w-25px'>\r\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\r\n            </td>\r\n\r\n            <td>\r\n                <div className='d-flex align-items-center'>\r\n                    <div className='d-flex justify-content-start flex-column'>\r\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\r\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"black\"}}>\r\n                                {item.device_id}\r\n                                </text>\r\n                            </span>\r\n                            {item.timecheck!=null&&<span style={{marginRight:2,backgroundColor:round((Date.now()-item.timecheck)/1000/60)<10?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\r\n                                <text style={{fontSize:11,color:\"white\"}}>\r\n                                    {round((Date.now()-item.timecheck)/1000/60)}{'m'}\r\n                                </text>\r\n                            </span>}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <span style={{fontWeight:'bold',fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\"}} className='badge badge-dark'>\r\n\r\n                        <text >\r\n                              {item.acccount==0?'0':+item.acccount}\r\n                        </text>\r\n\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'#50CD89'}}>\r\n                    <text >\r\n                    Live {item.acccountlive}\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'#c0271b'}}>\r\n                    <text >\r\n                    Die {item.acccount-item.acccountlive}\r\n                    </text>\r\n                </span>\r\n                <span className='badge badge-dark' style={{fontSize:11,marginLeft:2, backgroundColor:'rgba(20,122,178,0.66)'}}>\r\n                    <text >\r\n                    Follower {item.follower}\r\n                    </text>\r\n                </span>\r\n                <span  style={{fontSize:11,marginLeft:2,color:(((Date.now()-item.time_add)/1000/60)>30?\"rgba(143,3,3,0.97)\":\"black\"),backgroundColor:\"#c0e1ce\"}} className='badge badge-danger' > {((Date.now()-item.time_add)/1000/60/60)>=24?((((Date.now()-item.time_add)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.time_add)/1000/60/60)>=1?((Date.now()-item.time_add)/1000/60/60).toFixed(2)+'H':((Date.now()-item.time_add)/1000/60).toFixed(0)+'m'} </span>\r\n            </td>\r\n            <td >\r\n                <div>\r\n                        <span  style={{color:\"black\"}} > <span style={{fontWeight:'bold',fontSize:11,backgroundColor:item.running>0?\"#3a8f5e\":\"rgba(61,59,59,0.68)\",color:\"white\"}} className='badge badge-dark'>\r\n                        <text >\r\n                              {item.running>0?\"R\":\"P\"}\r\n                        </text>\r\n\r\n                     </span>\r\n                            {item.timegettask>0&&<span  style={{color:(((Date.now()-item.timegettask)/1000/60)>30?\"rgba(143,3,3,0.97)\":\"black\")}} > {((Date.now()-item.timegettask)/1000/60/60)>=24?((((Date.now()-item.timegettask)/1000/60/60/24)).toFixed(2)+'D'):((Date.now()-item.timegettask)/1000/60/60)>=1?((Date.now()-item.timegettask)/1000/60/60).toFixed(2)+'H':((Date.now()-item.timegettask)/1000/60).toFixed(0)+'m'} </span>}\r\n                            {item.timegettask==0&&<span  style={{color:\"black\"}} > No running</span>}\r\n                        </span>\r\n                    </div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DeviceItem",{"ruleId":"5787","severity":1,"message":"5788","line":29,"column":8,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":13},{"ruleId":"5791","replacedBy":"5792"},{"ruleId":"5793","replacedBy":"5794"},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5796","line":11,"column":19,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":29},{"ruleId":"5797","severity":1,"message":"5798","line":20,"column":5,"nodeType":"5799","endLine":20,"endColumn":14,"suggestions":"5800"},{"ruleId":"5801","severity":1,"message":"5802","line":27,"column":17,"nodeType":"5803","endLine":29,"endColumn":21},{"ruleId":"5804","severity":1,"message":"5805","line":30,"column":21,"nodeType":"5803","endLine":30,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5807","line":34,"column":47,"nodeType":"5808","messageId":"5809","endLine":34,"endColumn":49},{"ruleId":"5806","severity":1,"message":"5810","line":34,"column":105,"nodeType":"5808","messageId":"5809","endLine":34,"endColumn":107},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5811","line":11,"column":10,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5796","line":11,"column":19,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":29},{"ruleId":"5797","severity":1,"message":"5798","line":20,"column":5,"nodeType":"5799","endLine":20,"endColumn":14,"suggestions":"5812"},{"ruleId":"5801","severity":1,"message":"5802","line":26,"column":11,"nodeType":"5803","endLine":28,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":29,"column":13,"nodeType":"5803","endLine":29,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5795","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5811","line":15,"column":10,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5796","line":15,"column":19,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":29},{"ruleId":"5797","severity":1,"message":"5798","line":38,"column":5,"nodeType":"5799","endLine":38,"endColumn":32,"suggestions":"5813"},{"ruleId":"5801","severity":1,"message":"5802","line":44,"column":11,"nodeType":"5803","endLine":46,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":47,"column":13,"nodeType":"5803","endLine":47,"endColumn":126},{"ruleId":"5801","severity":1,"message":"5802","line":59,"column":11,"nodeType":"5803","endLine":61,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":62,"column":13,"nodeType":"5803","endLine":62,"endColumn":126},{"ruleId":"5801","severity":1,"message":"5802","line":74,"column":11,"nodeType":"5803","endLine":76,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":77,"column":13,"nodeType":"5803","endLine":77,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5814","line":11,"column":10,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5815","line":11,"column":18,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":27},{"ruleId":"5806","severity":1,"message":"5807","line":17,"column":15,"nodeType":"5808","messageId":"5809","endLine":17,"endColumn":17},{"ruleId":"5797","severity":1,"message":"5798","line":21,"column":5,"nodeType":"5799","endLine":21,"endColumn":14,"suggestions":"5816"},{"ruleId":"5801","severity":1,"message":"5802","line":28,"column":11,"nodeType":"5803","endLine":30,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":31,"column":13,"nodeType":"5803","endLine":31,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5817","line":5,"column":8,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5818","line":9,"column":16,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5819","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5820","line":23,"column":19,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":29},{"ruleId":"5797","severity":1,"message":"5798","line":38,"column":6,"nodeType":"5799","endLine":38,"endColumn":14,"suggestions":"5821"},{"ruleId":"5787","severity":1,"message":"5822","line":65,"column":18,"nodeType":"5789","messageId":"5790","endLine":65,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5823","line":76,"column":5,"nodeType":"5789","messageId":"5790","endLine":76,"endColumn":14},{"ruleId":"5806","severity":1,"message":"5807","line":81,"column":70,"nodeType":"5808","messageId":"5809","endLine":81,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":107,"column":17,"nodeType":"5808","messageId":"5809","endLine":107,"endColumn":19},{"ruleId":"5806","severity":1,"message":"5807","line":119,"column":23,"nodeType":"5808","messageId":"5809","endLine":119,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":145,"column":23,"nodeType":"5808","messageId":"5809","endLine":145,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":179,"column":15,"nodeType":"5808","messageId":"5809","endLine":179,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":31,"column":6,"nodeType":"5799","endLine":31,"endColumn":15,"suggestions":"5826"},{"ruleId":"5801","severity":1,"message":"5802","line":36,"column":11,"nodeType":"5803","endLine":38,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":39,"column":13,"nodeType":"5803","endLine":39,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5827","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":9,"column":16,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5810","line":44,"column":16,"nodeType":"5808","messageId":"5809","endLine":44,"endColumn":18},{"ruleId":"5797","severity":1,"message":"5829","line":72,"column":8,"nodeType":"5799","endLine":72,"endColumn":16,"suggestions":"5830"},{"ruleId":"5797","severity":1,"message":"5825","line":84,"column":6,"nodeType":"5799","endLine":84,"endColumn":15,"suggestions":"5831"},{"ruleId":"5797","severity":1,"message":"5832","line":96,"column":8,"nodeType":"5799","endLine":96,"endColumn":17,"suggestions":"5833"},{"ruleId":"5806","severity":1,"message":"5807","line":101,"column":24,"nodeType":"5808","messageId":"5809","endLine":101,"endColumn":26},{"ruleId":"5801","severity":1,"message":"5802","line":102,"column":15,"nodeType":"5803","endLine":104,"endColumn":17},{"ruleId":"5804","severity":1,"message":"5805","line":105,"column":15,"nodeType":"5803","endLine":105,"endColumn":128},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":31,"column":6,"nodeType":"5799","endLine":31,"endColumn":15,"suggestions":"5834"},{"ruleId":"5801","severity":1,"message":"5802","line":36,"column":11,"nodeType":"5803","endLine":38,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":39,"column":13,"nodeType":"5803","endLine":39,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5835","line":2,"column":8,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5824","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":10,"column":27,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5836","line":11,"column":8,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5837","line":12,"column":8,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5838","line":24,"column":9,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5839","line":25,"column":9,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":39},{"ruleId":"5787","severity":1,"message":"5840","line":26,"column":9,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":55},{"ruleId":"5787","severity":1,"message":"5841","line":32,"column":9,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":44,"column":18,"nodeType":"5808","messageId":"5809","endLine":44,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":44,"column":32,"nodeType":"5808","messageId":"5809","endLine":44,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5842","line":57,"column":6,"nodeType":"5799","endLine":57,"endColumn":25,"suggestions":"5843"},{"ruleId":"5797","severity":1,"message":"5844","line":57,"column":7,"nodeType":"5808","endLine":57,"endColumn":17},{"ruleId":"5806","severity":1,"message":"5807","line":57,"column":14,"nodeType":"5808","messageId":"5809","endLine":57,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5845","line":65,"column":9,"nodeType":"5789","messageId":"5790","endLine":65,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":31,"column":6,"nodeType":"5799","endLine":31,"endColumn":15,"suggestions":"5846"},{"ruleId":"5801","severity":1,"message":"5802","line":36,"column":11,"nodeType":"5803","endLine":38,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":39,"column":13,"nodeType":"5803","endLine":39,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5818","line":9,"column":16,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5819","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":30,"column":26,"nodeType":"5808","messageId":"5809","endLine":30,"endColumn":28},{"ruleId":"5797","severity":1,"message":"5798","line":38,"column":6,"nodeType":"5799","endLine":38,"endColumn":14,"suggestions":"5847"},{"ruleId":"5806","severity":1,"message":"5807","line":81,"column":69,"nodeType":"5808","messageId":"5809","endLine":81,"endColumn":71},{"ruleId":"5806","severity":1,"message":"5807","line":89,"column":22,"nodeType":"5808","messageId":"5809","endLine":89,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":109,"column":21,"nodeType":"5808","messageId":"5809","endLine":109,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":140,"column":17,"nodeType":"5808","messageId":"5809","endLine":140,"endColumn":19},{"ruleId":"5806","severity":1,"message":"5807","line":181,"column":23,"nodeType":"5808","messageId":"5809","endLine":181,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":207,"column":23,"nodeType":"5808","messageId":"5809","endLine":207,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":241,"column":15,"nodeType":"5808","messageId":"5809","endLine":241,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":32,"column":6,"nodeType":"5799","endLine":32,"endColumn":15,"suggestions":"5848"},{"ruleId":"5801","severity":1,"message":"5802","line":39,"column":11,"nodeType":"5803","endLine":41,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":42,"column":13,"nodeType":"5803","endLine":42,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":20,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":27,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":27,"column":6,"nodeType":"5799","endLine":27,"endColumn":15,"suggestions":"5849"},{"ruleId":"5801","severity":1,"message":"5802","line":37,"column":11,"nodeType":"5803","endLine":39,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":40,"column":13,"nodeType":"5803","endLine":40,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":32,"column":6,"nodeType":"5799","endLine":32,"endColumn":15,"suggestions":"5850"},{"ruleId":"5801","severity":1,"message":"5802","line":39,"column":11,"nodeType":"5803","endLine":41,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":42,"column":13,"nodeType":"5803","endLine":42,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5851","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5852","line":26,"column":9,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5853","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5854","line":7,"column":20,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5855","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":8,"column":24,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5859","line":6,"column":67,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":82},{"ruleId":"5787","severity":1,"message":"5860","line":7,"column":87,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":100},{"ruleId":"5787","severity":1,"message":"5861","line":7,"column":117,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":130},{"ruleId":"5787","severity":1,"message":"5862","line":8,"column":7,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":12},{"ruleId":"5806","severity":1,"message":"5807","line":245,"column":28,"nodeType":"5808","messageId":"5809","endLine":245,"endColumn":30},{"ruleId":"5863","severity":1,"message":"5864","line":317,"column":3,"nodeType":"5865","messageId":"5866","endLine":327,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":317,"column":3,"nodeType":"5789","messageId":"5869","endLine":317,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5861","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":18,"column":7,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":375,"column":3,"nodeType":"5865","messageId":"5866","endLine":391,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":375,"column":3,"nodeType":"5789","messageId":"5869","endLine":375,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5860","line":7,"column":64,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":77},{"ruleId":"5787","severity":1,"message":"5861","line":7,"column":94,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":107},{"ruleId":"5787","severity":1,"message":"5862","line":8,"column":7,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":303,"column":3,"nodeType":"5865","messageId":"5866","endLine":317,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":303,"column":3,"nodeType":"5789","messageId":"5869","endLine":303,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5861","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":18,"column":7,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":360,"column":3,"nodeType":"5865","messageId":"5866","endLine":376,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":360,"column":3,"nodeType":"5789","messageId":"5869","endLine":360,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5861","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":18,"column":7,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":360,"column":3,"nodeType":"5865","messageId":"5866","endLine":376,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":360,"column":3,"nodeType":"5789","messageId":"5869","endLine":360,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5861","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":18,"column":7,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":360,"column":3,"nodeType":"5865","messageId":"5866","endLine":376,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":360,"column":3,"nodeType":"5789","messageId":"5869","endLine":360,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5860","line":7,"column":87,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":100},{"ruleId":"5787","severity":1,"message":"5861","line":7,"column":117,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":130},{"ruleId":"5787","severity":1,"message":"5862","line":8,"column":7,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":317,"column":3,"nodeType":"5865","messageId":"5866","endLine":327,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":317,"column":3,"nodeType":"5789","messageId":"5869","endLine":317,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":55,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":64},{"ruleId":"5787","severity":1,"message":"5859","line":6,"column":100,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":115},{"ruleId":"5787","severity":1,"message":"5860","line":17,"column":3,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5861","line":19,"column":3,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":21,"column":7,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":12},{"ruleId":"5806","severity":1,"message":"5807","line":240,"column":29,"nodeType":"5808","messageId":"5809","endLine":240,"endColumn":31},{"ruleId":"5806","severity":1,"message":"5807","line":261,"column":29,"nodeType":"5808","messageId":"5809","endLine":261,"endColumn":31},{"ruleId":"5806","severity":1,"message":"5807","line":282,"column":29,"nodeType":"5808","messageId":"5809","endLine":282,"endColumn":31},{"ruleId":"5863","severity":1,"message":"5864","line":523,"column":3,"nodeType":"5865","messageId":"5866","endLine":533,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":523,"column":3,"nodeType":"5789","messageId":"5869","endLine":523,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5870","line":5,"column":53,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":69},{"ruleId":"5787","severity":1,"message":"5871","line":5,"column":88,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":104},{"ruleId":"5787","severity":1,"message":"5853","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5854","line":14,"column":20,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5855","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":15,"column":24,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":35},{"ruleId":"5872","severity":1,"message":"5873","line":152,"column":7,"nodeType":"5874","messageId":"5809","endLine":157,"endColumn":8},{"ruleId":"5872","severity":1,"message":"5873","line":158,"column":7,"nodeType":"5874","messageId":"5809","endLine":163,"endColumn":8},{"ruleId":"5787","severity":1,"message":"5855","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5854","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5875","line":241,"column":21,"nodeType":"5789","messageId":"5790","endLine":241,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5853","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5854","line":7,"column":20,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5855","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":8,"column":24,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5860","line":7,"column":87,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":100},{"ruleId":"5787","severity":1,"message":"5861","line":7,"column":117,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":130},{"ruleId":"5787","severity":1,"message":"5862","line":8,"column":7,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":317,"column":3,"nodeType":"5865","messageId":"5866","endLine":327,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":317,"column":3,"nodeType":"5789","messageId":"5869","endLine":317,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5853","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5854","line":7,"column":20,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5855","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":8,"column":24,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5876","line":14,"column":10,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":22},{"ruleId":"5797","severity":1,"message":"5798","line":20,"column":6,"nodeType":"5799","endLine":20,"endColumn":8,"suggestions":"5877"},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5878","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5795","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5881","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5883","line":22,"column":10,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5884","line":22,"column":19,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5885","line":23,"column":10,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5886","line":23,"column":25,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5887","line":24,"column":10,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5888","line":24,"column":28,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":47},{"ruleId":"5787","severity":1,"message":"5889","line":25,"column":10,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":25,"column":25,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5891","line":26,"column":10,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5892","line":26,"column":22,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5893","line":27,"column":10,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5894","line":27,"column":31,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":53},{"ruleId":"5787","severity":1,"message":"5895","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5896","line":28,"column":19,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5897","line":29,"column":10,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5898","line":29,"column":19,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5899","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5900","line":30,"column":21,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5901","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5902","line":31,"column":25,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5903","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5904","line":32,"column":15,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5905","line":33,"column":9,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5906","line":35,"column":9,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5907","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5889","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":28,"column":25,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5896","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5908","line":36,"column":10,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5909","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":39},{"ruleId":"5806","severity":1,"message":"5810","line":158,"column":23,"nodeType":"5808","messageId":"5809","endLine":158,"endColumn":25},{"ruleId":"5797","severity":1,"message":"5910","line":163,"column":12,"nodeType":"5808","endLine":163,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5911","line":165,"column":19,"nodeType":"5789","endLine":165,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":173,"column":5,"nodeType":"5799","messageId":"5914","endLine":173,"endColumn":54},{"ruleId":"5806","severity":1,"message":"5807","line":176,"column":59,"nodeType":"5808","messageId":"5809","endLine":176,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":181,"column":59,"nodeType":"5808","messageId":"5809","endLine":181,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":59,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":200,"column":70,"nodeType":"5808","messageId":"5809","endLine":200,"endColumn":72},{"ruleId":"5915","severity":1,"message":"5916","line":366,"column":77,"nodeType":"5917","messageId":"5918","endLine":366,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":368,"column":38,"nodeType":"5808","messageId":"5809","endLine":368,"endColumn":40},{"ruleId":"5806","severity":1,"message":"5807","line":368,"column":50,"nodeType":"5808","messageId":"5809","endLine":368,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":381,"column":193,"nodeType":"5808","messageId":"5809","endLine":381,"endColumn":195},{"ruleId":"5806","severity":1,"message":"5807","line":381,"column":205,"nodeType":"5808","messageId":"5809","endLine":381,"endColumn":207},{"ruleId":"5806","severity":1,"message":"5807","line":394,"column":43,"nodeType":"5808","messageId":"5809","endLine":394,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":394,"column":55,"nodeType":"5808","messageId":"5809","endLine":394,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5807","line":435,"column":43,"nodeType":"5808","messageId":"5809","endLine":435,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":435,"column":55,"nodeType":"5808","messageId":"5809","endLine":435,"endColumn":57},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5878","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5795","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5881","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5883","line":22,"column":10,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5884","line":22,"column":19,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5885","line":23,"column":10,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5886","line":23,"column":25,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5887","line":24,"column":10,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5888","line":24,"column":28,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":47},{"ruleId":"5787","severity":1,"message":"5889","line":25,"column":10,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":25,"column":25,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5891","line":26,"column":10,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5892","line":26,"column":22,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5893","line":27,"column":10,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5894","line":27,"column":31,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":53},{"ruleId":"5787","severity":1,"message":"5895","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5896","line":28,"column":19,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5897","line":29,"column":10,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5898","line":29,"column":19,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5899","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5900","line":30,"column":21,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5901","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5902","line":31,"column":25,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5919","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5903","line":33,"column":10,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5904","line":33,"column":15,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5905","line":34,"column":9,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5906","line":36,"column":9,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5920","line":44,"column":18,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5927","line":18,"column":10,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5928","line":66,"column":10,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":68,"column":10,"nodeType":"5789","messageId":"5790","endLine":68,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5841","line":99,"column":9,"nodeType":"5789","messageId":"5790","endLine":99,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":101,"column":9,"nodeType":"5789","messageId":"5790","endLine":101,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":103,"column":9,"nodeType":"5789","messageId":"5790","endLine":103,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":137,"column":21,"nodeType":"5808","messageId":"5809","endLine":137,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":141,"column":12,"nodeType":"5808","endLine":141,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":144,"column":36,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":144,"column":65,"nodeType":"5808","messageId":"5934","endLine":144,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":144,"column":77,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":144,"column":155,"nodeType":"5808","messageId":"5934","endLine":144,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":144,"column":167,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":146,"column":27,"nodeType":"5808","messageId":"5934","endLine":146,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":146,"column":39,"nodeType":"5808","messageId":"5809","endLine":146,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":146,"column":117,"nodeType":"5808","messageId":"5934","endLine":146,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":146,"column":129,"nodeType":"5808","messageId":"5809","endLine":146,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":152,"column":20,"nodeType":"5936","endLine":152,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":153,"column":18,"nodeType":"5936","endLine":153,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":159,"column":15,"nodeType":"5936","endLine":159,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":162,"column":20,"nodeType":"5789","endLine":162,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":165,"column":21,"nodeType":"5789","endLine":165,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":169,"column":17,"nodeType":"5789","endLine":169,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":173,"column":17,"nodeType":"5789","endLine":173,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5943","line":177,"column":17,"nodeType":"5789","endLine":177,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":181,"column":22,"nodeType":"5789","endLine":181,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5945","line":185,"column":22,"nodeType":"5789","endLine":185,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":189,"column":30,"nodeType":"5789","endLine":189,"endColumn":50},{"ruleId":"5912","severity":1,"message":"5913","line":198,"column":6,"nodeType":"5799","messageId":"5914","endLine":198,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":200,"column":9,"nodeType":"5789","messageId":"5790","endLine":200,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5948","line":214,"column":9,"nodeType":"5789","messageId":"5790","endLine":214,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5906","line":224,"column":9,"nodeType":"5789","messageId":"5790","endLine":224,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":239,"column":154,"nodeType":"5808","messageId":"5809","endLine":239,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":244,"column":157,"nodeType":"5808","messageId":"5809","endLine":244,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5810","line":372,"column":22,"nodeType":"5808","messageId":"5809","endLine":372,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":385,"column":36,"nodeType":"5808","messageId":"5809","endLine":385,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":385,"column":48,"nodeType":"5808","messageId":"5809","endLine":385,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":385,"column":60,"nodeType":"5808","messageId":"5809","endLine":385,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5807","line":438,"column":74,"nodeType":"5808","messageId":"5809","endLine":438,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":438,"column":86,"nodeType":"5808","messageId":"5809","endLine":438,"endColumn":88},{"ruleId":"5806","severity":1,"message":"5807","line":438,"column":98,"nodeType":"5808","messageId":"5809","endLine":438,"endColumn":100},{"ruleId":"5949","severity":1,"message":"5950","line":491,"column":92,"nodeType":"5951","messageId":"5952","endLine":491,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":491,"column":115,"nodeType":"5951","messageId":"5952","endLine":491,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":491,"column":136,"nodeType":"5951","messageId":"5952","endLine":491,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":491,"column":159,"nodeType":"5951","messageId":"5952","endLine":491,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":492,"column":34,"nodeType":"5808","messageId":"5809","endLine":492,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":492,"column":50,"nodeType":"5808","messageId":"5809","endLine":492,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":492,"column":62,"nodeType":"5808","messageId":"5809","endLine":492,"endColumn":64},{"ruleId":"5806","severity":1,"message":"5807","line":545,"column":111,"nodeType":"5808","messageId":"5809","endLine":545,"endColumn":113},{"ruleId":"5806","severity":1,"message":"5807","line":545,"column":127,"nodeType":"5808","messageId":"5809","endLine":545,"endColumn":129},{"ruleId":"5806","severity":1,"message":"5807","line":545,"column":139,"nodeType":"5808","messageId":"5809","endLine":545,"endColumn":141},{"ruleId":"5806","severity":1,"message":"5807","line":599,"column":68,"nodeType":"5808","messageId":"5809","endLine":599,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":599,"column":84,"nodeType":"5808","messageId":"5809","endLine":599,"endColumn":86},{"ruleId":"5806","severity":1,"message":"5807","line":599,"column":96,"nodeType":"5808","messageId":"5809","endLine":599,"endColumn":98},{"ruleId":"5949","severity":1,"message":"5950","line":654,"column":92,"nodeType":"5951","messageId":"5952","endLine":654,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":654,"column":115,"nodeType":"5951","messageId":"5952","endLine":654,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":654,"column":136,"nodeType":"5951","messageId":"5952","endLine":654,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":654,"column":159,"nodeType":"5951","messageId":"5952","endLine":654,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":655,"column":34,"nodeType":"5808","messageId":"5809","endLine":655,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":655,"column":50,"nodeType":"5808","messageId":"5809","endLine":655,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":655,"column":62,"nodeType":"5808","messageId":"5809","endLine":655,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":711,"column":92,"nodeType":"5951","messageId":"5952","endLine":711,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":711,"column":115,"nodeType":"5951","messageId":"5952","endLine":711,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":711,"column":136,"nodeType":"5951","messageId":"5952","endLine":711,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":711,"column":159,"nodeType":"5951","messageId":"5952","endLine":711,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":712,"column":34,"nodeType":"5808","messageId":"5809","endLine":712,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":712,"column":50,"nodeType":"5808","messageId":"5809","endLine":712,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":712,"column":62,"nodeType":"5808","messageId":"5809","endLine":712,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":765,"column":92,"nodeType":"5951","messageId":"5952","endLine":765,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":765,"column":115,"nodeType":"5951","messageId":"5952","endLine":765,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":765,"column":136,"nodeType":"5951","messageId":"5952","endLine":765,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":765,"column":159,"nodeType":"5951","messageId":"5952","endLine":765,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":766,"column":34,"nodeType":"5808","messageId":"5809","endLine":766,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":766,"column":50,"nodeType":"5808","messageId":"5809","endLine":766,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":766,"column":62,"nodeType":"5808","messageId":"5809","endLine":766,"endColumn":64},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":11,"column":27,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5927","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5953","line":45,"column":10,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5954","line":45,"column":19,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5889","line":46,"column":10,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5885","line":47,"column":10,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5886","line":47,"column":25,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5928","line":56,"column":10,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":58,"column":10,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5955","line":60,"column":10,"nodeType":"5789","messageId":"5790","endLine":60,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5956","line":60,"column":21,"nodeType":"5789","messageId":"5790","endLine":60,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5957","line":62,"column":8,"nodeType":"5789","messageId":"5790","endLine":62,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5958","line":63,"column":8,"nodeType":"5789","messageId":"5790","endLine":63,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5959","line":63,"column":34,"nodeType":"5789","messageId":"5790","endLine":63,"endColumn":61},{"ruleId":"5787","severity":1,"message":"5960","line":66,"column":23,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":38},{"ruleId":"5787","severity":1,"message":"5961","line":67,"column":23,"nodeType":"5789","messageId":"5790","endLine":67,"endColumn":38},{"ruleId":"5787","severity":1,"message":"5962","line":70,"column":18,"nodeType":"5789","messageId":"5790","endLine":70,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5963","line":76,"column":18,"nodeType":"5789","messageId":"5790","endLine":76,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5841","line":85,"column":9,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":87,"column":9,"nodeType":"5789","messageId":"5790","endLine":87,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":89,"column":9,"nodeType":"5789","messageId":"5790","endLine":89,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":122,"column":21,"nodeType":"5808","messageId":"5809","endLine":122,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":126,"column":12,"nodeType":"5808","endLine":126,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":129,"column":36,"nodeType":"5808","messageId":"5809","endLine":129,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":129,"column":65,"nodeType":"5808","messageId":"5934","endLine":129,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":129,"column":77,"nodeType":"5808","messageId":"5809","endLine":129,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":129,"column":155,"nodeType":"5808","messageId":"5934","endLine":129,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":129,"column":167,"nodeType":"5808","messageId":"5809","endLine":129,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":131,"column":27,"nodeType":"5808","messageId":"5934","endLine":131,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":131,"column":39,"nodeType":"5808","messageId":"5809","endLine":131,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":131,"column":117,"nodeType":"5808","messageId":"5934","endLine":131,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":131,"column":129,"nodeType":"5808","messageId":"5809","endLine":131,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5940","line":134,"column":21,"nodeType":"5789","endLine":134,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5964","line":138,"column":20,"nodeType":"5789","endLine":138,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5965","line":142,"column":20,"nodeType":"5789","endLine":142,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5966","line":146,"column":20,"nodeType":"5789","endLine":146,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5967","line":150,"column":20,"nodeType":"5789","endLine":150,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5935","line":158,"column":20,"nodeType":"5936","endLine":158,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":159,"column":18,"nodeType":"5936","endLine":159,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":165,"column":15,"nodeType":"5936","endLine":165,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5968","line":170,"column":17,"nodeType":"5936","endLine":170,"endColumn":18},{"ruleId":"5797","severity":1,"message":"5969","line":171,"column":23,"nodeType":"5789","endLine":171,"endColumn":36},{"ruleId":"5797","severity":1,"message":"5970","line":173,"column":19,"nodeType":"5936","endLine":173,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5971","line":174,"column":23,"nodeType":"5789","endLine":174,"endColumn":36},{"ruleId":"5797","severity":1,"message":"5972","line":176,"column":19,"nodeType":"5936","endLine":176,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5973","line":177,"column":18,"nodeType":"5789","endLine":177,"endColumn":26},{"ruleId":"5797","severity":1,"message":"5974","line":179,"column":14,"nodeType":"5936","endLine":179,"endColumn":15},{"ruleId":"5797","severity":1,"message":"5975","line":180,"column":18,"nodeType":"5789","endLine":180,"endColumn":26},{"ruleId":"5797","severity":1,"message":"5976","line":182,"column":14,"nodeType":"5936","endLine":182,"endColumn":15},{"ruleId":"5912","severity":1,"message":"5913","line":190,"column":6,"nodeType":"5799","messageId":"5914","endLine":190,"endColumn":81},{"ruleId":"5787","severity":1,"message":"5947","line":192,"column":9,"nodeType":"5789","messageId":"5790","endLine":192,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":213,"column":154,"nodeType":"5808","messageId":"5809","endLine":213,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":217,"column":154,"nodeType":"5808","messageId":"5809","endLine":217,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":218,"column":225,"nodeType":"5808","messageId":"5809","endLine":218,"endColumn":227},{"ruleId":"5806","severity":1,"message":"5807","line":223,"column":170,"nodeType":"5808","messageId":"5809","endLine":223,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5807","line":223,"column":372,"nodeType":"5808","messageId":"5809","endLine":223,"endColumn":374},{"ruleId":"5806","severity":1,"message":"5807","line":224,"column":200,"nodeType":"5808","messageId":"5809","endLine":224,"endColumn":202},{"ruleId":"5806","severity":1,"message":"5807","line":225,"column":263,"nodeType":"5808","messageId":"5809","endLine":225,"endColumn":265},{"ruleId":"5806","severity":1,"message":"5807","line":226,"column":199,"nodeType":"5808","messageId":"5809","endLine":226,"endColumn":201},{"ruleId":"5806","severity":1,"message":"5807","line":228,"column":170,"nodeType":"5808","messageId":"5809","endLine":228,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5807","line":228,"column":372,"nodeType":"5808","messageId":"5809","endLine":228,"endColumn":374},{"ruleId":"5806","severity":1,"message":"5807","line":229,"column":199,"nodeType":"5808","messageId":"5809","endLine":229,"endColumn":201},{"ruleId":"5806","severity":1,"message":"5807","line":230,"column":261,"nodeType":"5808","messageId":"5809","endLine":230,"endColumn":263},{"ruleId":"5806","severity":1,"message":"5807","line":231,"column":198,"nodeType":"5808","messageId":"5809","endLine":231,"endColumn":200},{"ruleId":"5806","severity":1,"message":"5810","line":309,"column":22,"nodeType":"5808","messageId":"5809","endLine":309,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":322,"column":34,"nodeType":"5808","messageId":"5809","endLine":322,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":322,"column":46,"nodeType":"5808","messageId":"5809","endLine":322,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":387,"column":72,"nodeType":"5808","messageId":"5809","endLine":387,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5807","line":387,"column":84,"nodeType":"5808","messageId":"5809","endLine":387,"endColumn":86},{"ruleId":"5806","severity":1,"message":"5807","line":451,"column":107,"nodeType":"5808","messageId":"5809","endLine":451,"endColumn":109},{"ruleId":"5806","severity":1,"message":"5807","line":451,"column":119,"nodeType":"5808","messageId":"5809","endLine":451,"endColumn":121},{"ruleId":"5806","severity":1,"message":"5807","line":516,"column":71,"nodeType":"5808","messageId":"5809","endLine":516,"endColumn":73},{"ruleId":"5806","severity":1,"message":"5807","line":516,"column":83,"nodeType":"5808","messageId":"5809","endLine":516,"endColumn":85},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5927","line":18,"column":10,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5977","line":34,"column":28,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":48},{"ruleId":"5787","severity":1,"message":"5928","line":67,"column":10,"nodeType":"5789","messageId":"5790","endLine":67,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":69,"column":10,"nodeType":"5789","messageId":"5790","endLine":69,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5841","line":100,"column":9,"nodeType":"5789","messageId":"5790","endLine":100,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":102,"column":9,"nodeType":"5789","messageId":"5790","endLine":102,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":104,"column":9,"nodeType":"5789","messageId":"5790","endLine":104,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":143,"column":21,"nodeType":"5808","messageId":"5809","endLine":143,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":147,"column":12,"nodeType":"5808","endLine":147,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":150,"column":36,"nodeType":"5808","messageId":"5809","endLine":150,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":150,"column":65,"nodeType":"5808","messageId":"5934","endLine":150,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":150,"column":77,"nodeType":"5808","messageId":"5809","endLine":150,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":150,"column":155,"nodeType":"5808","messageId":"5934","endLine":150,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":150,"column":167,"nodeType":"5808","messageId":"5809","endLine":150,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":152,"column":27,"nodeType":"5808","messageId":"5934","endLine":152,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":152,"column":39,"nodeType":"5808","messageId":"5809","endLine":152,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":152,"column":117,"nodeType":"5808","messageId":"5934","endLine":152,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":152,"column":129,"nodeType":"5808","messageId":"5809","endLine":152,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":158,"column":20,"nodeType":"5936","endLine":158,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":159,"column":18,"nodeType":"5936","endLine":159,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":165,"column":15,"nodeType":"5936","endLine":165,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":168,"column":20,"nodeType":"5789","endLine":168,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":171,"column":21,"nodeType":"5789","endLine":171,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":175,"column":17,"nodeType":"5789","endLine":175,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":179,"column":17,"nodeType":"5789","endLine":179,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5943","line":183,"column":17,"nodeType":"5789","endLine":183,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":187,"column":22,"nodeType":"5789","endLine":187,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5945","line":191,"column":22,"nodeType":"5789","endLine":191,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":195,"column":30,"nodeType":"5789","endLine":195,"endColumn":50},{"ruleId":"5912","severity":1,"message":"5913","line":204,"column":6,"nodeType":"5799","messageId":"5914","endLine":204,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":206,"column":9,"nodeType":"5789","messageId":"5790","endLine":206,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5948","line":220,"column":9,"nodeType":"5789","messageId":"5790","endLine":220,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5906","line":230,"column":9,"nodeType":"5789","messageId":"5790","endLine":230,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":245,"column":154,"nodeType":"5808","messageId":"5809","endLine":245,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":250,"column":157,"nodeType":"5808","messageId":"5809","endLine":250,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5810","line":372,"column":22,"nodeType":"5808","messageId":"5809","endLine":372,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":386,"column":36,"nodeType":"5808","messageId":"5809","endLine":386,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":386,"column":48,"nodeType":"5808","messageId":"5809","endLine":386,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":386,"column":60,"nodeType":"5808","messageId":"5809","endLine":386,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5807","line":440,"column":74,"nodeType":"5808","messageId":"5809","endLine":440,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":440,"column":86,"nodeType":"5808","messageId":"5809","endLine":440,"endColumn":88},{"ruleId":"5806","severity":1,"message":"5807","line":440,"column":98,"nodeType":"5808","messageId":"5809","endLine":440,"endColumn":100},{"ruleId":"5949","severity":1,"message":"5950","line":494,"column":92,"nodeType":"5951","messageId":"5952","endLine":494,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":494,"column":115,"nodeType":"5951","messageId":"5952","endLine":494,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":494,"column":136,"nodeType":"5951","messageId":"5952","endLine":494,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":494,"column":159,"nodeType":"5951","messageId":"5952","endLine":494,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":495,"column":34,"nodeType":"5808","messageId":"5809","endLine":495,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":495,"column":50,"nodeType":"5808","messageId":"5809","endLine":495,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":495,"column":62,"nodeType":"5808","messageId":"5809","endLine":495,"endColumn":64},{"ruleId":"5806","severity":1,"message":"5807","line":549,"column":111,"nodeType":"5808","messageId":"5809","endLine":549,"endColumn":113},{"ruleId":"5806","severity":1,"message":"5807","line":549,"column":127,"nodeType":"5808","messageId":"5809","endLine":549,"endColumn":129},{"ruleId":"5806","severity":1,"message":"5807","line":549,"column":139,"nodeType":"5808","messageId":"5809","endLine":549,"endColumn":141},{"ruleId":"5806","severity":1,"message":"5807","line":604,"column":68,"nodeType":"5808","messageId":"5809","endLine":604,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":604,"column":84,"nodeType":"5808","messageId":"5809","endLine":604,"endColumn":86},{"ruleId":"5806","severity":1,"message":"5807","line":604,"column":96,"nodeType":"5808","messageId":"5809","endLine":604,"endColumn":98},{"ruleId":"5949","severity":1,"message":"5950","line":660,"column":92,"nodeType":"5951","messageId":"5952","endLine":660,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":660,"column":115,"nodeType":"5951","messageId":"5952","endLine":660,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":660,"column":136,"nodeType":"5951","messageId":"5952","endLine":660,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":660,"column":159,"nodeType":"5951","messageId":"5952","endLine":660,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":661,"column":34,"nodeType":"5808","messageId":"5809","endLine":661,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":661,"column":50,"nodeType":"5808","messageId":"5809","endLine":661,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":661,"column":62,"nodeType":"5808","messageId":"5809","endLine":661,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":718,"column":92,"nodeType":"5951","messageId":"5952","endLine":718,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":718,"column":115,"nodeType":"5951","messageId":"5952","endLine":718,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":718,"column":136,"nodeType":"5951","messageId":"5952","endLine":718,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":718,"column":159,"nodeType":"5951","messageId":"5952","endLine":718,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":719,"column":34,"nodeType":"5808","messageId":"5809","endLine":719,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":719,"column":50,"nodeType":"5808","messageId":"5809","endLine":719,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":719,"column":62,"nodeType":"5808","messageId":"5809","endLine":719,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":773,"column":92,"nodeType":"5951","messageId":"5952","endLine":773,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":773,"column":115,"nodeType":"5951","messageId":"5952","endLine":773,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":773,"column":136,"nodeType":"5951","messageId":"5952","endLine":773,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":773,"column":159,"nodeType":"5951","messageId":"5952","endLine":773,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":774,"column":34,"nodeType":"5808","messageId":"5809","endLine":774,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":774,"column":50,"nodeType":"5808","messageId":"5809","endLine":774,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":774,"column":62,"nodeType":"5808","messageId":"5809","endLine":774,"endColumn":64},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5978","line":8,"column":8,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5979","line":14,"column":34,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":39},{"ruleId":"5787","severity":1,"message":"5927","line":19,"column":10,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5980","line":20,"column":8,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5981","line":53,"column":19,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5982","line":54,"column":17,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5953","line":59,"column":10,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5954","line":59,"column":19,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5928","line":66,"column":10,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":68,"column":10,"nodeType":"5789","messageId":"5790","endLine":68,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5983","line":85,"column":7,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5984","line":85,"column":16,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5985","line":90,"column":8,"nodeType":"5789","messageId":"5790","endLine":90,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5841","line":96,"column":9,"nodeType":"5789","messageId":"5790","endLine":96,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":98,"column":9,"nodeType":"5789","messageId":"5790","endLine":98,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":100,"column":9,"nodeType":"5789","messageId":"5790","endLine":100,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5986","line":106,"column":8,"nodeType":"5789","messageId":"5790","endLine":106,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5987","line":106,"column":20,"nodeType":"5789","messageId":"5790","endLine":106,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5810","line":135,"column":21,"nodeType":"5808","messageId":"5809","endLine":135,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":139,"column":12,"nodeType":"5808","endLine":139,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":142,"column":36,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":142,"column":65,"nodeType":"5808","messageId":"5934","endLine":142,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":142,"column":77,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":142,"column":155,"nodeType":"5808","messageId":"5934","endLine":142,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":142,"column":167,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":144,"column":27,"nodeType":"5808","messageId":"5934","endLine":144,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":144,"column":39,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":144,"column":117,"nodeType":"5808","messageId":"5934","endLine":144,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":144,"column":129,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":150,"column":20,"nodeType":"5936","endLine":150,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":151,"column":18,"nodeType":"5936","endLine":151,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":157,"column":15,"nodeType":"5936","endLine":157,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":160,"column":20,"nodeType":"5789","endLine":160,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":163,"column":21,"nodeType":"5789","endLine":163,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":167,"column":17,"nodeType":"5789","endLine":167,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":171,"column":17,"nodeType":"5789","endLine":171,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":175,"column":22,"nodeType":"5789","endLine":175,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":179,"column":30,"nodeType":"5789","endLine":179,"endColumn":50},{"ruleId":"5797","severity":1,"message":"5988","line":185,"column":10,"nodeType":"5936","endLine":185,"endColumn":12},{"ruleId":"5912","severity":1,"message":"5913","line":188,"column":6,"nodeType":"5799","messageId":"5914","endLine":188,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":190,"column":9,"nodeType":"5789","messageId":"5790","endLine":190,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5948","line":204,"column":9,"nodeType":"5789","messageId":"5790","endLine":204,"endColumn":17},{"ruleId":"5806","severity":1,"message":"5807","line":237,"column":73,"nodeType":"5808","messageId":"5809","endLine":237,"endColumn":75},{"ruleId":"5806","severity":1,"message":"5807","line":254,"column":79,"nodeType":"5808","messageId":"5809","endLine":254,"endColumn":81},{"ruleId":"5806","severity":1,"message":"5807","line":272,"column":78,"nodeType":"5808","messageId":"5809","endLine":272,"endColumn":80},{"ruleId":"5806","severity":1,"message":"5807","line":290,"column":73,"nodeType":"5808","messageId":"5809","endLine":290,"endColumn":75},{"ruleId":"5787","severity":1,"message":"5989","line":297,"column":11,"nodeType":"5789","messageId":"5790","endLine":297,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":319,"column":88,"nodeType":"5808","messageId":"5809","endLine":319,"endColumn":90},{"ruleId":"5806","severity":1,"message":"5807","line":392,"column":107,"nodeType":"5808","messageId":"5809","endLine":392,"endColumn":109},{"ruleId":"5806","severity":1,"message":"5810","line":516,"column":22,"nodeType":"5808","messageId":"5809","endLine":516,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":529,"column":34,"nodeType":"5808","messageId":"5809","endLine":529,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":529,"column":46,"nodeType":"5808","messageId":"5809","endLine":529,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":577,"column":72,"nodeType":"5808","messageId":"5809","endLine":577,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5807","line":577,"column":84,"nodeType":"5808","messageId":"5809","endLine":577,"endColumn":86},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":90,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":113,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":134,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":157,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":626,"column":32,"nodeType":"5808","messageId":"5809","endLine":626,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":626,"column":48,"nodeType":"5808","messageId":"5809","endLine":626,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":674,"column":35,"nodeType":"5808","messageId":"5809","endLine":674,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5807","line":674,"column":51,"nodeType":"5808","messageId":"5809","endLine":674,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":723,"column":66,"nodeType":"5808","messageId":"5809","endLine":723,"endColumn":68},{"ruleId":"5806","severity":1,"message":"5807","line":723,"column":82,"nodeType":"5808","messageId":"5809","endLine":723,"endColumn":84},{"ruleId":"5949","severity":1,"message":"5950","line":772,"column":90,"nodeType":"5951","messageId":"5952","endLine":772,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":772,"column":113,"nodeType":"5951","messageId":"5952","endLine":772,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":772,"column":134,"nodeType":"5951","messageId":"5952","endLine":772,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":772,"column":157,"nodeType":"5951","messageId":"5952","endLine":772,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":773,"column":32,"nodeType":"5808","messageId":"5809","endLine":773,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":773,"column":48,"nodeType":"5808","messageId":"5809","endLine":773,"endColumn":50},{"ruleId":"5949","severity":1,"message":"5950","line":823,"column":90,"nodeType":"5951","messageId":"5952","endLine":823,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":823,"column":113,"nodeType":"5951","messageId":"5952","endLine":823,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":823,"column":134,"nodeType":"5951","messageId":"5952","endLine":823,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":823,"column":157,"nodeType":"5951","messageId":"5952","endLine":823,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":824,"column":32,"nodeType":"5808","messageId":"5809","endLine":824,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":824,"column":48,"nodeType":"5808","messageId":"5809","endLine":824,"endColumn":50},{"ruleId":"5949","severity":1,"message":"5950","line":873,"column":90,"nodeType":"5951","messageId":"5952","endLine":873,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":873,"column":113,"nodeType":"5951","messageId":"5952","endLine":873,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":873,"column":134,"nodeType":"5951","messageId":"5952","endLine":873,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":873,"column":157,"nodeType":"5951","messageId":"5952","endLine":873,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":874,"column":32,"nodeType":"5808","messageId":"5809","endLine":874,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":874,"column":48,"nodeType":"5808","messageId":"5809","endLine":874,"endColumn":50},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5991","line":86,"column":9,"nodeType":"5789","messageId":"5790","endLine":86,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":87,"column":9,"nodeType":"5789","messageId":"5790","endLine":87,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":88,"column":9,"nodeType":"5789","messageId":"5790","endLine":88,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":89,"column":9,"nodeType":"5789","messageId":"5790","endLine":89,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":90,"column":9,"nodeType":"5789","messageId":"5790","endLine":90,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":96,"column":9,"nodeType":"5789","messageId":"5790","endLine":96,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":98,"column":9,"nodeType":"5789","messageId":"5790","endLine":98,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":100,"column":9,"nodeType":"5789","messageId":"5790","endLine":100,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5989","line":113,"column":9,"nodeType":"5789","messageId":"5790","endLine":113,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5996","line":164,"column":7,"nodeType":"5789","messageId":"5790","endLine":164,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":167,"column":21,"nodeType":"5808","messageId":"5809","endLine":167,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":171,"column":12,"nodeType":"5808","endLine":171,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":173,"column":21,"nodeType":"5789","endLine":173,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":177,"column":24,"nodeType":"5789","endLine":177,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":179,"column":20,"nodeType":"5936","endLine":179,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5999","line":182,"column":26,"nodeType":"5789","endLine":182,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6000","line":184,"column":22,"nodeType":"5936","endLine":184,"endColumn":23},{"ruleId":"5797","severity":1,"message":"6001","line":187,"column":26,"nodeType":"5789","endLine":187,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6002","line":189,"column":22,"nodeType":"5936","endLine":189,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5939","line":192,"column":20,"nodeType":"5789","endLine":192,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":196,"column":24,"nodeType":"5789","endLine":196,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6004","line":201,"column":26,"nodeType":"5789","endLine":201,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6005","line":205,"column":26,"nodeType":"5789","endLine":205,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6006","line":209,"column":21,"nodeType":"5789","endLine":209,"endColumn":32},{"ruleId":"5797","severity":1,"message":"6007","line":213,"column":23,"nodeType":"5789","endLine":213,"endColumn":36},{"ruleId":"5797","severity":1,"message":"6008","line":217,"column":23,"nodeType":"5789","endLine":217,"endColumn":36},{"ruleId":"5797","severity":1,"message":"5941","line":221,"column":17,"nodeType":"5789","endLine":221,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":225,"column":17,"nodeType":"5789","endLine":225,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5943","line":229,"column":17,"nodeType":"5789","endLine":229,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":233,"column":22,"nodeType":"5789","endLine":233,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5945","line":237,"column":22,"nodeType":"5789","endLine":237,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":241,"column":30,"nodeType":"5789","endLine":241,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":243,"column":26,"nodeType":"5936","endLine":243,"endColumn":27},{"ruleId":"5797","severity":1,"message":"6010","line":246,"column":32,"nodeType":"5789","endLine":246,"endColumn":54},{"ruleId":"5797","severity":1,"message":"6011","line":248,"column":28,"nodeType":"5936","endLine":248,"endColumn":29},{"ruleId":"5797","severity":1,"message":"6012","line":251,"column":32,"nodeType":"5789","endLine":251,"endColumn":54},{"ruleId":"5797","severity":1,"message":"6013","line":253,"column":28,"nodeType":"5936","endLine":253,"endColumn":29},{"ruleId":"5912","severity":1,"message":"5913","line":262,"column":6,"nodeType":"5799","messageId":"5914","endLine":262,"endColumn":51},{"ruleId":"5787","severity":1,"message":"5947","line":263,"column":9,"nodeType":"5789","messageId":"5790","endLine":263,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":277,"column":70,"nodeType":"5808","messageId":"5809","endLine":277,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":293,"column":77,"nodeType":"5808","messageId":"5809","endLine":293,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":315,"column":154,"nodeType":"5808","messageId":"5809","endLine":315,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":318,"column":157,"nodeType":"5808","messageId":"5809","endLine":318,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":325,"column":157,"nodeType":"5808","messageId":"5809","endLine":325,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":330,"column":166,"nodeType":"5808","messageId":"5809","endLine":330,"endColumn":168},{"ruleId":"5806","severity":1,"message":"5807","line":339,"column":166,"nodeType":"5808","messageId":"5809","endLine":339,"endColumn":168},{"ruleId":"5806","severity":1,"message":"5807","line":344,"column":157,"nodeType":"5808","messageId":"5809","endLine":344,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5810","line":569,"column":22,"nodeType":"5808","messageId":"5809","endLine":569,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":575,"column":22,"nodeType":"5808","messageId":"5809","endLine":575,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":588,"column":36,"nodeType":"5808","messageId":"5809","endLine":588,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":588,"column":65,"nodeType":"5808","messageId":"5809","endLine":588,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":652,"column":74,"nodeType":"5808","messageId":"5809","endLine":652,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":652,"column":90,"nodeType":"5808","messageId":"5809","endLine":652,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":652,"column":102,"nodeType":"5808","messageId":"5809","endLine":652,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":716,"column":154,"nodeType":"5808","messageId":"5809","endLine":716,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":716,"column":170,"nodeType":"5808","messageId":"5809","endLine":716,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5807","line":716,"column":182,"nodeType":"5808","messageId":"5809","endLine":716,"endColumn":184},{"ruleId":"5949","severity":1,"message":"5950","line":780,"column":92,"nodeType":"5951","messageId":"5952","endLine":780,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":780,"column":115,"nodeType":"5951","messageId":"5952","endLine":780,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":780,"column":136,"nodeType":"5951","messageId":"5952","endLine":780,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":780,"column":159,"nodeType":"5951","messageId":"5952","endLine":780,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":780,"column":320,"nodeType":"5808","messageId":"5809","endLine":780,"endColumn":322},{"ruleId":"5806","severity":1,"message":"5807","line":780,"column":336,"nodeType":"5808","messageId":"5809","endLine":780,"endColumn":338},{"ruleId":"5806","severity":1,"message":"5807","line":780,"column":352,"nodeType":"5808","messageId":"5809","endLine":780,"endColumn":354},{"ruleId":"5949","severity":1,"message":"5950","line":844,"column":93,"nodeType":"5951","messageId":"5952","endLine":844,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":844,"column":116,"nodeType":"5951","messageId":"5952","endLine":844,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":844,"column":137,"nodeType":"5951","messageId":"5952","endLine":844,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":844,"column":160,"nodeType":"5951","messageId":"5952","endLine":844,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":844,"column":438,"nodeType":"5808","messageId":"5809","endLine":844,"endColumn":440},{"ruleId":"5806","severity":1,"message":"5807","line":844,"column":454,"nodeType":"5808","messageId":"5809","endLine":844,"endColumn":456},{"ruleId":"5806","severity":1,"message":"5807","line":844,"column":470,"nodeType":"5808","messageId":"5809","endLine":844,"endColumn":472},{"ruleId":"5806","severity":1,"message":"5807","line":908,"column":187,"nodeType":"5808","messageId":"5809","endLine":908,"endColumn":189},{"ruleId":"5806","severity":1,"message":"5807","line":908,"column":203,"nodeType":"5808","messageId":"5809","endLine":908,"endColumn":205},{"ruleId":"5806","severity":1,"message":"5807","line":908,"column":219,"nodeType":"5808","messageId":"5809","endLine":908,"endColumn":221},{"ruleId":"5949","severity":1,"message":"5950","line":973,"column":92,"nodeType":"5951","messageId":"5952","endLine":973,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":973,"column":115,"nodeType":"5951","messageId":"5952","endLine":973,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":973,"column":136,"nodeType":"5951","messageId":"5952","endLine":973,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":973,"column":159,"nodeType":"5951","messageId":"5952","endLine":973,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":973,"column":356,"nodeType":"5808","messageId":"5809","endLine":973,"endColumn":358},{"ruleId":"5806","severity":1,"message":"5807","line":973,"column":372,"nodeType":"5808","messageId":"5809","endLine":973,"endColumn":374},{"ruleId":"5806","severity":1,"message":"5807","line":973,"column":388,"nodeType":"5808","messageId":"5809","endLine":973,"endColumn":390},{"ruleId":"5949","severity":1,"message":"5950","line":1037,"column":93,"nodeType":"5951","messageId":"5952","endLine":1037,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":1037,"column":116,"nodeType":"5951","messageId":"5952","endLine":1037,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":1037,"column":137,"nodeType":"5951","messageId":"5952","endLine":1037,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":1037,"column":160,"nodeType":"5951","messageId":"5952","endLine":1037,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":1037,"column":471,"nodeType":"5808","messageId":"5809","endLine":1037,"endColumn":473},{"ruleId":"5806","severity":1,"message":"5807","line":1037,"column":487,"nodeType":"5808","messageId":"5809","endLine":1037,"endColumn":489},{"ruleId":"5806","severity":1,"message":"5807","line":1037,"column":503,"nodeType":"5808","messageId":"5809","endLine":1037,"endColumn":505},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5991","line":69,"column":9,"nodeType":"5789","messageId":"5790","endLine":69,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":70,"column":9,"nodeType":"5789","messageId":"5790","endLine":70,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":71,"column":9,"nodeType":"5789","messageId":"5790","endLine":71,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":72,"column":9,"nodeType":"5789","messageId":"5790","endLine":72,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":73,"column":9,"nodeType":"5789","messageId":"5790","endLine":73,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":79,"column":9,"nodeType":"5789","messageId":"5790","endLine":79,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":81,"column":9,"nodeType":"5789","messageId":"5790","endLine":81,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":83,"column":9,"nodeType":"5789","messageId":"5790","endLine":83,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5989","line":94,"column":9,"nodeType":"5789","messageId":"5790","endLine":94,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5996","line":140,"column":7,"nodeType":"5789","messageId":"5790","endLine":140,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":143,"column":21,"nodeType":"5808","messageId":"5809","endLine":143,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":147,"column":12,"nodeType":"5808","endLine":147,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":149,"column":21,"nodeType":"5789","endLine":149,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":153,"column":24,"nodeType":"5789","endLine":153,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":155,"column":20,"nodeType":"5936","endLine":155,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5939","line":158,"column":20,"nodeType":"5789","endLine":158,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":162,"column":24,"nodeType":"5789","endLine":162,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6006","line":166,"column":21,"nodeType":"5789","endLine":166,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":170,"column":17,"nodeType":"5789","endLine":170,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":174,"column":17,"nodeType":"5789","endLine":174,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":178,"column":22,"nodeType":"5789","endLine":178,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":182,"column":30,"nodeType":"5789","endLine":182,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":184,"column":26,"nodeType":"5936","endLine":184,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":192,"column":6,"nodeType":"5799","messageId":"5914","endLine":192,"endColumn":51},{"ruleId":"5787","severity":1,"message":"5947","line":193,"column":9,"nodeType":"5789","messageId":"5790","endLine":193,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":207,"column":70,"nodeType":"5808","messageId":"5809","endLine":207,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":223,"column":77,"nodeType":"5808","messageId":"5809","endLine":223,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5810","line":479,"column":22,"nodeType":"5808","messageId":"5809","endLine":479,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":488,"column":22,"nodeType":"5808","messageId":"5809","endLine":488,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":503,"column":36,"nodeType":"5808","messageId":"5809","endLine":503,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":503,"column":65,"nodeType":"5808","messageId":"5809","endLine":503,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":545,"column":74,"nodeType":"5808","messageId":"5809","endLine":545,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":545,"column":90,"nodeType":"5808","messageId":"5809","endLine":545,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":545,"column":102,"nodeType":"5808","messageId":"5809","endLine":545,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":587,"column":145,"nodeType":"5808","messageId":"5809","endLine":587,"endColumn":147},{"ruleId":"5806","severity":1,"message":"5807","line":587,"column":161,"nodeType":"5808","messageId":"5809","endLine":587,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":587,"column":173,"nodeType":"5808","messageId":"5809","endLine":587,"endColumn":175},{"ruleId":"5949","severity":1,"message":"5950","line":629,"column":92,"nodeType":"5951","messageId":"5952","endLine":629,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":629,"column":115,"nodeType":"5951","messageId":"5952","endLine":629,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":629,"column":136,"nodeType":"5951","messageId":"5952","endLine":629,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":629,"column":159,"nodeType":"5951","messageId":"5952","endLine":629,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":629,"column":320,"nodeType":"5808","messageId":"5809","endLine":629,"endColumn":322},{"ruleId":"5806","severity":1,"message":"5807","line":629,"column":336,"nodeType":"5808","messageId":"5809","endLine":629,"endColumn":338},{"ruleId":"5806","severity":1,"message":"5807","line":629,"column":352,"nodeType":"5808","messageId":"5809","endLine":629,"endColumn":354},{"ruleId":"5949","severity":1,"message":"5950","line":671,"column":93,"nodeType":"5951","messageId":"5952","endLine":671,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":671,"column":116,"nodeType":"5951","messageId":"5952","endLine":671,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":671,"column":137,"nodeType":"5951","messageId":"5952","endLine":671,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":671,"column":160,"nodeType":"5951","messageId":"5952","endLine":671,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":671,"column":429,"nodeType":"5808","messageId":"5809","endLine":671,"endColumn":431},{"ruleId":"5806","severity":1,"message":"5807","line":671,"column":445,"nodeType":"5808","messageId":"5809","endLine":671,"endColumn":447},{"ruleId":"5806","severity":1,"message":"5807","line":671,"column":461,"nodeType":"5808","messageId":"5809","endLine":671,"endColumn":463},{"ruleId":"5806","severity":1,"message":"5807","line":713,"column":178,"nodeType":"5808","messageId":"5809","endLine":713,"endColumn":180},{"ruleId":"5806","severity":1,"message":"5807","line":713,"column":194,"nodeType":"5808","messageId":"5809","endLine":713,"endColumn":196},{"ruleId":"5806","severity":1,"message":"5807","line":713,"column":210,"nodeType":"5808","messageId":"5809","endLine":713,"endColumn":212},{"ruleId":"5949","severity":1,"message":"5950","line":756,"column":92,"nodeType":"5951","messageId":"5952","endLine":756,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":756,"column":115,"nodeType":"5951","messageId":"5952","endLine":756,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":756,"column":136,"nodeType":"5951","messageId":"5952","endLine":756,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":756,"column":159,"nodeType":"5951","messageId":"5952","endLine":756,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":756,"column":356,"nodeType":"5808","messageId":"5809","endLine":756,"endColumn":358},{"ruleId":"5806","severity":1,"message":"5807","line":756,"column":372,"nodeType":"5808","messageId":"5809","endLine":756,"endColumn":374},{"ruleId":"5806","severity":1,"message":"5807","line":756,"column":388,"nodeType":"5808","messageId":"5809","endLine":756,"endColumn":390},{"ruleId":"5949","severity":1,"message":"5950","line":798,"column":93,"nodeType":"5951","messageId":"5952","endLine":798,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":798,"column":116,"nodeType":"5951","messageId":"5952","endLine":798,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":798,"column":137,"nodeType":"5951","messageId":"5952","endLine":798,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":798,"column":160,"nodeType":"5951","messageId":"5952","endLine":798,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":798,"column":462,"nodeType":"5808","messageId":"5809","endLine":798,"endColumn":464},{"ruleId":"5806","severity":1,"message":"5807","line":798,"column":478,"nodeType":"5808","messageId":"5809","endLine":798,"endColumn":480},{"ruleId":"5806","severity":1,"message":"5807","line":798,"column":494,"nodeType":"5808","messageId":"5809","endLine":798,"endColumn":496},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6014","line":40,"column":10,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6015","line":40,"column":19,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5991","line":94,"column":9,"nodeType":"5789","messageId":"5790","endLine":94,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":95,"column":9,"nodeType":"5789","messageId":"5790","endLine":95,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":96,"column":9,"nodeType":"5789","messageId":"5790","endLine":96,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":97,"column":9,"nodeType":"5789","messageId":"5790","endLine":97,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":98,"column":9,"nodeType":"5789","messageId":"5790","endLine":98,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":104,"column":9,"nodeType":"5789","messageId":"5790","endLine":104,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":106,"column":9,"nodeType":"5789","messageId":"5790","endLine":106,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":108,"column":9,"nodeType":"5789","messageId":"5790","endLine":108,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5989","line":111,"column":9,"nodeType":"5789","messageId":"5790","endLine":111,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5996","line":142,"column":7,"nodeType":"5789","messageId":"5790","endLine":142,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":148,"column":21,"nodeType":"5808","messageId":"5809","endLine":148,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":152,"column":12,"nodeType":"5808","endLine":152,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":154,"column":21,"nodeType":"5789","endLine":154,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":158,"column":24,"nodeType":"5789","endLine":158,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":160,"column":20,"nodeType":"5936","endLine":160,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5999","line":163,"column":26,"nodeType":"5789","endLine":163,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6000","line":165,"column":22,"nodeType":"5936","endLine":165,"endColumn":23},{"ruleId":"5797","severity":1,"message":"6001","line":168,"column":26,"nodeType":"5789","endLine":168,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6002","line":170,"column":22,"nodeType":"5936","endLine":170,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5939","line":173,"column":20,"nodeType":"5789","endLine":173,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":177,"column":24,"nodeType":"5789","endLine":177,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6004","line":182,"column":26,"nodeType":"5789","endLine":182,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6005","line":186,"column":26,"nodeType":"5789","endLine":186,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6006","line":190,"column":21,"nodeType":"5789","endLine":190,"endColumn":32},{"ruleId":"5797","severity":1,"message":"6007","line":194,"column":23,"nodeType":"5789","endLine":194,"endColumn":36},{"ruleId":"5797","severity":1,"message":"6008","line":198,"column":23,"nodeType":"5789","endLine":198,"endColumn":36},{"ruleId":"5797","severity":1,"message":"5941","line":202,"column":17,"nodeType":"5789","endLine":202,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":206,"column":17,"nodeType":"5789","endLine":206,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5943","line":210,"column":17,"nodeType":"5789","endLine":210,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":214,"column":22,"nodeType":"5789","endLine":214,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5945","line":218,"column":22,"nodeType":"5789","endLine":218,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":222,"column":30,"nodeType":"5789","endLine":222,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":224,"column":26,"nodeType":"5936","endLine":224,"endColumn":27},{"ruleId":"5797","severity":1,"message":"6010","line":227,"column":32,"nodeType":"5789","endLine":227,"endColumn":54},{"ruleId":"5797","severity":1,"message":"6011","line":229,"column":28,"nodeType":"5936","endLine":229,"endColumn":29},{"ruleId":"5797","severity":1,"message":"6012","line":232,"column":32,"nodeType":"5789","endLine":232,"endColumn":54},{"ruleId":"5797","severity":1,"message":"6013","line":234,"column":28,"nodeType":"5936","endLine":234,"endColumn":29},{"ruleId":"5912","severity":1,"message":"5913","line":243,"column":6,"nodeType":"5799","messageId":"5914","endLine":243,"endColumn":51},{"ruleId":"5787","severity":1,"message":"5947","line":244,"column":9,"nodeType":"5789","messageId":"5790","endLine":244,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":258,"column":70,"nodeType":"5808","messageId":"5809","endLine":258,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":274,"column":77,"nodeType":"5808","messageId":"5809","endLine":274,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":296,"column":154,"nodeType":"5808","messageId":"5809","endLine":296,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":299,"column":157,"nodeType":"5808","messageId":"5809","endLine":299,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":306,"column":157,"nodeType":"5808","messageId":"5809","endLine":306,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":312,"column":166,"nodeType":"5808","messageId":"5809","endLine":312,"endColumn":168},{"ruleId":"5806","severity":1,"message":"5807","line":322,"column":166,"nodeType":"5808","messageId":"5809","endLine":322,"endColumn":168},{"ruleId":"5806","severity":1,"message":"5807","line":328,"column":157,"nodeType":"5808","messageId":"5809","endLine":328,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5810","line":597,"column":22,"nodeType":"5808","messageId":"5809","endLine":597,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":606,"column":22,"nodeType":"5808","messageId":"5809","endLine":606,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":621,"column":36,"nodeType":"5808","messageId":"5809","endLine":621,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":621,"column":65,"nodeType":"5808","messageId":"5809","endLine":621,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":685,"column":74,"nodeType":"5808","messageId":"5809","endLine":685,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":685,"column":90,"nodeType":"5808","messageId":"5809","endLine":685,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":685,"column":102,"nodeType":"5808","messageId":"5809","endLine":685,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":749,"column":145,"nodeType":"5808","messageId":"5809","endLine":749,"endColumn":147},{"ruleId":"5806","severity":1,"message":"5807","line":749,"column":161,"nodeType":"5808","messageId":"5809","endLine":749,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":749,"column":173,"nodeType":"5808","messageId":"5809","endLine":749,"endColumn":175},{"ruleId":"5806","severity":1,"message":"5807","line":813,"column":355,"nodeType":"5808","messageId":"5809","endLine":813,"endColumn":357},{"ruleId":"5806","severity":1,"message":"5807","line":813,"column":371,"nodeType":"5808","messageId":"5809","endLine":813,"endColumn":373},{"ruleId":"5806","severity":1,"message":"5807","line":813,"column":387,"nodeType":"5808","messageId":"5809","endLine":813,"endColumn":389},{"ruleId":"5806","severity":1,"message":"5807","line":877,"column":463,"nodeType":"5808","messageId":"5809","endLine":877,"endColumn":465},{"ruleId":"5806","severity":1,"message":"5807","line":877,"column":479,"nodeType":"5808","messageId":"5809","endLine":877,"endColumn":481},{"ruleId":"5806","severity":1,"message":"5807","line":877,"column":495,"nodeType":"5808","messageId":"5809","endLine":877,"endColumn":497},{"ruleId":"5806","severity":1,"message":"5807","line":941,"column":178,"nodeType":"5808","messageId":"5809","endLine":941,"endColumn":180},{"ruleId":"5806","severity":1,"message":"5807","line":941,"column":194,"nodeType":"5808","messageId":"5809","endLine":941,"endColumn":196},{"ruleId":"5806","severity":1,"message":"5807","line":941,"column":210,"nodeType":"5808","messageId":"5809","endLine":941,"endColumn":212},{"ruleId":"5806","severity":1,"message":"5807","line":1006,"column":390,"nodeType":"5808","messageId":"5809","endLine":1006,"endColumn":392},{"ruleId":"5806","severity":1,"message":"5807","line":1006,"column":406,"nodeType":"5808","messageId":"5809","endLine":1006,"endColumn":408},{"ruleId":"5806","severity":1,"message":"5807","line":1006,"column":422,"nodeType":"5808","messageId":"5809","endLine":1006,"endColumn":424},{"ruleId":"5806","severity":1,"message":"5807","line":1070,"column":496,"nodeType":"5808","messageId":"5809","endLine":1070,"endColumn":498},{"ruleId":"5806","severity":1,"message":"5807","line":1070,"column":512,"nodeType":"5808","messageId":"5809","endLine":1070,"endColumn":514},{"ruleId":"5806","severity":1,"message":"5807","line":1070,"column":528,"nodeType":"5808","messageId":"5809","endLine":1070,"endColumn":530},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6016","line":18,"column":9,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5991","line":64,"column":9,"nodeType":"5789","messageId":"5790","endLine":64,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":65,"column":9,"nodeType":"5789","messageId":"5790","endLine":65,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":66,"column":9,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":67,"column":9,"nodeType":"5789","messageId":"5790","endLine":67,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":68,"column":9,"nodeType":"5789","messageId":"5790","endLine":68,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":74,"column":9,"nodeType":"5789","messageId":"5790","endLine":74,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":76,"column":9,"nodeType":"5789","messageId":"5790","endLine":76,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":78,"column":9,"nodeType":"5789","messageId":"5790","endLine":78,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5989","line":88,"column":9,"nodeType":"5789","messageId":"5790","endLine":88,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5996","line":133,"column":7,"nodeType":"5789","messageId":"5790","endLine":133,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":136,"column":21,"nodeType":"5808","messageId":"5809","endLine":136,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":140,"column":12,"nodeType":"5808","endLine":140,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":142,"column":21,"nodeType":"5789","endLine":142,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":146,"column":24,"nodeType":"5789","endLine":146,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":148,"column":20,"nodeType":"5936","endLine":148,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5939","line":151,"column":20,"nodeType":"5789","endLine":151,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":155,"column":24,"nodeType":"5789","endLine":155,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6006","line":159,"column":21,"nodeType":"5789","endLine":159,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":163,"column":17,"nodeType":"5789","endLine":163,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":167,"column":17,"nodeType":"5789","endLine":167,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5946","line":171,"column":30,"nodeType":"5789","endLine":171,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":173,"column":26,"nodeType":"5936","endLine":173,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":181,"column":6,"nodeType":"5799","messageId":"5914","endLine":181,"endColumn":51},{"ruleId":"5787","severity":1,"message":"5947","line":182,"column":9,"nodeType":"5789","messageId":"5790","endLine":182,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":196,"column":70,"nodeType":"5808","messageId":"5809","endLine":196,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":212,"column":72,"nodeType":"5808","messageId":"5809","endLine":212,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":458,"column":22,"nodeType":"5808","messageId":"5809","endLine":458,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":467,"column":22,"nodeType":"5808","messageId":"5809","endLine":467,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":482,"column":36,"nodeType":"5808","messageId":"5809","endLine":482,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":482,"column":65,"nodeType":"5808","messageId":"5809","endLine":482,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":522,"column":74,"nodeType":"5808","messageId":"5809","endLine":522,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":522,"column":90,"nodeType":"5808","messageId":"5809","endLine":522,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":522,"column":102,"nodeType":"5808","messageId":"5809","endLine":522,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":562,"column":145,"nodeType":"5808","messageId":"5809","endLine":562,"endColumn":147},{"ruleId":"5806","severity":1,"message":"5807","line":562,"column":161,"nodeType":"5808","messageId":"5809","endLine":562,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":562,"column":173,"nodeType":"5808","messageId":"5809","endLine":562,"endColumn":175},{"ruleId":"5949","severity":1,"message":"5950","line":602,"column":92,"nodeType":"5951","messageId":"5952","endLine":602,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":602,"column":115,"nodeType":"5951","messageId":"5952","endLine":602,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":602,"column":136,"nodeType":"5951","messageId":"5952","endLine":602,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":602,"column":159,"nodeType":"5951","messageId":"5952","endLine":602,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":602,"column":320,"nodeType":"5808","messageId":"5809","endLine":602,"endColumn":322},{"ruleId":"5806","severity":1,"message":"5807","line":602,"column":336,"nodeType":"5808","messageId":"5809","endLine":602,"endColumn":338},{"ruleId":"5806","severity":1,"message":"5807","line":602,"column":352,"nodeType":"5808","messageId":"5809","endLine":602,"endColumn":354},{"ruleId":"5949","severity":1,"message":"5950","line":642,"column":93,"nodeType":"5951","messageId":"5952","endLine":642,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":642,"column":116,"nodeType":"5951","messageId":"5952","endLine":642,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":642,"column":137,"nodeType":"5951","messageId":"5952","endLine":642,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":642,"column":160,"nodeType":"5951","messageId":"5952","endLine":642,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":642,"column":429,"nodeType":"5808","messageId":"5809","endLine":642,"endColumn":431},{"ruleId":"5806","severity":1,"message":"5807","line":642,"column":445,"nodeType":"5808","messageId":"5809","endLine":642,"endColumn":447},{"ruleId":"5806","severity":1,"message":"5807","line":642,"column":461,"nodeType":"5808","messageId":"5809","endLine":642,"endColumn":463},{"ruleId":"5806","severity":1,"message":"5807","line":682,"column":178,"nodeType":"5808","messageId":"5809","endLine":682,"endColumn":180},{"ruleId":"5806","severity":1,"message":"5807","line":682,"column":194,"nodeType":"5808","messageId":"5809","endLine":682,"endColumn":196},{"ruleId":"5806","severity":1,"message":"5807","line":682,"column":210,"nodeType":"5808","messageId":"5809","endLine":682,"endColumn":212},{"ruleId":"5949","severity":1,"message":"5950","line":723,"column":92,"nodeType":"5951","messageId":"5952","endLine":723,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":723,"column":115,"nodeType":"5951","messageId":"5952","endLine":723,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":723,"column":136,"nodeType":"5951","messageId":"5952","endLine":723,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":723,"column":159,"nodeType":"5951","messageId":"5952","endLine":723,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":723,"column":356,"nodeType":"5808","messageId":"5809","endLine":723,"endColumn":358},{"ruleId":"5806","severity":1,"message":"5807","line":723,"column":372,"nodeType":"5808","messageId":"5809","endLine":723,"endColumn":374},{"ruleId":"5806","severity":1,"message":"5807","line":723,"column":388,"nodeType":"5808","messageId":"5809","endLine":723,"endColumn":390},{"ruleId":"5949","severity":1,"message":"5950","line":763,"column":93,"nodeType":"5951","messageId":"5952","endLine":763,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":763,"column":116,"nodeType":"5951","messageId":"5952","endLine":763,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":763,"column":137,"nodeType":"5951","messageId":"5952","endLine":763,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":763,"column":160,"nodeType":"5951","messageId":"5952","endLine":763,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":763,"column":462,"nodeType":"5808","messageId":"5809","endLine":763,"endColumn":464},{"ruleId":"5806","severity":1,"message":"5807","line":763,"column":478,"nodeType":"5808","messageId":"5809","endLine":763,"endColumn":480},{"ruleId":"5806","severity":1,"message":"5807","line":763,"column":494,"nodeType":"5808","messageId":"5809","endLine":763,"endColumn":496},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5878","line":6,"column":9,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5879","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5880","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5927","line":14,"column":10,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5980","line":15,"column":8,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5881","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5883","line":25,"column":10,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5885","line":26,"column":10,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5886","line":26,"column":25,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5887","line":27,"column":10,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5888","line":27,"column":28,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":47},{"ruleId":"5787","severity":1,"message":"5889","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":28,"column":25,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5895","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5896","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5899","line":33,"column":10,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5900","line":33,"column":21,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5901","line":34,"column":10,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5902","line":34,"column":25,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":41},{"ruleId":"5787","severity":1,"message":"6017","line":42,"column":22,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5906","line":57,"column":9,"nodeType":"5789","messageId":"5790","endLine":57,"endColumn":23},{"ruleId":"6018","severity":1,"message":"6019","line":102,"column":13,"nodeType":"5789","messageId":"6020","endLine":102,"endColumn":14},{"ruleId":"6018","severity":1,"message":"6019","line":110,"column":13,"nodeType":"5789","messageId":"6020","endLine":110,"endColumn":14},{"ruleId":"6018","severity":1,"message":"6019","line":118,"column":13,"nodeType":"5789","messageId":"6020","endLine":118,"endColumn":14},{"ruleId":"5806","severity":1,"message":"5810","line":128,"column":23,"nodeType":"5808","messageId":"5809","endLine":128,"endColumn":25},{"ruleId":"5797","severity":1,"message":"6021","line":131,"column":22,"nodeType":"5789","endLine":131,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5910","line":135,"column":12,"nodeType":"5808","endLine":135,"endColumn":20},{"ruleId":"5912","severity":1,"message":"5913","line":140,"column":5,"nodeType":"5799","messageId":"5914","endLine":140,"endColumn":71},{"ruleId":"5806","severity":1,"message":"5807","line":323,"column":32,"nodeType":"5808","messageId":"5809","endLine":323,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":349,"column":46,"nodeType":"5808","messageId":"5809","endLine":349,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":356,"column":39,"nodeType":"5808","messageId":"5809","endLine":356,"endColumn":41},{"ruleId":"5806","severity":1,"message":"5807","line":356,"column":57,"nodeType":"5808","messageId":"5809","endLine":356,"endColumn":59},{"ruleId":"5806","severity":1,"message":"5807","line":382,"column":46,"nodeType":"5808","messageId":"5809","endLine":382,"endColumn":48},{"ruleId":"5787","severity":1,"message":"6022","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":12},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6023","line":4,"column":9,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":32},{"ruleId":"5787","severity":1,"message":"6024","line":4,"column":50,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":60},{"ruleId":"5787","severity":1,"message":"6025","line":4,"column":62,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":68},{"ruleId":"5787","severity":1,"message":"5891","line":12,"column":5,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6026","line":13,"column":7,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6027","line":14,"column":3,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6028","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6029","line":16,"column":3,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6030","line":17,"column":10,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":17},{"ruleId":"5806","severity":1,"message":"5810","line":59,"column":16,"nodeType":"5808","messageId":"5809","endLine":59,"endColumn":18},{"ruleId":"5797","severity":1,"message":"5910","line":80,"column":16,"nodeType":"5808","endLine":80,"endColumn":24},{"ruleId":"5797","severity":1,"message":"6031","line":99,"column":8,"nodeType":"5799","endLine":99,"endColumn":16,"suggestions":"6032"},{"ruleId":"5797","severity":1,"message":"6033","line":112,"column":8,"nodeType":"5799","endLine":112,"endColumn":18,"suggestions":"6034"},{"ruleId":"5787","severity":1,"message":"6035","line":113,"column":14,"nodeType":"5789","messageId":"5790","endLine":113,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6036","line":126,"column":10,"nodeType":"5789","messageId":"5790","endLine":126,"endColumn":16},{"ruleId":"5806","severity":1,"message":"5807","line":140,"column":18,"nodeType":"5808","messageId":"5809","endLine":140,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":97,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":99},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":196,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":198},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":228,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":230},{"ruleId":"5806","severity":1,"message":"5810","line":160,"column":298,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":300},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":312,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":314},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":406,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":408},{"ruleId":"5806","severity":1,"message":"5807","line":161,"column":79,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":81},{"ruleId":"5806","severity":1,"message":"5807","line":161,"column":179,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":181},{"ruleId":"5806","severity":1,"message":"5807","line":161,"column":211,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":213},{"ruleId":"5806","severity":1,"message":"5810","line":161,"column":294,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":296},{"ruleId":"5806","severity":1,"message":"5807","line":161,"column":308,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":310},{"ruleId":"5806","severity":1,"message":"5807","line":162,"column":80,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5807","line":162,"column":181,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":183},{"ruleId":"5806","severity":1,"message":"5807","line":162,"column":213,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":215},{"ruleId":"5806","severity":1,"message":"5810","line":162,"column":296,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":298},{"ruleId":"5806","severity":1,"message":"5807","line":162,"column":310,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":312},{"ruleId":"5806","severity":1,"message":"5807","line":163,"column":80,"nodeType":"5808","messageId":"5809","endLine":163,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5807","line":163,"column":178,"nodeType":"5808","messageId":"5809","endLine":163,"endColumn":180},{"ruleId":"5806","severity":1,"message":"5807","line":163,"column":210,"nodeType":"5808","messageId":"5809","endLine":163,"endColumn":212},{"ruleId":"5806","severity":1,"message":"5810","line":163,"column":293,"nodeType":"5808","messageId":"5809","endLine":163,"endColumn":295},{"ruleId":"5806","severity":1,"message":"5807","line":163,"column":307,"nodeType":"5808","messageId":"5809","endLine":163,"endColumn":309},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5854","line":3,"column":37,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":47},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5854","line":3,"column":37,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5807","line":33,"column":10,"nodeType":"5808","messageId":"5809","endLine":33,"endColumn":12},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6037","line":1,"column":17,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6038","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":32},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":34,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"6040","line":2,"column":9,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"6039","line":5,"column":26,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5827","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":14},{"ruleId":"6041","severity":1,"message":"6042","line":107,"column":29,"nodeType":"5803","endLine":107,"endColumn":81},{"ruleId":"5806","severity":1,"message":"5807","line":122,"column":96,"nodeType":"5808","messageId":"5809","endLine":122,"endColumn":98},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6047","line":33,"column":18,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":27},{"ruleId":"5797","severity":1,"message":"5910","line":56,"column":16,"nodeType":"5936","endLine":56,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":58,"column":9,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":15},{"ruleId":"5806","severity":1,"message":"5807","line":89,"column":20,"nodeType":"5808","messageId":"5809","endLine":89,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":92,"column":20,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":95,"column":20,"nodeType":"5808","messageId":"5809","endLine":95,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":9,"column":18,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":16,"column":10,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":18},{"ruleId":"5806","severity":1,"message":"5807","line":48,"column":15,"nodeType":"5808","messageId":"5809","endLine":48,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6056","line":37,"column":25,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6057","line":47,"column":17,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5806","severity":1,"message":"5810","line":60,"column":55,"nodeType":"5808","messageId":"5809","endLine":60,"endColumn":57},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6059","line":7,"column":5,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":9},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":11,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":22,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":29,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5905","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6060","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":31,"column":24,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6052","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":37,"column":25,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6063","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":39,"column":21,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5841","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6057","line":47,"column":17,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":50,"column":12,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5879","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6086","line":4,"column":9,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6087","line":5,"column":8,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5878","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":16},{"ruleId":"5806","severity":1,"message":"5807","line":27,"column":69,"nodeType":"5808","messageId":"5809","endLine":27,"endColumn":71},{"ruleId":"5806","severity":1,"message":"5807","line":38,"column":36,"nodeType":"5808","messageId":"5809","endLine":38,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":42,"column":69,"nodeType":"5808","messageId":"5809","endLine":42,"endColumn":71},{"ruleId":"5806","severity":1,"message":"5807","line":43,"column":32,"nodeType":"5808","messageId":"5809","endLine":43,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":35,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":70,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":72},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6086","line":4,"column":9,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6087","line":5,"column":8,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":6,"column":9,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5806","severity":1,"message":"5810","line":23,"column":100,"nodeType":"5808","messageId":"5809","endLine":23,"endColumn":102},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6051","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":45,"column":25,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":51,"column":17,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":55,"column":10,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":55,"column":23,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":126,"column":22,"nodeType":"5808","messageId":"5809","endLine":126,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":130,"column":211,"nodeType":"5808","messageId":"5809","endLine":130,"endColumn":213},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6051","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":45,"column":25,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":51,"column":17,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":55,"column":10,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":55,"column":23,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":121,"column":22,"nodeType":"5808","messageId":"5809","endLine":121,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":125,"column":235,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":237},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6090","line":33,"column":11,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6051","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":45,"column":25,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":51,"column":17,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":55,"column":10,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":55,"column":23,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":121,"column":22,"nodeType":"5808","messageId":"5809","endLine":121,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":125,"column":211,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":213},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":9,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":16,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6043","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":9,"column":18,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":17,"column":10,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6051","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":45,"column":25,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":51,"column":17,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":55,"column":10,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":55,"column":23,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":126,"column":22,"nodeType":"5808","messageId":"5809","endLine":126,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":130,"column":211,"nodeType":"5808","messageId":"5809","endLine":130,"endColumn":213},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":9,"column":18,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5795","line":9,"column":29,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6030","line":17,"column":10,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6091","line":26,"column":23,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6092","line":5,"column":10,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5852","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":297,"column":15,"nodeType":"5808","messageId":"5809","endLine":297,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6093","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6094","line":4,"column":8,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6030","line":15,"column":12,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5882","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6095","line":23,"column":8,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6096","line":23,"column":24,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":41},{"ruleId":"5787","severity":1,"message":"6097","line":24,"column":8,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6098","line":24,"column":28,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":49},{"ruleId":"5787","severity":1,"message":"5957","line":25,"column":8,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6099","line":25,"column":30,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":53},{"ruleId":"5787","severity":1,"message":"5994","line":26,"column":9,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":22},{"ruleId":"5797","severity":1,"message":"5910","line":45,"column":12,"nodeType":"5808","endLine":45,"endColumn":20},{"ruleId":"5915","severity":1,"message":"6100","line":54,"column":59,"nodeType":"5917","messageId":"6101","endLine":54,"endColumn":61},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5806","severity":1,"message":"5810","line":47,"column":59,"nodeType":"5808","messageId":"5809","endLine":47,"endColumn":61},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":29,"column":14,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":53,"column":17,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":45,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":148,"column":62,"nodeType":"5808","messageId":"5809","endLine":148,"endColumn":64},{"ruleId":"5797","severity":1,"message":"6103","line":165,"column":8,"nodeType":"5799","endLine":165,"endColumn":16,"suggestions":"6104"},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":74,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":172,"column":59,"nodeType":"5808","messageId":"5809","endLine":172,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":177,"column":72,"nodeType":"5808","messageId":"5809","endLine":177,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":200,"column":58,"nodeType":"5917","messageId":"5918","endLine":200,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":233,"column":145,"nodeType":"5808","messageId":"5809","endLine":233,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6105","line":19,"column":9,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5907","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5991","line":29,"column":11,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":30,"column":11,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":32,"column":11,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":34,"column":14,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6063","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":47,"column":23,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":49,"column":21,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":50,"column":12,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":50,"column":24,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":51,"column":23,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":53,"column":12,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":53,"column":18,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":54,"column":12,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":54,"column":23,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":55,"column":12,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":55,"column":22,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":56,"column":12,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":56,"column":24,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":57,"column":12,"nodeType":"5789","messageId":"5790","endLine":57,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":57,"column":20,"nodeType":"5789","messageId":"5790","endLine":57,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":58,"column":17,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6106","line":87,"column":10,"nodeType":"5789","messageId":"5790","endLine":87,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6107","line":88,"column":10,"nodeType":"5789","messageId":"5790","endLine":88,"endColumn":17},{"ruleId":"5806","severity":1,"message":"5807","line":124,"column":41,"nodeType":"5808","messageId":"5809","endLine":124,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":142,"column":75,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":77},{"ruleId":"5806","severity":1,"message":"5807","line":162,"column":41,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":180,"column":75,"nodeType":"5808","messageId":"5809","endLine":180,"endColumn":77},{"ruleId":"5806","severity":1,"message":"5807","line":201,"column":45,"nodeType":"5808","messageId":"5809","endLine":201,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6108","line":277,"column":17,"nodeType":"5789","messageId":"5790","endLine":277,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":294,"column":8,"nodeType":"5799","endLine":294,"endColumn":16,"suggestions":"6109"},{"ruleId":"5806","severity":1,"message":"5807","line":300,"column":74,"nodeType":"5808","messageId":"5809","endLine":300,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":301,"column":59,"nodeType":"5808","messageId":"5809","endLine":301,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":306,"column":72,"nodeType":"5808","messageId":"5809","endLine":306,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":329,"column":58,"nodeType":"5917","messageId":"5918","endLine":329,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5810","line":344,"column":116,"nodeType":"5808","messageId":"5809","endLine":344,"endColumn":118},{"ruleId":"5806","severity":1,"message":"5807","line":368,"column":145,"nodeType":"5808","messageId":"5809","endLine":368,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":29,"column":14,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":53,"column":17,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":45,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":148,"column":62,"nodeType":"5808","messageId":"5809","endLine":148,"endColumn":64},{"ruleId":"5797","severity":1,"message":"6103","line":165,"column":8,"nodeType":"5799","endLine":165,"endColumn":16,"suggestions":"6110"},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":74,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":172,"column":59,"nodeType":"5808","messageId":"5809","endLine":172,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":177,"column":72,"nodeType":"5808","messageId":"5809","endLine":177,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":200,"column":58,"nodeType":"5917","messageId":"5918","endLine":200,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":233,"column":145,"nodeType":"5808","messageId":"5809","endLine":233,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":29,"column":14,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":53,"column":17,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":45,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":148,"column":62,"nodeType":"5808","messageId":"5809","endLine":148,"endColumn":64},{"ruleId":"5797","severity":1,"message":"6103","line":165,"column":8,"nodeType":"5799","endLine":165,"endColumn":16,"suggestions":"6111"},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":74,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":172,"column":59,"nodeType":"5808","messageId":"5809","endLine":172,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":177,"column":72,"nodeType":"5808","messageId":"5809","endLine":177,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":200,"column":58,"nodeType":"5917","messageId":"5918","endLine":200,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":233,"column":145,"nodeType":"5808","messageId":"5809","endLine":233,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5883","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":20,"column":21,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6113","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":25,"column":78,"nodeType":"5808","messageId":"5809","endLine":25,"endColumn":80},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6030","line":13,"column":10,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5883","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":20,"column":21,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5883","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6113","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":27,"column":78,"nodeType":"5808","messageId":"5809","endLine":27,"endColumn":80},{"ruleId":"5806","severity":1,"message":"5807","line":60,"column":36,"nodeType":"5808","messageId":"5809","endLine":60,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":210,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":212},{"ruleId":"5806","severity":1,"message":"5807","line":93,"column":18,"nodeType":"5808","messageId":"5809","endLine":93,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6053","line":29,"column":23,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":30,"column":12,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":30,"column":25,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6114","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6076","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6077","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":42,"column":18,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6115","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6116","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6117","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6118","line":44,"column":26,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":41},{"ruleId":"5787","severity":1,"message":"6119","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6120","line":45,"column":22,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":50,"column":11,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":57,"column":28,"nodeType":"5808","messageId":"5809","endLine":57,"endColumn":30},{"ruleId":"5806","severity":1,"message":"5807","line":61,"column":48,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":65,"column":59,"nodeType":"5808","messageId":"5809","endLine":65,"endColumn":61},{"ruleId":"5797","severity":1,"message":"6103","line":99,"column":8,"nodeType":"5799","endLine":99,"endColumn":16,"suggestions":"6122"},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6124","line":15,"column":12,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":15,"column":21,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":16,"column":12,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":16,"column":21,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5806","severity":1,"message":"5807","line":27,"column":92,"nodeType":"5808","messageId":"5809","endLine":27,"endColumn":94},{"ruleId":"5806","severity":1,"message":"5807","line":73,"column":129,"nodeType":"5808","messageId":"5809","endLine":73,"endColumn":131},{"ruleId":"5801","severity":1,"message":"5802","line":91,"column":21,"nodeType":"5803","endLine":91,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":94,"column":21,"nodeType":"5803","endLine":94,"endColumn":132},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":22,"column":9,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":30,"column":21,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":31,"column":23,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6114","line":41,"column":10,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6076","line":41,"column":22,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6077","line":43,"column":10,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6078","line":43,"column":16,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6115","line":44,"column":10,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6116","line":44,"column":19,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6117","line":45,"column":10,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6118","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6119","line":46,"column":10,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6120","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":9,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":55,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":95,"column":6,"nodeType":"5799","endLine":95,"endColumn":14,"suggestions":"6128"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":4,"column":8,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":14},{"ruleId":"5806","severity":1,"message":"5807","line":29,"column":128,"nodeType":"5808","messageId":"5809","endLine":29,"endColumn":130},{"ruleId":"5806","severity":1,"message":"5807","line":40,"column":137,"nodeType":"5808","messageId":"5809","endLine":40,"endColumn":139},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5854","line":13,"column":16,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6129","line":14,"column":8,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5978","line":15,"column":8,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6130","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6131","line":17,"column":9,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6132","line":18,"column":13,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5907","line":19,"column":9,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5991","line":28,"column":11,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":30,"column":11,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6133","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6134","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6052","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":43,"column":23,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":44,"column":25,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6114","line":54,"column":12,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6076","line":54,"column":24,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6077","line":56,"column":12,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":56,"column":18,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6115","line":57,"column":12,"nodeType":"5789","messageId":"5790","endLine":57,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6116","line":57,"column":21,"nodeType":"5789","messageId":"5790","endLine":57,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6117","line":58,"column":12,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6118","line":58,"column":26,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":41},{"ruleId":"5787","severity":1,"message":"6119","line":59,"column":12,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6120","line":59,"column":22,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5883","line":63,"column":12,"nodeType":"5789","messageId":"5790","endLine":63,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6121","line":65,"column":11,"nodeType":"5789","messageId":"5790","endLine":65,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5810","line":79,"column":59,"nodeType":"5808","messageId":"5809","endLine":79,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":97,"column":45,"nodeType":"5808","messageId":"5809","endLine":97,"endColumn":47},{"ruleId":"5797","severity":1,"message":"6135","line":131,"column":7,"nodeType":"5799","endLine":131,"endColumn":13,"suggestions":"6136"},{"ruleId":"5806","severity":1,"message":"5807","line":137,"column":70,"nodeType":"5808","messageId":"5809","endLine":137,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":143,"column":68,"nodeType":"5808","messageId":"5809","endLine":143,"endColumn":70},{"ruleId":"5915","severity":1,"message":"5916","line":344,"column":54,"nodeType":"5917","messageId":"5918","endLine":344,"endColumn":56},{"ruleId":"5806","severity":1,"message":"5807","line":364,"column":89,"nodeType":"5808","messageId":"5809","endLine":364,"endColumn":91},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6137","line":40,"column":20,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":32},{"ruleId":"5787","severity":1,"message":"6138","line":42,"column":18,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6082","line":43,"column":10,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6057","line":49,"column":15,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6121","line":52,"column":9,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":62,"column":51,"nodeType":"5808","messageId":"5809","endLine":62,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":88,"column":6,"nodeType":"5799","endLine":88,"endColumn":14,"suggestions":"6139"},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":34,"column":23,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6056","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6072","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6074","line":44,"column":24,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6058","line":48,"column":23,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":49,"column":22,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6057","line":50,"column":17,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":51,"column":20,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":53,"column":11,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":74,"column":48,"nodeType":"5808","messageId":"5809","endLine":74,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":78,"column":55,"nodeType":"5808","messageId":"5809","endLine":78,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":112,"column":8,"nodeType":"5799","endLine":112,"endColumn":16,"suggestions":"6143"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":106,"column":45,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":47},{"ruleId":"5797","severity":1,"message":"6144","line":179,"column":8,"nodeType":"5799","endLine":179,"endColumn":16,"suggestions":"6145"},{"ruleId":"5806","severity":1,"message":"5807","line":185,"column":74,"nodeType":"5808","messageId":"5809","endLine":185,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":59,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":191,"column":72,"nodeType":"5808","messageId":"5809","endLine":191,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":233,"column":72,"nodeType":"5917","messageId":"5918","endLine":233,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":234,"column":55,"nodeType":"5808","messageId":"5809","endLine":234,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":278,"column":58,"nodeType":"5917","messageId":"5918","endLine":278,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":311,"column":145,"nodeType":"5808","messageId":"5809","endLine":311,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":9,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":26,"column":9,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5930","line":28,"column":9,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6057","line":43,"column":15,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6146","line":82,"column":21,"nodeType":"5789","messageId":"5790","endLine":82,"endColumn":27},{"ruleId":"5806","severity":1,"message":"5807","line":123,"column":35,"nodeType":"5808","messageId":"5809","endLine":123,"endColumn":37},{"ruleId":"6147","severity":1,"message":"6148","line":201,"column":17,"nodeType":"5917","messageId":"6149","endLine":203,"endColumn":12},{"ruleId":"5806","severity":1,"message":"5810","line":230,"column":42,"nodeType":"5808","messageId":"5809","endLine":230,"endColumn":44},{"ruleId":"5797","severity":1,"message":"6144","line":261,"column":6,"nodeType":"5799","endLine":261,"endColumn":14,"suggestions":"6150"},{"ruleId":"5806","severity":1,"message":"5807","line":267,"column":68,"nodeType":"5808","messageId":"5809","endLine":267,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":268,"column":51,"nodeType":"5808","messageId":"5809","endLine":268,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":273,"column":66,"nodeType":"5808","messageId":"5809","endLine":273,"endColumn":68},{"ruleId":"5915","severity":1,"message":"5916","line":329,"column":54,"nodeType":"5917","messageId":"5918","endLine":329,"endColumn":56},{"ruleId":"5806","severity":1,"message":"5810","line":330,"column":35,"nodeType":"5808","messageId":"5809","endLine":330,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5810","line":338,"column":23,"nodeType":"5808","messageId":"5809","endLine":338,"endColumn":25},{"ruleId":"5915","severity":1,"message":"5916","line":374,"column":46,"nodeType":"5917","messageId":"5918","endLine":374,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":407,"column":137,"nodeType":"5808","messageId":"5809","endLine":407,"endColumn":139},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":34,"column":23,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6056","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6072","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6074","line":44,"column":24,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6058","line":48,"column":23,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":49,"column":22,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6057","line":50,"column":17,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":51,"column":20,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":53,"column":11,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":74,"column":48,"nodeType":"5808","messageId":"5809","endLine":74,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":78,"column":55,"nodeType":"5808","messageId":"5809","endLine":78,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":112,"column":8,"nodeType":"5799","endLine":112,"endColumn":16,"suggestions":"6151"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":105,"column":45,"nodeType":"5808","messageId":"5809","endLine":105,"endColumn":47},{"ruleId":"5797","severity":1,"message":"6144","line":178,"column":8,"nodeType":"5799","endLine":178,"endColumn":16,"suggestions":"6152"},{"ruleId":"5806","severity":1,"message":"5807","line":184,"column":74,"nodeType":"5808","messageId":"5809","endLine":184,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":185,"column":59,"nodeType":"5808","messageId":"5809","endLine":185,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":190,"column":72,"nodeType":"5808","messageId":"5809","endLine":190,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":232,"column":72,"nodeType":"5917","messageId":"5918","endLine":232,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":233,"column":55,"nodeType":"5808","messageId":"5809","endLine":233,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5810","line":241,"column":35,"nodeType":"5808","messageId":"5809","endLine":241,"endColumn":37},{"ruleId":"5915","severity":1,"message":"5916","line":277,"column":58,"nodeType":"5917","messageId":"5918","endLine":277,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":310,"column":145,"nodeType":"5808","messageId":"5809","endLine":310,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6105","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5907","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":28,"column":11,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":30,"column":14,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":37,"column":24,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6063","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":39,"column":21,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":42,"column":24,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":43,"column":23,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":47,"column":23,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":49,"column":18,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":50,"column":12,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":50,"column":23,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":51,"column":22,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":52,"column":24,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":53,"column":12,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":53,"column":20,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":54,"column":17,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6106","line":83,"column":10,"nodeType":"5789","messageId":"5790","endLine":83,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6107","line":84,"column":10,"nodeType":"5789","messageId":"5790","endLine":84,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6153","line":117,"column":20,"nodeType":"5789","messageId":"5790","endLine":117,"endColumn":33},{"ruleId":"5806","severity":1,"message":"5807","line":120,"column":41,"nodeType":"5808","messageId":"5809","endLine":120,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":122,"column":41,"nodeType":"5808","messageId":"5809","endLine":122,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":138,"column":75,"nodeType":"5808","messageId":"5809","endLine":138,"endColumn":77},{"ruleId":"5806","severity":1,"message":"5807","line":158,"column":41,"nodeType":"5808","messageId":"5809","endLine":158,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":41,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":176,"column":75,"nodeType":"5808","messageId":"5809","endLine":176,"endColumn":77},{"ruleId":"5806","severity":1,"message":"5807","line":197,"column":41,"nodeType":"5808","messageId":"5809","endLine":197,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":199,"column":41,"nodeType":"5808","messageId":"5809","endLine":199,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5807","line":215,"column":75,"nodeType":"5808","messageId":"5809","endLine":215,"endColumn":77},{"ruleId":"5806","severity":1,"message":"5807","line":236,"column":45,"nodeType":"5808","messageId":"5809","endLine":236,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6108","line":309,"column":17,"nodeType":"5789","messageId":"5790","endLine":309,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":326,"column":8,"nodeType":"5799","endLine":326,"endColumn":16,"suggestions":"6154"},{"ruleId":"5806","severity":1,"message":"5807","line":332,"column":74,"nodeType":"5808","messageId":"5809","endLine":332,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":333,"column":59,"nodeType":"5808","messageId":"5809","endLine":333,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":338,"column":72,"nodeType":"5808","messageId":"5809","endLine":338,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":361,"column":58,"nodeType":"5917","messageId":"5918","endLine":361,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5810","line":376,"column":116,"nodeType":"5808","messageId":"5809","endLine":376,"endColumn":118},{"ruleId":"5806","severity":1,"message":"5807","line":400,"column":145,"nodeType":"5808","messageId":"5809","endLine":400,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":29,"column":14,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":53,"column":17,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":45,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":151,"column":62,"nodeType":"5808","messageId":"5809","endLine":151,"endColumn":64},{"ruleId":"5787","severity":1,"message":"6108","line":158,"column":17,"nodeType":"5789","messageId":"5790","endLine":158,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":174,"column":8,"nodeType":"5799","endLine":174,"endColumn":16,"suggestions":"6155"},{"ruleId":"5806","severity":1,"message":"5807","line":180,"column":74,"nodeType":"5808","messageId":"5809","endLine":180,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":181,"column":59,"nodeType":"5808","messageId":"5809","endLine":181,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":72,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":209,"column":58,"nodeType":"5917","messageId":"5918","endLine":209,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":242,"column":145,"nodeType":"5808","messageId":"5809","endLine":242,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":34,"column":23,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6056","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6072","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6074","line":44,"column":24,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6058","line":48,"column":23,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":49,"column":22,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6057","line":50,"column":17,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":51,"column":20,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":53,"column":11,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":74,"column":48,"nodeType":"5808","messageId":"5809","endLine":74,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":78,"column":55,"nodeType":"5808","messageId":"5809","endLine":78,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":112,"column":8,"nodeType":"5799","endLine":112,"endColumn":16,"suggestions":"6156"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6137","line":40,"column":20,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":32},{"ruleId":"5787","severity":1,"message":"6138","line":42,"column":18,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6082","line":43,"column":10,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6057","line":49,"column":15,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6121","line":52,"column":9,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":62,"column":51,"nodeType":"5808","messageId":"5809","endLine":62,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":88,"column":6,"nodeType":"5799","endLine":88,"endColumn":14,"suggestions":"6157"},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":34,"column":23,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6056","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6072","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6074","line":44,"column":24,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6158","line":48,"column":26,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":41},{"ruleId":"5787","severity":1,"message":"6081","line":49,"column":22,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6057","line":50,"column":17,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":51,"column":20,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":53,"column":11,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":74,"column":48,"nodeType":"5808","messageId":"5809","endLine":74,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":78,"column":55,"nodeType":"5808","messageId":"5809","endLine":78,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":112,"column":8,"nodeType":"5799","endLine":112,"endColumn":16,"suggestions":"6159"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":106,"column":45,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":47},{"ruleId":"5797","severity":1,"message":"6144","line":179,"column":8,"nodeType":"5799","endLine":179,"endColumn":16,"suggestions":"6160"},{"ruleId":"5806","severity":1,"message":"5807","line":185,"column":74,"nodeType":"5808","messageId":"5809","endLine":185,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":59,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":191,"column":72,"nodeType":"5808","messageId":"5809","endLine":191,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":233,"column":72,"nodeType":"5917","messageId":"5918","endLine":233,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":234,"column":55,"nodeType":"5808","messageId":"5809","endLine":234,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":278,"column":58,"nodeType":"5917","messageId":"5918","endLine":278,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":311,"column":145,"nodeType":"5808","messageId":"5809","endLine":311,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6161","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6138","line":42,"column":18,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6082","line":43,"column":10,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6158","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6057","line":49,"column":15,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6121","line":52,"column":9,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":62,"column":51,"nodeType":"5808","messageId":"5809","endLine":62,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":88,"column":6,"nodeType":"5799","endLine":88,"endColumn":14,"suggestions":"6162"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":106,"column":45,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":47},{"ruleId":"5797","severity":1,"message":"6144","line":179,"column":8,"nodeType":"5799","endLine":179,"endColumn":16,"suggestions":"6163"},{"ruleId":"5806","severity":1,"message":"5807","line":185,"column":74,"nodeType":"5808","messageId":"5809","endLine":185,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":59,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":191,"column":72,"nodeType":"5808","messageId":"5809","endLine":191,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":233,"column":72,"nodeType":"5917","messageId":"5918","endLine":233,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":234,"column":55,"nodeType":"5808","messageId":"5809","endLine":234,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":278,"column":58,"nodeType":"5917","messageId":"5918","endLine":278,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":311,"column":145,"nodeType":"5808","messageId":"5809","endLine":311,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6059","line":7,"column":5,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":9},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":11,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":22,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":29,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5905","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":22,"column":11,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6051","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6060","line":28,"column":12,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":28,"column":24,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6141","line":29,"column":12,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":29,"column":21,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6052","line":32,"column":12,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":33,"column":12,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":33,"column":25,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":34,"column":12,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":34,"column":25,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6063","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":36,"column":21,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":37,"column":23,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":38,"column":12,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":38,"column":24,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5841","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6057","line":40,"column":17,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6071","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":41,"column":21,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":42,"column":24,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":43,"column":23,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":44,"column":24,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":45,"column":18,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":47,"column":22,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6084","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":49,"column":20,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":52,"column":11,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":59,"column":32,"nodeType":"5808","messageId":"5809","endLine":59,"endColumn":34},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":15,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":42,"column":21,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":9,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":51,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":93,"column":6,"nodeType":"5799","endLine":93,"endColumn":14,"suggestions":"6164"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5819","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":41,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":43},{"ruleId":"5797","severity":1,"message":"6144","line":159,"column":8,"nodeType":"5799","endLine":159,"endColumn":16,"suggestions":"6165"},{"ruleId":"5806","severity":1,"message":"5807","line":165,"column":74,"nodeType":"5808","messageId":"5809","endLine":165,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":166,"column":59,"nodeType":"5808","messageId":"5809","endLine":166,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":72,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":213,"column":72,"nodeType":"5917","messageId":"5918","endLine":213,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":214,"column":55,"nodeType":"5808","messageId":"5809","endLine":214,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":258,"column":58,"nodeType":"5917","messageId":"5918","endLine":258,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":291,"column":145,"nodeType":"5808","messageId":"5809","endLine":291,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":69,"column":17,"nodeType":"5803","messageId":"6170","endLine":69,"endColumn":327,"fix":"6171"},{"ruleId":"6168","severity":1,"message":"6169","line":75,"column":17,"nodeType":"5803","messageId":"6170","endLine":75,"endColumn":243,"fix":"6172"},{"ruleId":"5806","severity":1,"message":"5810","line":89,"column":18,"nodeType":"5808","messageId":"5809","endLine":89,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":93,"column":87,"nodeType":"5808","messageId":"5809","endLine":93,"endColumn":89},{"ruleId":"5806","severity":1,"message":"5807","line":93,"column":153,"nodeType":"5808","messageId":"5809","endLine":93,"endColumn":155},{"ruleId":"5806","severity":1,"message":"5810","line":118,"column":18,"nodeType":"5808","messageId":"5809","endLine":118,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":127,"column":21,"nodeType":"5803","endLine":127,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":130,"column":43,"nodeType":"5803","endLine":130,"endColumn":154},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":69,"column":17,"nodeType":"5803","messageId":"6170","endLine":69,"endColumn":327,"fix":"6173"},{"ruleId":"6168","severity":1,"message":"6169","line":74,"column":17,"nodeType":"5803","messageId":"6170","endLine":74,"endColumn":243,"fix":"6174"},{"ruleId":"5806","severity":1,"message":"5810","line":90,"column":18,"nodeType":"5808","messageId":"5809","endLine":90,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":94,"column":87,"nodeType":"5808","messageId":"5809","endLine":94,"endColumn":89},{"ruleId":"5806","severity":1,"message":"5810","line":119,"column":18,"nodeType":"5808","messageId":"5809","endLine":119,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":128,"column":21,"nodeType":"5803","endLine":128,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":131,"column":44,"nodeType":"5803","endLine":131,"endColumn":155},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":69,"column":17,"nodeType":"5803","messageId":"6170","endLine":69,"endColumn":327,"fix":"6175"},{"ruleId":"6168","severity":1,"message":"6169","line":75,"column":17,"nodeType":"5803","messageId":"6170","endLine":75,"endColumn":243,"fix":"6176"},{"ruleId":"5806","severity":1,"message":"5810","line":88,"column":18,"nodeType":"5808","messageId":"5809","endLine":88,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":92,"column":87,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":89},{"ruleId":"5806","severity":1,"message":"5810","line":117,"column":18,"nodeType":"5808","messageId":"5809","endLine":117,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":126,"column":21,"nodeType":"5803","endLine":126,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":129,"column":43,"nodeType":"5803","endLine":129,"endColumn":154},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":69,"column":17,"nodeType":"5803","messageId":"6170","endLine":69,"endColumn":327,"fix":"6177"},{"ruleId":"6168","severity":1,"message":"6169","line":75,"column":17,"nodeType":"5803","messageId":"6170","endLine":75,"endColumn":287,"fix":"6178"},{"ruleId":"5806","severity":1,"message":"5810","line":75,"column":224,"nodeType":"5808","messageId":"5809","endLine":75,"endColumn":226},{"ruleId":"5806","severity":1,"message":"5810","line":88,"column":18,"nodeType":"5808","messageId":"5809","endLine":88,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":92,"column":87,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":89},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":18,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":115,"column":21,"nodeType":"5803","endLine":115,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":118,"column":43,"nodeType":"5803","endLine":118,"endColumn":154},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6059","line":7,"column":5,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":9},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":11,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":22,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":29,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5905","line":20,"column":11,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":22,"column":11,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6060","line":26,"column":12,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":26,"column":24,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6141","line":27,"column":12,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":27,"column":21,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6052","line":30,"column":12,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":30,"column":23,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":31,"column":25,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":32,"column":12,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":32,"column":25,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6063","line":34,"column":12,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":34,"column":21,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":37,"column":23,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5841","line":38,"column":12,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6057","line":38,"column":17,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6071","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":39,"column":21,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":42,"column":24,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":43,"column":18,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":45,"column":22,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6084","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":47,"column":20,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":50,"column":11,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":56,"column":24,"nodeType":"5808","messageId":"5809","endLine":56,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6124","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":24,"column":21,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":36,"column":11,"nodeType":"5808","messageId":"5809","endLine":36,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5807","line":42,"column":11,"nodeType":"5808","messageId":"5809","endLine":42,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6113","line":47,"column":11,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":48,"column":78,"nodeType":"5808","messageId":"5809","endLine":48,"endColumn":80},{"ruleId":"5806","severity":1,"message":"5807","line":54,"column":60,"nodeType":"5808","messageId":"5809","endLine":54,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":83,"column":17,"nodeType":"5803","messageId":"6170","endLine":83,"endColumn":242,"fix":"6179"},{"ruleId":"5806","severity":1,"message":"5810","line":93,"column":91,"nodeType":"5808","messageId":"5809","endLine":93,"endColumn":93},{"ruleId":"5806","severity":1,"message":"5810","line":94,"column":40,"nodeType":"5808","messageId":"5809","endLine":94,"endColumn":42},{"ruleId":"6168","severity":1,"message":"6169","line":97,"column":23,"nodeType":"5803","messageId":"6170","endLine":97,"endColumn":282,"fix":"6180"},{"ruleId":"5806","severity":1,"message":"5810","line":125,"column":182,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":184},{"ruleId":"5806","severity":1,"message":"5810","line":129,"column":234,"nodeType":"5808","messageId":"5809","endLine":129,"endColumn":236},{"ruleId":"5806","severity":1,"message":"5810","line":167,"column":18,"nodeType":"5808","messageId":"5809","endLine":167,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":179,"column":50,"nodeType":"5808","messageId":"5809","endLine":179,"endColumn":52},{"ruleId":"5801","severity":1,"message":"6181","line":180,"column":21,"nodeType":"5803","endLine":180,"endColumn":242},{"ruleId":"5801","severity":1,"message":"6181","line":183,"column":21,"nodeType":"5803","endLine":183,"endColumn":241},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5819","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":41,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":43},{"ruleId":"5797","severity":1,"message":"6182","line":158,"column":8,"nodeType":"5799","endLine":158,"endColumn":16,"suggestions":"6183"},{"ruleId":"5806","severity":1,"message":"5807","line":164,"column":74,"nodeType":"5808","messageId":"5809","endLine":164,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":165,"column":59,"nodeType":"5808","messageId":"5809","endLine":165,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":170,"column":72,"nodeType":"5808","messageId":"5809","endLine":170,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":212,"column":72,"nodeType":"5917","messageId":"5918","endLine":212,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":213,"column":55,"nodeType":"5808","messageId":"5809","endLine":213,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":257,"column":58,"nodeType":"5917","messageId":"5918","endLine":257,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":290,"column":145,"nodeType":"5808","messageId":"5809","endLine":290,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":15,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":42,"column":21,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6184","line":47,"column":18,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":9,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":51,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":53},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6124","line":21,"column":12,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":21,"column":21,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":25,"column":14,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6185","line":33,"column":11,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6113","line":36,"column":11,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":37,"column":78,"nodeType":"5808","messageId":"5809","endLine":37,"endColumn":80},{"ruleId":"6168","severity":1,"message":"6169","line":55,"column":17,"nodeType":"5803","messageId":"6170","endLine":55,"endColumn":286,"fix":"6186"},{"ruleId":"5806","severity":1,"message":"5810","line":55,"column":223,"nodeType":"5808","messageId":"5809","endLine":55,"endColumn":225},{"ruleId":"5806","severity":1,"message":"5810","line":91,"column":18,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":28,"column":12,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":28,"column":21,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":23,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":12,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":25,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6056","line":33,"column":25,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":17,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":11,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":58,"column":28,"nodeType":"5808","messageId":"5809","endLine":58,"endColumn":30},{"ruleId":"5806","severity":1,"message":"5807","line":62,"column":48,"nodeType":"5808","messageId":"5809","endLine":62,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":66,"column":55,"nodeType":"5808","messageId":"5809","endLine":66,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":107,"column":8,"nodeType":"5799","endLine":107,"endColumn":16,"suggestions":"6187"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5819","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":41,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":43},{"ruleId":"5797","severity":1,"message":"6144","line":159,"column":8,"nodeType":"5799","endLine":159,"endColumn":16,"suggestions":"6188"},{"ruleId":"5806","severity":1,"message":"5807","line":165,"column":74,"nodeType":"5808","messageId":"5809","endLine":165,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":166,"column":59,"nodeType":"5808","messageId":"5809","endLine":166,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":72,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":213,"column":72,"nodeType":"5917","messageId":"5918","endLine":213,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":214,"column":55,"nodeType":"5808","messageId":"5809","endLine":214,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":258,"column":58,"nodeType":"5917","messageId":"5918","endLine":258,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":291,"column":145,"nodeType":"5808","messageId":"5809","endLine":291,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5854","line":13,"column":16,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5905","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6189","line":32,"column":21,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6047","line":42,"column":18,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6121","line":43,"column":11,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":68,"column":16,"nodeType":"5936","endLine":68,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":70,"column":9,"nodeType":"5789","messageId":"5790","endLine":70,"endColumn":15},{"ruleId":"5806","severity":1,"message":"5807","line":105,"column":20,"nodeType":"5808","messageId":"5809","endLine":105,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":110,"column":20,"nodeType":"5808","messageId":"5809","endLine":110,"endColumn":22},{"ruleId":"6018","severity":1,"message":"6019","line":111,"column":21,"nodeType":"5789","messageId":"6020","endLine":111,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":115,"column":20,"nodeType":"5808","messageId":"5809","endLine":115,"endColumn":22},{"ruleId":"6018","severity":1,"message":"6019","line":116,"column":21,"nodeType":"5789","messageId":"6020","endLine":116,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":139,"column":8,"nodeType":"5799","endLine":139,"endColumn":16,"suggestions":"6190"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":15,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":42,"column":21,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":9,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":51,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":93,"column":6,"nodeType":"5799","endLine":93,"endColumn":14,"suggestions":"6191"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5905","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6121","line":37,"column":11,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6047","line":44,"column":18,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":27},{"ruleId":"5797","severity":1,"message":"5910","line":67,"column":16,"nodeType":"5936","endLine":67,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":69,"column":9,"nodeType":"5789","messageId":"5790","endLine":69,"endColumn":15},{"ruleId":"5806","severity":1,"message":"5807","line":104,"column":20,"nodeType":"5808","messageId":"5809","endLine":104,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":109,"column":20,"nodeType":"5808","messageId":"5809","endLine":109,"endColumn":22},{"ruleId":"6018","severity":1,"message":"6019","line":110,"column":21,"nodeType":"5789","messageId":"6020","endLine":110,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":114,"column":20,"nodeType":"5808","messageId":"5809","endLine":114,"endColumn":22},{"ruleId":"6018","severity":1,"message":"6019","line":115,"column":21,"nodeType":"5789","messageId":"6020","endLine":115,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":138,"column":8,"nodeType":"5799","endLine":138,"endColumn":16,"suggestions":"6192"},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6124","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":19,"column":12,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":20,"column":21,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":22,"column":14,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6185","line":30,"column":11,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5810","line":70,"column":18,"nodeType":"5808","messageId":"5809","endLine":70,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":24,"column":21,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6185","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6113","line":37,"column":11,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":38,"column":78,"nodeType":"5808","messageId":"5809","endLine":38,"endColumn":80},{"ruleId":"5806","severity":1,"message":"5807","line":47,"column":60,"nodeType":"5808","messageId":"5809","endLine":47,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":56,"column":17,"nodeType":"5803","messageId":"6170","endLine":56,"endColumn":242,"fix":"6193"},{"ruleId":"5806","severity":1,"message":"5810","line":66,"column":91,"nodeType":"5808","messageId":"5809","endLine":66,"endColumn":93},{"ruleId":"5806","severity":1,"message":"5810","line":67,"column":40,"nodeType":"5808","messageId":"5809","endLine":67,"endColumn":42},{"ruleId":"5806","severity":1,"message":"5810","line":84,"column":182,"nodeType":"5808","messageId":"5809","endLine":84,"endColumn":184},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":18,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5883","line":16,"column":12,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":16,"column":21,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":31},{"ruleId":"5806","severity":1,"message":"5807","line":21,"column":73,"nodeType":"5808","messageId":"5809","endLine":21,"endColumn":75},{"ruleId":"5806","severity":1,"message":"5807","line":27,"column":60,"nodeType":"5808","messageId":"5809","endLine":27,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5810","line":54,"column":100,"nodeType":"5808","messageId":"5809","endLine":54,"endColumn":102},{"ruleId":"5806","severity":1,"message":"5807","line":75,"column":117,"nodeType":"5808","messageId":"5809","endLine":75,"endColumn":119},{"ruleId":"5806","severity":1,"message":"5807","line":75,"column":148,"nodeType":"5808","messageId":"5809","endLine":75,"endColumn":150},{"ruleId":"5806","severity":1,"message":"5807","line":75,"column":179,"nodeType":"5808","messageId":"5809","endLine":75,"endColumn":181},{"ruleId":"5806","severity":1,"message":"5807","line":75,"column":212,"nodeType":"5808","messageId":"5809","endLine":75,"endColumn":214},{"ruleId":"5806","severity":1,"message":"5807","line":77,"column":36,"nodeType":"5808","messageId":"5809","endLine":77,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":77,"column":65,"nodeType":"5808","messageId":"5809","endLine":77,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":83,"column":44,"nodeType":"5808","messageId":"5809","endLine":83,"endColumn":46},{"ruleId":"5806","severity":1,"message":"5807","line":83,"column":81,"nodeType":"5808","messageId":"5809","endLine":83,"endColumn":83},{"ruleId":"5806","severity":1,"message":"5807","line":87,"column":110,"nodeType":"5808","messageId":"5809","endLine":87,"endColumn":112},{"ruleId":"5806","severity":1,"message":"5807","line":92,"column":118,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":120},{"ruleId":"5806","severity":1,"message":"5807","line":97,"column":110,"nodeType":"5808","messageId":"5809","endLine":97,"endColumn":112},{"ruleId":"5806","severity":1,"message":"5807","line":102,"column":118,"nodeType":"5808","messageId":"5809","endLine":102,"endColumn":120},{"ruleId":"5806","severity":1,"message":"5810","line":113,"column":42,"nodeType":"5808","messageId":"5809","endLine":113,"endColumn":44},{"ruleId":"5787","severity":1,"message":"6040","line":4,"column":9,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6194","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6030","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6040","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6195","line":6,"column":15,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":10,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":10,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5818","line":9,"column":16,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5819","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":29,"column":26,"nodeType":"5808","messageId":"5809","endLine":29,"endColumn":28},{"ruleId":"5797","severity":1,"message":"5798","line":37,"column":6,"nodeType":"5799","endLine":37,"endColumn":14,"suggestions":"6196"},{"ruleId":"5806","severity":1,"message":"5807","line":80,"column":70,"nodeType":"5808","messageId":"5809","endLine":80,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":104,"column":21,"nodeType":"5808","messageId":"5809","endLine":104,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":135,"column":17,"nodeType":"5808","messageId":"5809","endLine":135,"endColumn":19},{"ruleId":"5806","severity":1,"message":"5807","line":147,"column":23,"nodeType":"5808","messageId":"5809","endLine":147,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":173,"column":23,"nodeType":"5808","messageId":"5809","endLine":173,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":207,"column":15,"nodeType":"5808","messageId":"5809","endLine":207,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5861","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":18,"column":7,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":360,"column":3,"nodeType":"5865","messageId":"5866","endLine":376,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":360,"column":3,"nodeType":"5789","messageId":"5869","endLine":360,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":31,"column":6,"nodeType":"5799","endLine":31,"endColumn":15,"suggestions":"6197"},{"ruleId":"5801","severity":1,"message":"5802","line":36,"column":11,"nodeType":"5803","endLine":38,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":39,"column":13,"nodeType":"5803","endLine":39,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5991","line":66,"column":9,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":67,"column":9,"nodeType":"5789","messageId":"5790","endLine":67,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":68,"column":9,"nodeType":"5789","messageId":"5790","endLine":68,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":69,"column":9,"nodeType":"5789","messageId":"5790","endLine":69,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":70,"column":9,"nodeType":"5789","messageId":"5790","endLine":70,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":76,"column":9,"nodeType":"5789","messageId":"5790","endLine":76,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":78,"column":9,"nodeType":"5789","messageId":"5790","endLine":78,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":80,"column":9,"nodeType":"5789","messageId":"5790","endLine":80,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5989","line":91,"column":9,"nodeType":"5789","messageId":"5790","endLine":91,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5996","line":137,"column":7,"nodeType":"5789","messageId":"5790","endLine":137,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":140,"column":21,"nodeType":"5808","messageId":"5809","endLine":140,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":144,"column":12,"nodeType":"5808","endLine":144,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":146,"column":21,"nodeType":"5789","endLine":146,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":150,"column":24,"nodeType":"5789","endLine":150,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":152,"column":20,"nodeType":"5936","endLine":152,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5939","line":155,"column":20,"nodeType":"5789","endLine":155,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":159,"column":24,"nodeType":"5789","endLine":159,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6006","line":163,"column":21,"nodeType":"5789","endLine":163,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":167,"column":17,"nodeType":"5789","endLine":167,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":171,"column":17,"nodeType":"5789","endLine":171,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":175,"column":22,"nodeType":"5789","endLine":175,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":179,"column":30,"nodeType":"5789","endLine":179,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":181,"column":26,"nodeType":"5936","endLine":181,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":189,"column":6,"nodeType":"5799","messageId":"5914","endLine":189,"endColumn":51},{"ruleId":"5787","severity":1,"message":"5947","line":190,"column":9,"nodeType":"5789","messageId":"5790","endLine":190,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":204,"column":70,"nodeType":"5808","messageId":"5809","endLine":204,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":220,"column":71,"nodeType":"5808","messageId":"5809","endLine":220,"endColumn":73},{"ruleId":"5806","severity":1,"message":"5810","line":483,"column":22,"nodeType":"5808","messageId":"5809","endLine":483,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":496,"column":36,"nodeType":"5808","messageId":"5809","endLine":496,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":496,"column":65,"nodeType":"5808","messageId":"5809","endLine":496,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":538,"column":74,"nodeType":"5808","messageId":"5809","endLine":538,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":538,"column":90,"nodeType":"5808","messageId":"5809","endLine":538,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":538,"column":102,"nodeType":"5808","messageId":"5809","endLine":538,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":580,"column":145,"nodeType":"5808","messageId":"5809","endLine":580,"endColumn":147},{"ruleId":"5806","severity":1,"message":"5807","line":580,"column":161,"nodeType":"5808","messageId":"5809","endLine":580,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":580,"column":173,"nodeType":"5808","messageId":"5809","endLine":580,"endColumn":175},{"ruleId":"5949","severity":1,"message":"5950","line":622,"column":92,"nodeType":"5951","messageId":"5952","endLine":622,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":622,"column":115,"nodeType":"5951","messageId":"5952","endLine":622,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":622,"column":136,"nodeType":"5951","messageId":"5952","endLine":622,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":622,"column":159,"nodeType":"5951","messageId":"5952","endLine":622,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":622,"column":492,"nodeType":"5808","messageId":"5809","endLine":622,"endColumn":494},{"ruleId":"5806","severity":1,"message":"5807","line":622,"column":508,"nodeType":"5808","messageId":"5809","endLine":622,"endColumn":510},{"ruleId":"5806","severity":1,"message":"5807","line":622,"column":524,"nodeType":"5808","messageId":"5809","endLine":622,"endColumn":526},{"ruleId":"5949","severity":1,"message":"5950","line":664,"column":93,"nodeType":"5951","messageId":"5952","endLine":664,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":664,"column":116,"nodeType":"5951","messageId":"5952","endLine":664,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":664,"column":137,"nodeType":"5951","messageId":"5952","endLine":664,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":664,"column":160,"nodeType":"5951","messageId":"5952","endLine":664,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":664,"column":600,"nodeType":"5808","messageId":"5809","endLine":664,"endColumn":602},{"ruleId":"5806","severity":1,"message":"5807","line":664,"column":616,"nodeType":"5808","messageId":"5809","endLine":664,"endColumn":618},{"ruleId":"5806","severity":1,"message":"5807","line":664,"column":632,"nodeType":"5808","messageId":"5809","endLine":664,"endColumn":634},{"ruleId":"5806","severity":1,"message":"5807","line":706,"column":178,"nodeType":"5808","messageId":"5809","endLine":706,"endColumn":180},{"ruleId":"5806","severity":1,"message":"5807","line":706,"column":194,"nodeType":"5808","messageId":"5809","endLine":706,"endColumn":196},{"ruleId":"5806","severity":1,"message":"5807","line":706,"column":210,"nodeType":"5808","messageId":"5809","endLine":706,"endColumn":212},{"ruleId":"5949","severity":1,"message":"5950","line":749,"column":92,"nodeType":"5951","messageId":"5952","endLine":749,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":749,"column":115,"nodeType":"5951","messageId":"5952","endLine":749,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":749,"column":136,"nodeType":"5951","messageId":"5952","endLine":749,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":749,"column":159,"nodeType":"5951","messageId":"5952","endLine":749,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":749,"column":528,"nodeType":"5808","messageId":"5809","endLine":749,"endColumn":530},{"ruleId":"5806","severity":1,"message":"5807","line":749,"column":544,"nodeType":"5808","messageId":"5809","endLine":749,"endColumn":546},{"ruleId":"5806","severity":1,"message":"5807","line":749,"column":560,"nodeType":"5808","messageId":"5809","endLine":749,"endColumn":562},{"ruleId":"5949","severity":1,"message":"5950","line":791,"column":93,"nodeType":"5951","messageId":"5952","endLine":791,"endColumn":95},{"ruleId":"5949","severity":1,"message":"5950","line":791,"column":116,"nodeType":"5951","messageId":"5952","endLine":791,"endColumn":118},{"ruleId":"5949","severity":1,"message":"5950","line":791,"column":137,"nodeType":"5951","messageId":"5952","endLine":791,"endColumn":139},{"ruleId":"5949","severity":1,"message":"5950","line":791,"column":160,"nodeType":"5951","messageId":"5952","endLine":791,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":791,"column":635,"nodeType":"5808","messageId":"5809","endLine":791,"endColumn":637},{"ruleId":"5806","severity":1,"message":"5807","line":791,"column":651,"nodeType":"5808","messageId":"5809","endLine":791,"endColumn":653},{"ruleId":"5806","severity":1,"message":"5807","line":791,"column":667,"nodeType":"5808","messageId":"5809","endLine":791,"endColumn":669},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6051","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":45,"column":25,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":51,"column":17,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":55,"column":10,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":55,"column":23,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":121,"column":22,"nodeType":"5808","messageId":"5809","endLine":121,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":125,"column":211,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":213},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":9,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":26,"column":9,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5930","line":28,"column":9,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6057","line":43,"column":15,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6146","line":82,"column":21,"nodeType":"5789","messageId":"5790","endLine":82,"endColumn":27},{"ruleId":"5806","severity":1,"message":"5807","line":123,"column":35,"nodeType":"5808","messageId":"5809","endLine":123,"endColumn":37},{"ruleId":"6147","severity":1,"message":"6148","line":201,"column":17,"nodeType":"5917","messageId":"6149","endLine":203,"endColumn":12},{"ruleId":"5806","severity":1,"message":"5810","line":230,"column":42,"nodeType":"5808","messageId":"5809","endLine":230,"endColumn":44},{"ruleId":"5797","severity":1,"message":"6144","line":261,"column":6,"nodeType":"5799","endLine":261,"endColumn":14,"suggestions":"6198"},{"ruleId":"5806","severity":1,"message":"5807","line":267,"column":68,"nodeType":"5808","messageId":"5809","endLine":267,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":268,"column":51,"nodeType":"5808","messageId":"5809","endLine":268,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":273,"column":66,"nodeType":"5808","messageId":"5809","endLine":273,"endColumn":68},{"ruleId":"5915","severity":1,"message":"5916","line":329,"column":54,"nodeType":"5917","messageId":"5918","endLine":329,"endColumn":56},{"ruleId":"5806","severity":1,"message":"5810","line":330,"column":35,"nodeType":"5808","messageId":"5809","endLine":330,"endColumn":37},{"ruleId":"5915","severity":1,"message":"5916","line":374,"column":46,"nodeType":"5917","messageId":"5918","endLine":374,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":407,"column":137,"nodeType":"5808","messageId":"5809","endLine":407,"endColumn":139},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":29,"column":14,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":53,"column":17,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":45,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":148,"column":62,"nodeType":"5808","messageId":"5809","endLine":148,"endColumn":64},{"ruleId":"5797","severity":1,"message":"6103","line":165,"column":8,"nodeType":"5799","endLine":165,"endColumn":16,"suggestions":"6199"},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":74,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":172,"column":59,"nodeType":"5808","messageId":"5809","endLine":172,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":177,"column":72,"nodeType":"5808","messageId":"5809","endLine":177,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":200,"column":58,"nodeType":"5917","messageId":"5918","endLine":200,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":233,"column":145,"nodeType":"5808","messageId":"5809","endLine":233,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":28,"column":11,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":30,"column":11,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6061","line":34,"column":24,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6141","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":36,"column":21,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6056","line":41,"column":25,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6064","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6072","line":48,"column":21,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6074","line":49,"column":24,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":50,"column":12,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":50,"column":23,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6058","line":53,"column":23,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":54,"column":22,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6057","line":55,"column":17,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":56,"column":20,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":58,"column":11,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":79,"column":48,"nodeType":"5808","messageId":"5809","endLine":79,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":83,"column":55,"nodeType":"5808","messageId":"5809","endLine":83,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":118,"column":8,"nodeType":"5799","endLine":118,"endColumn":16,"suggestions":"6200"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":106,"column":45,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":47},{"ruleId":"5797","severity":1,"message":"6144","line":179,"column":8,"nodeType":"5799","endLine":179,"endColumn":16,"suggestions":"6201"},{"ruleId":"5806","severity":1,"message":"5807","line":185,"column":74,"nodeType":"5808","messageId":"5809","endLine":185,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":59,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":191,"column":72,"nodeType":"5808","messageId":"5809","endLine":191,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":233,"column":72,"nodeType":"5917","messageId":"5918","endLine":233,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":234,"column":55,"nodeType":"5808","messageId":"5809","endLine":234,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":278,"column":58,"nodeType":"5917","messageId":"5918","endLine":278,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":311,"column":145,"nodeType":"5808","messageId":"5809","endLine":311,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":19,"column":12,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6185","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":69,"column":17,"nodeType":"5803","messageId":"6170","endLine":69,"endColumn":327,"fix":"6202"},{"ruleId":"6168","severity":1,"message":"6169","line":75,"column":17,"nodeType":"5803","messageId":"6170","endLine":75,"endColumn":243,"fix":"6203"},{"ruleId":"5806","severity":1,"message":"5810","line":84,"column":35,"nodeType":"5808","messageId":"5809","endLine":84,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5810","line":101,"column":18,"nodeType":"5808","messageId":"5809","endLine":101,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":110,"column":44,"nodeType":"5803","endLine":110,"endColumn":155},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6059","line":7,"column":5,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":9},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":11,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":22,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":29,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5905","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6060","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":31,"column":24,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6052","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":37,"column":25,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6063","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":39,"column":21,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5841","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6057","line":47,"column":17,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":50,"column":12,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5791","replacedBy":"6204"},{"ruleId":"5793","replacedBy":"6205"},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5854","line":2,"column":16,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5927","line":18,"column":10,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5980","line":19,"column":8,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5981","line":55,"column":19,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5982","line":56,"column":17,"nodeType":"5789","messageId":"5790","endLine":56,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5928","line":69,"column":10,"nodeType":"5789","messageId":"5790","endLine":69,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":71,"column":10,"nodeType":"5789","messageId":"5790","endLine":71,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5841","line":98,"column":9,"nodeType":"5789","messageId":"5790","endLine":98,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":100,"column":9,"nodeType":"5789","messageId":"5790","endLine":100,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":102,"column":9,"nodeType":"5789","messageId":"5790","endLine":102,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":133,"column":21,"nodeType":"5808","messageId":"5809","endLine":133,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":137,"column":12,"nodeType":"5808","endLine":137,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":140,"column":36,"nodeType":"5808","messageId":"5809","endLine":140,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":140,"column":65,"nodeType":"5808","messageId":"5934","endLine":140,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":140,"column":77,"nodeType":"5808","messageId":"5809","endLine":140,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":140,"column":155,"nodeType":"5808","messageId":"5934","endLine":140,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":140,"column":167,"nodeType":"5808","messageId":"5809","endLine":140,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":142,"column":27,"nodeType":"5808","messageId":"5934","endLine":142,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":142,"column":39,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":142,"column":117,"nodeType":"5808","messageId":"5934","endLine":142,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":142,"column":129,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":148,"column":20,"nodeType":"5936","endLine":148,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":149,"column":18,"nodeType":"5936","endLine":149,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":155,"column":15,"nodeType":"5936","endLine":155,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":158,"column":20,"nodeType":"5789","endLine":158,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":161,"column":21,"nodeType":"5789","endLine":161,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":165,"column":17,"nodeType":"5789","endLine":165,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":169,"column":17,"nodeType":"5789","endLine":169,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":173,"column":22,"nodeType":"5789","endLine":173,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":177,"column":30,"nodeType":"5789","endLine":177,"endColumn":50},{"ruleId":"5912","severity":1,"message":"5913","line":184,"column":6,"nodeType":"5799","messageId":"5914","endLine":184,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":186,"column":9,"nodeType":"5789","messageId":"5790","endLine":186,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5948","line":200,"column":9,"nodeType":"5789","messageId":"5790","endLine":200,"endColumn":17},{"ruleId":"5806","severity":1,"message":"5807","line":231,"column":73,"nodeType":"5808","messageId":"5809","endLine":231,"endColumn":75},{"ruleId":"5787","severity":1,"message":"5989","line":239,"column":11,"nodeType":"5789","messageId":"5790","endLine":239,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":277,"column":107,"nodeType":"5808","messageId":"5809","endLine":277,"endColumn":109},{"ruleId":"5806","severity":1,"message":"5810","line":395,"column":22,"nodeType":"5808","messageId":"5809","endLine":395,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":408,"column":34,"nodeType":"5808","messageId":"5809","endLine":408,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":408,"column":46,"nodeType":"5808","messageId":"5809","endLine":408,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":456,"column":72,"nodeType":"5808","messageId":"5809","endLine":456,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5807","line":456,"column":84,"nodeType":"5808","messageId":"5809","endLine":456,"endColumn":86},{"ruleId":"5949","severity":1,"message":"5950","line":504,"column":90,"nodeType":"5951","messageId":"5952","endLine":504,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":504,"column":113,"nodeType":"5951","messageId":"5952","endLine":504,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":504,"column":134,"nodeType":"5951","messageId":"5952","endLine":504,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":504,"column":157,"nodeType":"5951","messageId":"5952","endLine":504,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":505,"column":32,"nodeType":"5808","messageId":"5809","endLine":505,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":505,"column":48,"nodeType":"5808","messageId":"5809","endLine":505,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":553,"column":35,"nodeType":"5808","messageId":"5809","endLine":553,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5807","line":553,"column":51,"nodeType":"5808","messageId":"5809","endLine":553,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":602,"column":66,"nodeType":"5808","messageId":"5809","endLine":602,"endColumn":68},{"ruleId":"5806","severity":1,"message":"5807","line":602,"column":82,"nodeType":"5808","messageId":"5809","endLine":602,"endColumn":84},{"ruleId":"5949","severity":1,"message":"5950","line":651,"column":90,"nodeType":"5951","messageId":"5952","endLine":651,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":651,"column":113,"nodeType":"5951","messageId":"5952","endLine":651,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":651,"column":134,"nodeType":"5951","messageId":"5952","endLine":651,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":651,"column":157,"nodeType":"5951","messageId":"5952","endLine":651,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":652,"column":32,"nodeType":"5808","messageId":"5809","endLine":652,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":652,"column":48,"nodeType":"5808","messageId":"5809","endLine":652,"endColumn":50},{"ruleId":"5949","severity":1,"message":"5950","line":702,"column":90,"nodeType":"5951","messageId":"5952","endLine":702,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":702,"column":113,"nodeType":"5951","messageId":"5952","endLine":702,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":702,"column":134,"nodeType":"5951","messageId":"5952","endLine":702,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":702,"column":157,"nodeType":"5951","messageId":"5952","endLine":702,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":703,"column":32,"nodeType":"5808","messageId":"5809","endLine":703,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":703,"column":48,"nodeType":"5808","messageId":"5809","endLine":703,"endColumn":50},{"ruleId":"5949","severity":1,"message":"5950","line":752,"column":90,"nodeType":"5951","messageId":"5952","endLine":752,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":752,"column":113,"nodeType":"5951","messageId":"5952","endLine":752,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":752,"column":134,"nodeType":"5951","messageId":"5952","endLine":752,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":752,"column":157,"nodeType":"5951","messageId":"5952","endLine":752,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":753,"column":32,"nodeType":"5808","messageId":"5809","endLine":753,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":753,"column":48,"nodeType":"5808","messageId":"5809","endLine":753,"endColumn":50},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":24,"column":21,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":36,"column":11,"nodeType":"5808","messageId":"5809","endLine":36,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5807","line":43,"column":60,"nodeType":"5808","messageId":"5809","endLine":43,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":70,"column":17,"nodeType":"5803","messageId":"6170","endLine":70,"endColumn":242,"fix":"6206"},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":18,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":113,"column":69,"nodeType":"5808","messageId":"5809","endLine":113,"endColumn":71},{"ruleId":"5801","severity":1,"message":"5802","line":114,"column":21,"nodeType":"5803","endLine":114,"endColumn":200},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6059","line":7,"column":5,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":9},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":11,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":22,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":29,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5905","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6060","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":31,"column":24,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6052","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":37,"column":25,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6063","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":39,"column":21,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5841","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6057","line":47,"column":17,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":50,"column":12,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6059","line":7,"column":5,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":9},{"ruleId":"5787","severity":1,"message":"5824","line":7,"column":11,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5795","line":7,"column":22,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5818","line":7,"column":29,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5905","line":20,"column":11,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":22,"column":11,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6060","line":26,"column":12,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":26,"column":24,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6141","line":27,"column":12,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":27,"column":21,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6052","line":30,"column":12,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":30,"column":23,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":31,"column":12,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":31,"column":25,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":32,"column":12,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":32,"column":25,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6063","line":34,"column":12,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6064","line":34,"column":21,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6065","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6066","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6067","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6068","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6069","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6070","line":37,"column":23,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5841","line":38,"column":12,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6057","line":38,"column":17,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6071","line":39,"column":12,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":39,"column":21,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":40,"column":12,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":42,"column":24,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":43,"column":18,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6080","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":45,"column":22,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6084","line":47,"column":12,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":47,"column":20,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":50,"column":11,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":56,"column":24,"nodeType":"5808","messageId":"5809","endLine":56,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6207","line":4,"column":10,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5878","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5795","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5881","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5883","line":22,"column":10,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5884","line":22,"column":19,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5885","line":23,"column":10,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5886","line":23,"column":25,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5887","line":24,"column":10,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5888","line":24,"column":28,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":47},{"ruleId":"5787","severity":1,"message":"5889","line":25,"column":10,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":25,"column":25,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5891","line":26,"column":10,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5892","line":26,"column":22,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5893","line":27,"column":10,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5894","line":27,"column":31,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":53},{"ruleId":"5787","severity":1,"message":"5895","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5896","line":28,"column":19,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5897","line":29,"column":10,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5898","line":29,"column":19,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5899","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5900","line":30,"column":21,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5901","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5902","line":31,"column":25,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5903","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5904","line":32,"column":15,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5905","line":33,"column":9,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5906","line":35,"column":9,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6030","line":13,"column":10,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5883","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":20,"column":21,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":9,"column":18,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5795","line":9,"column":29,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6030","line":17,"column":10,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":31,"column":6,"nodeType":"5799","endLine":31,"endColumn":15,"suggestions":"6208"},{"ruleId":"5801","severity":1,"message":"5802","line":36,"column":11,"nodeType":"5803","endLine":38,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":39,"column":13,"nodeType":"5803","endLine":39,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5861","line":15,"column":3,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5862","line":18,"column":7,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":12},{"ruleId":"5806","severity":1,"message":"5807","line":142,"column":40,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":42},{"ruleId":"5806","severity":1,"message":"5807","line":182,"column":28,"nodeType":"5808","messageId":"5809","endLine":182,"endColumn":30},{"ruleId":"5806","severity":1,"message":"5807","line":198,"column":29,"nodeType":"5808","messageId":"5809","endLine":198,"endColumn":31},{"ruleId":"5863","severity":1,"message":"5864","line":360,"column":3,"nodeType":"5865","messageId":"5866","endLine":376,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":360,"column":3,"nodeType":"5789","messageId":"5869","endLine":360,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5991","line":75,"column":9,"nodeType":"5789","messageId":"5790","endLine":75,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":76,"column":9,"nodeType":"5789","messageId":"5790","endLine":76,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":77,"column":9,"nodeType":"5789","messageId":"5790","endLine":77,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":78,"column":9,"nodeType":"5789","messageId":"5790","endLine":78,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":79,"column":9,"nodeType":"5789","messageId":"5790","endLine":79,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":85,"column":9,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":87,"column":9,"nodeType":"5789","messageId":"5790","endLine":87,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":89,"column":9,"nodeType":"5789","messageId":"5790","endLine":89,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5996","line":152,"column":7,"nodeType":"5789","messageId":"5790","endLine":152,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":158,"column":21,"nodeType":"5808","messageId":"5809","endLine":158,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":162,"column":12,"nodeType":"5808","endLine":162,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":164,"column":21,"nodeType":"5789","endLine":164,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":168,"column":24,"nodeType":"5789","endLine":168,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":170,"column":20,"nodeType":"5936","endLine":170,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5999","line":173,"column":26,"nodeType":"5789","endLine":173,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6000","line":175,"column":22,"nodeType":"5936","endLine":175,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5939","line":178,"column":20,"nodeType":"5789","endLine":178,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":182,"column":24,"nodeType":"5789","endLine":182,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6004","line":186,"column":26,"nodeType":"5789","endLine":186,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6006","line":190,"column":21,"nodeType":"5789","endLine":190,"endColumn":32},{"ruleId":"5797","severity":1,"message":"6007","line":194,"column":23,"nodeType":"5789","endLine":194,"endColumn":36},{"ruleId":"5797","severity":1,"message":"5941","line":198,"column":17,"nodeType":"5789","endLine":198,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":202,"column":17,"nodeType":"5789","endLine":202,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":206,"column":22,"nodeType":"5789","endLine":206,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":210,"column":30,"nodeType":"5789","endLine":210,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":212,"column":26,"nodeType":"5936","endLine":212,"endColumn":27},{"ruleId":"5797","severity":1,"message":"6010","line":215,"column":32,"nodeType":"5789","endLine":215,"endColumn":54},{"ruleId":"5797","severity":1,"message":"6011","line":217,"column":28,"nodeType":"5936","endLine":217,"endColumn":29},{"ruleId":"5912","severity":1,"message":"5913","line":226,"column":6,"nodeType":"5799","messageId":"5914","endLine":226,"endColumn":51},{"ruleId":"5787","severity":1,"message":"5947","line":227,"column":9,"nodeType":"5789","messageId":"5790","endLine":227,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6209","line":232,"column":11,"nodeType":"5789","messageId":"5790","endLine":232,"endColumn":27},{"ruleId":"5806","severity":1,"message":"5807","line":241,"column":70,"nodeType":"5808","messageId":"5809","endLine":241,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":257,"column":77,"nodeType":"5808","messageId":"5809","endLine":257,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":279,"column":155,"nodeType":"5808","messageId":"5809","endLine":279,"endColumn":157},{"ruleId":"5806","severity":1,"message":"5807","line":284,"column":160,"nodeType":"5808","messageId":"5809","endLine":284,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":285,"column":158,"nodeType":"5808","messageId":"5809","endLine":285,"endColumn":160},{"ruleId":"5806","severity":1,"message":"5807","line":286,"column":167,"nodeType":"5808","messageId":"5809","endLine":286,"endColumn":169},{"ruleId":"5806","severity":1,"message":"5807","line":291,"column":167,"nodeType":"5808","messageId":"5809","endLine":291,"endColumn":169},{"ruleId":"5806","severity":1,"message":"5807","line":292,"column":160,"nodeType":"5808","messageId":"5809","endLine":292,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":293,"column":158,"nodeType":"5808","messageId":"5809","endLine":293,"endColumn":160},{"ruleId":"5806","severity":1,"message":"5810","line":523,"column":22,"nodeType":"5808","messageId":"5809","endLine":523,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":532,"column":22,"nodeType":"5808","messageId":"5809","endLine":532,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":547,"column":36,"nodeType":"5808","messageId":"5809","endLine":547,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":547,"column":65,"nodeType":"5808","messageId":"5809","endLine":547,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":597,"column":74,"nodeType":"5808","messageId":"5809","endLine":597,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":597,"column":90,"nodeType":"5808","messageId":"5809","endLine":597,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":597,"column":102,"nodeType":"5808","messageId":"5809","endLine":597,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":647,"column":154,"nodeType":"5808","messageId":"5809","endLine":647,"endColumn":156},{"ruleId":"5806","severity":1,"message":"5807","line":647,"column":170,"nodeType":"5808","messageId":"5809","endLine":647,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5807","line":647,"column":182,"nodeType":"5808","messageId":"5809","endLine":647,"endColumn":184},{"ruleId":"5949","severity":1,"message":"5950","line":697,"column":89,"nodeType":"5951","messageId":"5952","endLine":697,"endColumn":91},{"ruleId":"5949","severity":1,"message":"5950","line":697,"column":112,"nodeType":"5951","messageId":"5952","endLine":697,"endColumn":114},{"ruleId":"5949","severity":1,"message":"5950","line":697,"column":133,"nodeType":"5951","messageId":"5952","endLine":697,"endColumn":135},{"ruleId":"5949","severity":1,"message":"5950","line":697,"column":156,"nodeType":"5951","messageId":"5952","endLine":697,"endColumn":158},{"ruleId":"5806","severity":1,"message":"5807","line":697,"column":409,"nodeType":"5808","messageId":"5809","endLine":697,"endColumn":411},{"ruleId":"5806","severity":1,"message":"5807","line":697,"column":425,"nodeType":"5808","messageId":"5809","endLine":697,"endColumn":427},{"ruleId":"5806","severity":1,"message":"5807","line":697,"column":441,"nodeType":"5808","messageId":"5809","endLine":697,"endColumn":443},{"ruleId":"5949","severity":1,"message":"5950","line":747,"column":90,"nodeType":"5951","messageId":"5952","endLine":747,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":747,"column":113,"nodeType":"5951","messageId":"5952","endLine":747,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":747,"column":134,"nodeType":"5951","messageId":"5952","endLine":747,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":747,"column":157,"nodeType":"5951","messageId":"5952","endLine":747,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":747,"column":526,"nodeType":"5808","messageId":"5809","endLine":747,"endColumn":528},{"ruleId":"5806","severity":1,"message":"5807","line":747,"column":542,"nodeType":"5808","messageId":"5809","endLine":747,"endColumn":544},{"ruleId":"5806","severity":1,"message":"5807","line":747,"column":558,"nodeType":"5808","messageId":"5809","endLine":747,"endColumn":560},{"ruleId":"5806","severity":1,"message":"5807","line":797,"column":187,"nodeType":"5808","messageId":"5809","endLine":797,"endColumn":189},{"ruleId":"5806","severity":1,"message":"5807","line":797,"column":203,"nodeType":"5808","messageId":"5809","endLine":797,"endColumn":205},{"ruleId":"5806","severity":1,"message":"5807","line":797,"column":219,"nodeType":"5808","messageId":"5809","endLine":797,"endColumn":221},{"ruleId":"5949","severity":1,"message":"5950","line":847,"column":89,"nodeType":"5951","messageId":"5952","endLine":847,"endColumn":91},{"ruleId":"5949","severity":1,"message":"5950","line":847,"column":112,"nodeType":"5951","messageId":"5952","endLine":847,"endColumn":114},{"ruleId":"5949","severity":1,"message":"5950","line":847,"column":133,"nodeType":"5951","messageId":"5952","endLine":847,"endColumn":135},{"ruleId":"5949","severity":1,"message":"5950","line":847,"column":156,"nodeType":"5951","messageId":"5952","endLine":847,"endColumn":158},{"ruleId":"5806","severity":1,"message":"5807","line":847,"column":445,"nodeType":"5808","messageId":"5809","endLine":847,"endColumn":447},{"ruleId":"5806","severity":1,"message":"5807","line":847,"column":461,"nodeType":"5808","messageId":"5809","endLine":847,"endColumn":463},{"ruleId":"5806","severity":1,"message":"5807","line":847,"column":477,"nodeType":"5808","messageId":"5809","endLine":847,"endColumn":479},{"ruleId":"5949","severity":1,"message":"5950","line":897,"column":90,"nodeType":"5951","messageId":"5952","endLine":897,"endColumn":92},{"ruleId":"5949","severity":1,"message":"5950","line":897,"column":113,"nodeType":"5951","messageId":"5952","endLine":897,"endColumn":115},{"ruleId":"5949","severity":1,"message":"5950","line":897,"column":134,"nodeType":"5951","messageId":"5952","endLine":897,"endColumn":136},{"ruleId":"5949","severity":1,"message":"5950","line":897,"column":157,"nodeType":"5951","messageId":"5952","endLine":897,"endColumn":159},{"ruleId":"5806","severity":1,"message":"5807","line":897,"column":560,"nodeType":"5808","messageId":"5809","endLine":897,"endColumn":562},{"ruleId":"5806","severity":1,"message":"5807","line":897,"column":576,"nodeType":"5808","messageId":"5809","endLine":897,"endColumn":578},{"ruleId":"5806","severity":1,"message":"5807","line":897,"column":592,"nodeType":"5808","messageId":"5809","endLine":897,"endColumn":594},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6090","line":33,"column":11,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6051","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":44,"column":23,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":45,"column":25,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6062","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6056","line":46,"column":25,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":51,"column":17,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":55,"column":10,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":55,"column":23,"nodeType":"5789","messageId":"5790","endLine":55,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":121,"column":22,"nodeType":"5808","messageId":"5809","endLine":121,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":125,"column":235,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":237},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":42,"column":17,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":107,"column":46,"nodeType":"5808","messageId":"5809","endLine":107,"endColumn":48},{"ruleId":"5797","severity":1,"message":"6144","line":180,"column":8,"nodeType":"5799","endLine":180,"endColumn":16,"suggestions":"6210"},{"ruleId":"5806","severity":1,"message":"5807","line":186,"column":74,"nodeType":"5808","messageId":"5809","endLine":186,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":187,"column":59,"nodeType":"5808","messageId":"5809","endLine":187,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":192,"column":72,"nodeType":"5808","messageId":"5809","endLine":192,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":234,"column":72,"nodeType":"5917","messageId":"5918","endLine":234,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":235,"column":55,"nodeType":"5808","messageId":"5809","endLine":235,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5810","line":243,"column":35,"nodeType":"5808","messageId":"5809","endLine":243,"endColumn":37},{"ruleId":"5915","severity":1,"message":"5916","line":293,"column":58,"nodeType":"5917","messageId":"5918","endLine":293,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":326,"column":145,"nodeType":"5808","messageId":"5809","endLine":326,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6211","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":34,"column":23,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6056","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":40,"column":24,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":41,"column":23,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6072","line":43,"column":21,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6074","line":44,"column":24,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6082","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":46,"column":24,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6212","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6080","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6081","line":49,"column":22,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6057","line":50,"column":17,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":51,"column":20,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":53,"column":11,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6141","line":73,"column":15,"nodeType":"5789","messageId":"5790","endLine":73,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":74,"column":48,"nodeType":"5808","messageId":"5809","endLine":74,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":78,"column":55,"nodeType":"5808","messageId":"5809","endLine":78,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":111,"column":8,"nodeType":"5799","endLine":111,"endColumn":16,"suggestions":"6213"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6030","line":29,"column":14,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":40,"column":23,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":41,"column":24,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":42,"column":23,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":44,"column":12,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":44,"column":21,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":45,"column":24,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":48,"column":18,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":50,"column":22,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":51,"column":12,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":51,"column":24,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":52,"column":12,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":52,"column":20,"nodeType":"5789","messageId":"5790","endLine":52,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":53,"column":17,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":45,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":148,"column":62,"nodeType":"5808","messageId":"5809","endLine":148,"endColumn":64},{"ruleId":"5797","severity":1,"message":"6103","line":165,"column":8,"nodeType":"5799","endLine":165,"endColumn":16,"suggestions":"6214"},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":74,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":172,"column":59,"nodeType":"5808","messageId":"5809","endLine":172,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":177,"column":72,"nodeType":"5808","messageId":"5809","endLine":177,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":200,"column":58,"nodeType":"5917","messageId":"5918","endLine":200,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":233,"column":145,"nodeType":"5808","messageId":"5809","endLine":233,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5882","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":69,"column":17,"nodeType":"5803","messageId":"6170","endLine":69,"endColumn":244,"fix":"6215"},{"ruleId":"5806","severity":1,"message":"5810","line":93,"column":18,"nodeType":"5808","messageId":"5809","endLine":93,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":97,"column":87,"nodeType":"5808","messageId":"5809","endLine":97,"endColumn":89},{"ruleId":"5806","severity":1,"message":"5810","line":124,"column":18,"nodeType":"5808","messageId":"5809","endLine":124,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":133,"column":21,"nodeType":"5803","endLine":133,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":136,"column":44,"nodeType":"5803","endLine":136,"endColumn":155},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5788","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6102","line":14,"column":10,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5819","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6105","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":9,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":26,"column":9,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5930","line":28,"column":9,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6057","line":43,"column":15,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6146","line":82,"column":21,"nodeType":"5789","messageId":"5790","endLine":82,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5903","line":131,"column":12,"nodeType":"5789","messageId":"5790","endLine":131,"endColumn":15},{"ruleId":"5797","severity":1,"message":"6144","line":155,"column":6,"nodeType":"5799","endLine":155,"endColumn":14,"suggestions":"6216"},{"ruleId":"5806","severity":1,"message":"5807","line":161,"column":68,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":162,"column":51,"nodeType":"5808","messageId":"5809","endLine":162,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":167,"column":66,"nodeType":"5808","messageId":"5809","endLine":167,"endColumn":68},{"ruleId":"5915","severity":1,"message":"5916","line":223,"column":54,"nodeType":"5917","messageId":"5918","endLine":223,"endColumn":56},{"ruleId":"5806","severity":1,"message":"5810","line":224,"column":35,"nodeType":"5808","messageId":"5809","endLine":224,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5810","line":232,"column":23,"nodeType":"5808","messageId":"5809","endLine":232,"endColumn":25},{"ruleId":"5915","severity":1,"message":"5916","line":268,"column":46,"nodeType":"5917","messageId":"5918","endLine":268,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":301,"column":137,"nodeType":"5808","messageId":"5809","endLine":301,"endColumn":139},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":32,"column":6,"nodeType":"5799","endLine":32,"endColumn":15,"suggestions":"6217"},{"ruleId":"5801","severity":1,"message":"5802","line":39,"column":11,"nodeType":"5803","endLine":41,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":42,"column":13,"nodeType":"5803","endLine":42,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5860","line":7,"column":87,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":100},{"ruleId":"5787","severity":1,"message":"5861","line":7,"column":117,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":130},{"ruleId":"5787","severity":1,"message":"5862","line":8,"column":7,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":317,"column":3,"nodeType":"5865","messageId":"5866","endLine":327,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":317,"column":3,"nodeType":"5789","messageId":"5869","endLine":317,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5927","line":18,"column":10,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5928","line":63,"column":10,"nodeType":"5789","messageId":"5790","endLine":63,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":65,"column":10,"nodeType":"5789","messageId":"5790","endLine":65,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5841","line":92,"column":9,"nodeType":"5789","messageId":"5790","endLine":92,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":94,"column":9,"nodeType":"5789","messageId":"5790","endLine":94,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":96,"column":9,"nodeType":"5789","messageId":"5790","endLine":96,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":146,"column":21,"nodeType":"5808","messageId":"5809","endLine":146,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":150,"column":12,"nodeType":"5808","endLine":150,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":153,"column":36,"nodeType":"5808","messageId":"5809","endLine":153,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":153,"column":65,"nodeType":"5808","messageId":"5934","endLine":153,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":153,"column":77,"nodeType":"5808","messageId":"5809","endLine":153,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":153,"column":155,"nodeType":"5808","messageId":"5934","endLine":153,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":153,"column":167,"nodeType":"5808","messageId":"5809","endLine":153,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":155,"column":27,"nodeType":"5808","messageId":"5934","endLine":155,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":155,"column":39,"nodeType":"5808","messageId":"5809","endLine":155,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":155,"column":117,"nodeType":"5808","messageId":"5934","endLine":155,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":155,"column":129,"nodeType":"5808","messageId":"5809","endLine":155,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":161,"column":20,"nodeType":"5936","endLine":161,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":162,"column":18,"nodeType":"5936","endLine":162,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":168,"column":15,"nodeType":"5936","endLine":168,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":171,"column":20,"nodeType":"5789","endLine":171,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":174,"column":21,"nodeType":"5789","endLine":174,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":178,"column":17,"nodeType":"5789","endLine":178,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":182,"column":17,"nodeType":"5789","endLine":182,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":186,"column":22,"nodeType":"5789","endLine":186,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":190,"column":30,"nodeType":"5789","endLine":190,"endColumn":50},{"ruleId":"5912","severity":1,"message":"5913","line":197,"column":6,"nodeType":"5799","messageId":"5914","endLine":197,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":199,"column":9,"nodeType":"5789","messageId":"5790","endLine":199,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5948","line":213,"column":9,"nodeType":"5789","messageId":"5790","endLine":213,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5906","line":223,"column":9,"nodeType":"5789","messageId":"5790","endLine":223,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5810","line":363,"column":22,"nodeType":"5808","messageId":"5809","endLine":363,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":376,"column":36,"nodeType":"5808","messageId":"5809","endLine":376,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":376,"column":48,"nodeType":"5808","messageId":"5809","endLine":376,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":376,"column":60,"nodeType":"5808","messageId":"5809","endLine":376,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5807","line":411,"column":74,"nodeType":"5808","messageId":"5809","endLine":411,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":411,"column":86,"nodeType":"5808","messageId":"5809","endLine":411,"endColumn":88},{"ruleId":"5806","severity":1,"message":"5807","line":411,"column":98,"nodeType":"5808","messageId":"5809","endLine":411,"endColumn":100},{"ruleId":"5949","severity":1,"message":"5950","line":446,"column":92,"nodeType":"5951","messageId":"5952","endLine":446,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":446,"column":115,"nodeType":"5951","messageId":"5952","endLine":446,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":446,"column":136,"nodeType":"5951","messageId":"5952","endLine":446,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":446,"column":159,"nodeType":"5951","messageId":"5952","endLine":446,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":447,"column":34,"nodeType":"5808","messageId":"5809","endLine":447,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":447,"column":50,"nodeType":"5808","messageId":"5809","endLine":447,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":447,"column":62,"nodeType":"5808","messageId":"5809","endLine":447,"endColumn":64},{"ruleId":"5806","severity":1,"message":"5807","line":482,"column":111,"nodeType":"5808","messageId":"5809","endLine":482,"endColumn":113},{"ruleId":"5806","severity":1,"message":"5807","line":482,"column":127,"nodeType":"5808","messageId":"5809","endLine":482,"endColumn":129},{"ruleId":"5806","severity":1,"message":"5807","line":482,"column":139,"nodeType":"5808","messageId":"5809","endLine":482,"endColumn":141},{"ruleId":"5806","severity":1,"message":"5807","line":518,"column":68,"nodeType":"5808","messageId":"5809","endLine":518,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":518,"column":84,"nodeType":"5808","messageId":"5809","endLine":518,"endColumn":86},{"ruleId":"5806","severity":1,"message":"5807","line":518,"column":96,"nodeType":"5808","messageId":"5809","endLine":518,"endColumn":98},{"ruleId":"5949","severity":1,"message":"5950","line":555,"column":92,"nodeType":"5951","messageId":"5952","endLine":555,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":555,"column":115,"nodeType":"5951","messageId":"5952","endLine":555,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":555,"column":136,"nodeType":"5951","messageId":"5952","endLine":555,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":555,"column":159,"nodeType":"5951","messageId":"5952","endLine":555,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":556,"column":34,"nodeType":"5808","messageId":"5809","endLine":556,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":556,"column":50,"nodeType":"5808","messageId":"5809","endLine":556,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":556,"column":62,"nodeType":"5808","messageId":"5809","endLine":556,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":594,"column":92,"nodeType":"5951","messageId":"5952","endLine":594,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":594,"column":115,"nodeType":"5951","messageId":"5952","endLine":594,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":594,"column":136,"nodeType":"5951","messageId":"5952","endLine":594,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":594,"column":159,"nodeType":"5951","messageId":"5952","endLine":594,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":595,"column":34,"nodeType":"5808","messageId":"5809","endLine":595,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":595,"column":50,"nodeType":"5808","messageId":"5809","endLine":595,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":595,"column":62,"nodeType":"5808","messageId":"5809","endLine":595,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":631,"column":92,"nodeType":"5951","messageId":"5952","endLine":631,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":631,"column":115,"nodeType":"5951","messageId":"5952","endLine":631,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":631,"column":136,"nodeType":"5951","messageId":"5952","endLine":631,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":631,"column":159,"nodeType":"5951","messageId":"5952","endLine":631,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":632,"column":34,"nodeType":"5808","messageId":"5809","endLine":632,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":632,"column":50,"nodeType":"5808","messageId":"5809","endLine":632,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":632,"column":62,"nodeType":"5808","messageId":"5809","endLine":632,"endColumn":64},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6056","line":37,"column":25,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6057","line":47,"column":17,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5806","severity":1,"message":"5810","line":60,"column":55,"nodeType":"5808","messageId":"5809","endLine":60,"endColumn":57},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5819","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":41,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":43},{"ruleId":"5797","severity":1,"message":"6144","line":159,"column":8,"nodeType":"5799","endLine":159,"endColumn":16,"suggestions":"6218"},{"ruleId":"5806","severity":1,"message":"5807","line":165,"column":74,"nodeType":"5808","messageId":"5809","endLine":165,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":166,"column":59,"nodeType":"5808","messageId":"5809","endLine":166,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":72,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":213,"column":72,"nodeType":"5917","messageId":"5918","endLine":213,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":214,"column":55,"nodeType":"5808","messageId":"5809","endLine":214,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":258,"column":58,"nodeType":"5917","messageId":"5918","endLine":258,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":291,"column":145,"nodeType":"5808","messageId":"5809","endLine":291,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":15,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":42,"column":21,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":9,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":51,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":93,"column":6,"nodeType":"5799","endLine":93,"endColumn":14,"suggestions":"6219"},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":28,"column":12,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":28,"column":21,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":23,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":12,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":25,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6056","line":33,"column":25,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":17,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":11,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":58,"column":28,"nodeType":"5808","messageId":"5809","endLine":58,"endColumn":30},{"ruleId":"5806","severity":1,"message":"5807","line":62,"column":48,"nodeType":"5808","messageId":"5809","endLine":62,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":66,"column":55,"nodeType":"5808","messageId":"5809","endLine":66,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":107,"column":8,"nodeType":"5799","endLine":107,"endColumn":16,"suggestions":"6220"},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":24,"column":21,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6185","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6113","line":37,"column":11,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":38,"column":78,"nodeType":"5808","messageId":"5809","endLine":38,"endColumn":80},{"ruleId":"6168","severity":1,"message":"6169","line":56,"column":17,"nodeType":"5803","messageId":"6170","endLine":56,"endColumn":202,"fix":"6221"},{"ruleId":"5806","severity":1,"message":"5810","line":65,"column":91,"nodeType":"5808","messageId":"5809","endLine":65,"endColumn":93},{"ruleId":"5806","severity":1,"message":"5810","line":66,"column":40,"nodeType":"5808","messageId":"5809","endLine":66,"endColumn":42},{"ruleId":"5806","severity":1,"message":"5810","line":88,"column":182,"nodeType":"5808","messageId":"5809","endLine":88,"endColumn":184},{"ruleId":"5806","severity":1,"message":"5810","line":112,"column":18,"nodeType":"5808","messageId":"5809","endLine":112,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5818","line":9,"column":16,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5819","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5823","line":25,"column":7,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6222","line":26,"column":7,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":14},{"ruleId":"5797","severity":1,"message":"5798","line":34,"column":6,"nodeType":"5799","endLine":34,"endColumn":14,"suggestions":"6223"},{"ruleId":"5806","severity":1,"message":"5807","line":63,"column":69,"nodeType":"5808","messageId":"5809","endLine":63,"endColumn":71},{"ruleId":"5806","severity":1,"message":"5807","line":87,"column":21,"nodeType":"5808","messageId":"5809","endLine":87,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":109,"column":17,"nodeType":"5808","messageId":"5809","endLine":109,"endColumn":19},{"ruleId":"5806","severity":1,"message":"5807","line":121,"column":23,"nodeType":"5808","messageId":"5809","endLine":121,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":147,"column":23,"nodeType":"5808","messageId":"5809","endLine":147,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":181,"column":15,"nodeType":"5808","messageId":"5809","endLine":181,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5818","line":9,"column":16,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5819","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5823","line":25,"column":7,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6222","line":26,"column":7,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":14},{"ruleId":"5797","severity":1,"message":"5798","line":34,"column":6,"nodeType":"5799","endLine":34,"endColumn":14,"suggestions":"6224"},{"ruleId":"5806","severity":1,"message":"5807","line":63,"column":69,"nodeType":"5808","messageId":"5809","endLine":63,"endColumn":71},{"ruleId":"5806","severity":1,"message":"5807","line":87,"column":21,"nodeType":"5808","messageId":"5809","endLine":87,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":109,"column":17,"nodeType":"5808","messageId":"5809","endLine":109,"endColumn":19},{"ruleId":"5806","severity":1,"message":"5807","line":121,"column":23,"nodeType":"5808","messageId":"5809","endLine":121,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":147,"column":23,"nodeType":"5808","messageId":"5809","endLine":147,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5807","line":181,"column":15,"nodeType":"5808","messageId":"5809","endLine":181,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":4,"column":8,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":5,"column":9,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6207","line":4,"column":10,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6225","line":4,"column":24,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5878","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5795","line":11,"column":9,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5881","line":20,"column":9,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5883","line":22,"column":10,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5884","line":22,"column":19,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5885","line":23,"column":10,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5886","line":23,"column":25,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5887","line":24,"column":10,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5888","line":24,"column":28,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":47},{"ruleId":"5787","severity":1,"message":"5889","line":25,"column":10,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":25,"column":25,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5891","line":26,"column":10,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5892","line":26,"column":22,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5893","line":27,"column":10,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5894","line":27,"column":31,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":53},{"ruleId":"5787","severity":1,"message":"5895","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5896","line":28,"column":19,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5897","line":29,"column":10,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5898","line":29,"column":19,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5899","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5900","line":30,"column":21,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5901","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5902","line":31,"column":25,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5903","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5904","line":32,"column":15,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5905","line":33,"column":9,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5906","line":35,"column":9,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":9,"column":18,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5795","line":9,"column":29,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":34},{"ruleId":"5787","severity":1,"message":"6030","line":17,"column":10,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5882","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":4,"column":8,"nodeType":"5789","messageId":"5790","endLine":4,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5880","line":5,"column":9,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":14},{"ruleId":"5806","severity":1,"message":"5807","line":22,"column":72,"nodeType":"5808","messageId":"5809","endLine":22,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5807","line":35,"column":72,"nodeType":"5808","messageId":"5809","endLine":35,"endColumn":74},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6030","line":13,"column":10,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5883","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":20,"column":21,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5796","line":11,"column":19,"nodeType":"5789","messageId":"5790","endLine":11,"endColumn":29},{"ruleId":"5797","severity":1,"message":"5798","line":20,"column":5,"nodeType":"5799","endLine":20,"endColumn":14,"suggestions":"6226"},{"ruleId":"5801","severity":1,"message":"5802","line":27,"column":17,"nodeType":"5803","endLine":29,"endColumn":21},{"ruleId":"5804","severity":1,"message":"5805","line":30,"column":21,"nodeType":"5803","endLine":30,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5807","line":34,"column":47,"nodeType":"5808","messageId":"5809","endLine":34,"endColumn":49},{"ruleId":"5806","severity":1,"message":"5810","line":34,"column":105,"nodeType":"5808","messageId":"5809","endLine":34,"endColumn":107},{"ruleId":"5787","severity":1,"message":"5853","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5854","line":7,"column":20,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5855","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":8,"column":24,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5907","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5889","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":28,"column":25,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5896","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5908","line":36,"column":10,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5909","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6227","line":105,"column":18,"nodeType":"5789","messageId":"5790","endLine":105,"endColumn":28},{"ruleId":"5787","severity":1,"message":"6228","line":122,"column":18,"nodeType":"5789","messageId":"5790","endLine":122,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":141,"column":23,"nodeType":"5808","messageId":"5809","endLine":141,"endColumn":25},{"ruleId":"5797","severity":1,"message":"5910","line":145,"column":12,"nodeType":"5808","endLine":145,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5911","line":147,"column":19,"nodeType":"5789","endLine":147,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":155,"column":5,"nodeType":"5799","messageId":"5914","endLine":155,"endColumn":54},{"ruleId":"5806","severity":1,"message":"5807","line":166,"column":70,"nodeType":"5808","messageId":"5809","endLine":166,"endColumn":72},{"ruleId":"5915","severity":1,"message":"5916","line":302,"column":77,"nodeType":"5917","messageId":"5918","endLine":302,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":303,"column":38,"nodeType":"5808","messageId":"5809","endLine":303,"endColumn":40},{"ruleId":"5806","severity":1,"message":"5807","line":303,"column":50,"nodeType":"5808","messageId":"5809","endLine":303,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":316,"column":193,"nodeType":"5808","messageId":"5809","endLine":316,"endColumn":195},{"ruleId":"5806","severity":1,"message":"5807","line":316,"column":205,"nodeType":"5808","messageId":"5809","endLine":316,"endColumn":207},{"ruleId":"5806","severity":1,"message":"5807","line":329,"column":43,"nodeType":"5808","messageId":"5809","endLine":329,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":329,"column":55,"nodeType":"5808","messageId":"5809","endLine":329,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5807","line":370,"column":43,"nodeType":"5808","messageId":"5809","endLine":370,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":370,"column":55,"nodeType":"5808","messageId":"5809","endLine":370,"endColumn":57},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6229","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6230","line":24,"column":25,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6231","line":27,"column":12,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6232","line":27,"column":17,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6233","line":28,"column":17,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6234","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6047","line":36,"column":18,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":27},{"ruleId":"5797","severity":1,"message":"5910","line":59,"column":16,"nodeType":"5936","endLine":59,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":61,"column":9,"nodeType":"5789","messageId":"5790","endLine":61,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6235","line":75,"column":20,"nodeType":"5789","messageId":"5790","endLine":75,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":92,"column":20,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6236","line":107,"column":11,"nodeType":"5789","messageId":"5790","endLine":107,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5905","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6230","line":33,"column":25,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6232","line":34,"column":17,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6233","line":35,"column":17,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6234","line":36,"column":19,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6121","line":40,"column":11,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6047","line":47,"column":18,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":27},{"ruleId":"5797","severity":1,"message":"5910","line":70,"column":16,"nodeType":"5936","endLine":70,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":72,"column":9,"nodeType":"5789","messageId":"5790","endLine":72,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6235","line":86,"column":20,"nodeType":"5789","messageId":"5790","endLine":86,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":107,"column":20,"nodeType":"5808","messageId":"5809","endLine":107,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":134,"column":8,"nodeType":"5799","endLine":134,"endColumn":16,"suggestions":"6237"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5854","line":13,"column":16,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5905","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6238","line":31,"column":23,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6189","line":32,"column":21,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6230","line":34,"column":25,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6232","line":35,"column":17,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6233","line":36,"column":17,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6234","line":37,"column":19,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6239","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6240","line":39,"column":18,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6241","line":40,"column":19,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6047","line":45,"column":18,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6121","line":46,"column":11,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":71,"column":16,"nodeType":"5936","endLine":71,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":73,"column":9,"nodeType":"5789","messageId":"5790","endLine":73,"endColumn":15},{"ruleId":"5806","severity":1,"message":"5807","line":108,"column":20,"nodeType":"5808","messageId":"5809","endLine":108,"endColumn":22},{"ruleId":"5806","severity":1,"message":"5807","line":113,"column":20,"nodeType":"5808","messageId":"5809","endLine":113,"endColumn":22},{"ruleId":"6018","severity":1,"message":"6019","line":114,"column":21,"nodeType":"5789","messageId":"6020","endLine":114,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":139,"column":8,"nodeType":"5799","endLine":139,"endColumn":16,"suggestions":"6242"},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5883","line":16,"column":12,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":16,"column":21,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":31},{"ruleId":"5806","severity":1,"message":"5807","line":21,"column":73,"nodeType":"5808","messageId":"5809","endLine":21,"endColumn":75},{"ruleId":"5806","severity":1,"message":"5807","line":27,"column":60,"nodeType":"5808","messageId":"5809","endLine":27,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5810","line":54,"column":100,"nodeType":"5808","messageId":"5809","endLine":54,"endColumn":102},{"ruleId":"5806","severity":1,"message":"5807","line":75,"column":117,"nodeType":"5808","messageId":"5809","endLine":75,"endColumn":119},{"ruleId":"5806","severity":1,"message":"5807","line":77,"column":36,"nodeType":"5808","messageId":"5809","endLine":77,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":77,"column":90,"nodeType":"5808","messageId":"5809","endLine":77,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":83,"column":45,"nodeType":"5808","messageId":"5809","endLine":83,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5807","line":83,"column":82,"nodeType":"5808","messageId":"5809","endLine":83,"endColumn":84},{"ruleId":"5806","severity":1,"message":"5810","line":103,"column":42,"nodeType":"5808","messageId":"5809","endLine":103,"endColumn":44},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5825","line":31,"column":6,"nodeType":"5799","endLine":31,"endColumn":15,"suggestions":"6243"},{"ruleId":"5801","severity":1,"message":"5802","line":36,"column":11,"nodeType":"5803","endLine":38,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":39,"column":13,"nodeType":"5803","endLine":39,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5862","line":16,"column":7,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":12},{"ruleId":"5806","severity":1,"message":"5807","line":125,"column":42,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5807","line":165,"column":30,"nodeType":"5808","messageId":"5809","endLine":165,"endColumn":32},{"ruleId":"5863","severity":1,"message":"5864","line":327,"column":3,"nodeType":"5865","messageId":"5866","endLine":343,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":327,"column":3,"nodeType":"5789","messageId":"5869","endLine":327,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5828","line":10,"column":16,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5990","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5991","line":75,"column":9,"nodeType":"5789","messageId":"5790","endLine":75,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":76,"column":9,"nodeType":"5789","messageId":"5790","endLine":76,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5993","line":77,"column":9,"nodeType":"5789","messageId":"5790","endLine":77,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5994","line":78,"column":9,"nodeType":"5789","messageId":"5790","endLine":78,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5995","line":79,"column":9,"nodeType":"5789","messageId":"5790","endLine":79,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5841","line":85,"column":9,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5996","line":148,"column":7,"nodeType":"5789","messageId":"5790","endLine":148,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5810","line":154,"column":21,"nodeType":"5808","messageId":"5809","endLine":154,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":158,"column":12,"nodeType":"5808","endLine":158,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5940","line":160,"column":21,"nodeType":"5789","endLine":160,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5997","line":164,"column":24,"nodeType":"5789","endLine":164,"endColumn":38},{"ruleId":"5797","severity":1,"message":"5998","line":166,"column":20,"nodeType":"5936","endLine":166,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5999","line":169,"column":26,"nodeType":"5789","endLine":169,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6000","line":171,"column":22,"nodeType":"5936","endLine":171,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5939","line":174,"column":20,"nodeType":"5789","endLine":174,"endColumn":30},{"ruleId":"5797","severity":1,"message":"6003","line":178,"column":24,"nodeType":"5789","endLine":178,"endColumn":38},{"ruleId":"5797","severity":1,"message":"6004","line":182,"column":26,"nodeType":"5789","endLine":182,"endColumn":42},{"ruleId":"5797","severity":1,"message":"6006","line":186,"column":21,"nodeType":"5789","endLine":186,"endColumn":32},{"ruleId":"5797","severity":1,"message":"6007","line":190,"column":23,"nodeType":"5789","endLine":190,"endColumn":36},{"ruleId":"5797","severity":1,"message":"5941","line":194,"column":17,"nodeType":"5789","endLine":194,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":198,"column":17,"nodeType":"5789","endLine":198,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":202,"column":22,"nodeType":"5789","endLine":202,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":206,"column":30,"nodeType":"5789","endLine":206,"endColumn":50},{"ruleId":"5797","severity":1,"message":"6009","line":208,"column":26,"nodeType":"5936","endLine":208,"endColumn":27},{"ruleId":"5797","severity":1,"message":"6010","line":211,"column":32,"nodeType":"5789","endLine":211,"endColumn":54},{"ruleId":"5797","severity":1,"message":"6011","line":213,"column":28,"nodeType":"5936","endLine":213,"endColumn":29},{"ruleId":"5912","severity":1,"message":"5913","line":222,"column":6,"nodeType":"5799","messageId":"5914","endLine":222,"endColumn":51},{"ruleId":"5787","severity":1,"message":"6209","line":225,"column":11,"nodeType":"5789","messageId":"5790","endLine":225,"endColumn":27},{"ruleId":"5806","severity":1,"message":"5807","line":234,"column":70,"nodeType":"5808","messageId":"5809","endLine":234,"endColumn":72},{"ruleId":"5806","severity":1,"message":"5807","line":250,"column":77,"nodeType":"5808","messageId":"5809","endLine":250,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":272,"column":155,"nodeType":"5808","messageId":"5809","endLine":272,"endColumn":157},{"ruleId":"5806","severity":1,"message":"5807","line":277,"column":160,"nodeType":"5808","messageId":"5809","endLine":277,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":278,"column":158,"nodeType":"5808","messageId":"5809","endLine":278,"endColumn":160},{"ruleId":"5806","severity":1,"message":"5807","line":279,"column":158,"nodeType":"5808","messageId":"5809","endLine":279,"endColumn":160},{"ruleId":"5806","severity":1,"message":"5807","line":284,"column":167,"nodeType":"5808","messageId":"5809","endLine":284,"endColumn":169},{"ruleId":"5806","severity":1,"message":"5807","line":285,"column":160,"nodeType":"5808","messageId":"5809","endLine":285,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":286,"column":158,"nodeType":"5808","messageId":"5809","endLine":286,"endColumn":160},{"ruleId":"5806","severity":1,"message":"5810","line":516,"column":22,"nodeType":"5808","messageId":"5809","endLine":516,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":525,"column":22,"nodeType":"5808","messageId":"5809","endLine":525,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":540,"column":36,"nodeType":"5808","messageId":"5809","endLine":540,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":540,"column":65,"nodeType":"5808","messageId":"5809","endLine":540,"endColumn":67},{"ruleId":"5806","severity":1,"message":"5807","line":590,"column":74,"nodeType":"5808","messageId":"5809","endLine":590,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":590,"column":90,"nodeType":"5808","messageId":"5809","endLine":590,"endColumn":92},{"ruleId":"5806","severity":1,"message":"5807","line":590,"column":102,"nodeType":"5808","messageId":"5809","endLine":590,"endColumn":104},{"ruleId":"5806","severity":1,"message":"5807","line":640,"column":160,"nodeType":"5808","messageId":"5809","endLine":640,"endColumn":162},{"ruleId":"5806","severity":1,"message":"5807","line":640,"column":176,"nodeType":"5808","messageId":"5809","endLine":640,"endColumn":178},{"ruleId":"5806","severity":1,"message":"5807","line":640,"column":188,"nodeType":"5808","messageId":"5809","endLine":640,"endColumn":190},{"ruleId":"5949","severity":1,"message":"5950","line":690,"column":94,"nodeType":"5951","messageId":"5952","endLine":690,"endColumn":96},{"ruleId":"5949","severity":1,"message":"5950","line":690,"column":117,"nodeType":"5951","messageId":"5952","endLine":690,"endColumn":119},{"ruleId":"5949","severity":1,"message":"5950","line":690,"column":138,"nodeType":"5951","messageId":"5952","endLine":690,"endColumn":140},{"ruleId":"5949","severity":1,"message":"5950","line":690,"column":161,"nodeType":"5951","messageId":"5952","endLine":690,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":690,"column":415,"nodeType":"5808","messageId":"5809","endLine":690,"endColumn":417},{"ruleId":"5806","severity":1,"message":"5807","line":690,"column":431,"nodeType":"5808","messageId":"5809","endLine":690,"endColumn":433},{"ruleId":"5806","severity":1,"message":"5807","line":690,"column":447,"nodeType":"5808","messageId":"5809","endLine":690,"endColumn":449},{"ruleId":"5949","severity":1,"message":"5950","line":740,"column":95,"nodeType":"5951","messageId":"5952","endLine":740,"endColumn":97},{"ruleId":"5949","severity":1,"message":"5950","line":740,"column":118,"nodeType":"5951","messageId":"5952","endLine":740,"endColumn":120},{"ruleId":"5949","severity":1,"message":"5950","line":740,"column":139,"nodeType":"5951","messageId":"5952","endLine":740,"endColumn":141},{"ruleId":"5949","severity":1,"message":"5950","line":740,"column":162,"nodeType":"5951","messageId":"5952","endLine":740,"endColumn":164},{"ruleId":"5806","severity":1,"message":"5807","line":740,"column":538,"nodeType":"5808","messageId":"5809","endLine":740,"endColumn":540},{"ruleId":"5806","severity":1,"message":"5807","line":740,"column":554,"nodeType":"5808","messageId":"5809","endLine":740,"endColumn":556},{"ruleId":"5806","severity":1,"message":"5807","line":740,"column":570,"nodeType":"5808","messageId":"5809","endLine":740,"endColumn":572},{"ruleId":"5806","severity":1,"message":"5807","line":790,"column":193,"nodeType":"5808","messageId":"5809","endLine":790,"endColumn":195},{"ruleId":"5806","severity":1,"message":"5807","line":790,"column":209,"nodeType":"5808","messageId":"5809","endLine":790,"endColumn":211},{"ruleId":"5806","severity":1,"message":"5807","line":790,"column":225,"nodeType":"5808","messageId":"5809","endLine":790,"endColumn":227},{"ruleId":"5949","severity":1,"message":"5950","line":840,"column":94,"nodeType":"5951","messageId":"5952","endLine":840,"endColumn":96},{"ruleId":"5949","severity":1,"message":"5950","line":840,"column":117,"nodeType":"5951","messageId":"5952","endLine":840,"endColumn":119},{"ruleId":"5949","severity":1,"message":"5950","line":840,"column":138,"nodeType":"5951","messageId":"5952","endLine":840,"endColumn":140},{"ruleId":"5949","severity":1,"message":"5950","line":840,"column":161,"nodeType":"5951","messageId":"5952","endLine":840,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":840,"column":451,"nodeType":"5808","messageId":"5809","endLine":840,"endColumn":453},{"ruleId":"5806","severity":1,"message":"5807","line":840,"column":467,"nodeType":"5808","messageId":"5809","endLine":840,"endColumn":469},{"ruleId":"5806","severity":1,"message":"5807","line":840,"column":483,"nodeType":"5808","messageId":"5809","endLine":840,"endColumn":485},{"ruleId":"5949","severity":1,"message":"5950","line":890,"column":95,"nodeType":"5951","messageId":"5952","endLine":890,"endColumn":97},{"ruleId":"5949","severity":1,"message":"5950","line":890,"column":118,"nodeType":"5951","messageId":"5952","endLine":890,"endColumn":120},{"ruleId":"5949","severity":1,"message":"5950","line":890,"column":139,"nodeType":"5951","messageId":"5952","endLine":890,"endColumn":141},{"ruleId":"5949","severity":1,"message":"5950","line":890,"column":162,"nodeType":"5951","messageId":"5952","endLine":890,"endColumn":164},{"ruleId":"5806","severity":1,"message":"5807","line":890,"column":572,"nodeType":"5808","messageId":"5809","endLine":890,"endColumn":574},{"ruleId":"5806","severity":1,"message":"5807","line":890,"column":588,"nodeType":"5808","messageId":"5809","endLine":890,"endColumn":590},{"ruleId":"5806","severity":1,"message":"5807","line":890,"column":604,"nodeType":"5808","messageId":"5809","endLine":890,"endColumn":606},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6050","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5828","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6090","line":32,"column":11,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6051","line":33,"column":11,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":42,"column":17,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6088","line":46,"column":10,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6089","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":112,"column":22,"nodeType":"5808","messageId":"5809","endLine":112,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":116,"column":251,"nodeType":"5808","messageId":"5809","endLine":116,"endColumn":253},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5788","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":13},{"ruleId":"5787","severity":1,"message":"6102","line":13,"column":10,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5819","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6105","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":9,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":9,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":15,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6146","line":81,"column":21,"nodeType":"5789","messageId":"5790","endLine":81,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5903","line":130,"column":12,"nodeType":"5789","messageId":"5790","endLine":130,"endColumn":15},{"ruleId":"5797","severity":1,"message":"6144","line":154,"column":6,"nodeType":"5799","endLine":154,"endColumn":14,"suggestions":"6244"},{"ruleId":"5806","severity":1,"message":"5807","line":160,"column":68,"nodeType":"5808","messageId":"5809","endLine":160,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":161,"column":51,"nodeType":"5808","messageId":"5809","endLine":161,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":166,"column":66,"nodeType":"5808","messageId":"5809","endLine":166,"endColumn":68},{"ruleId":"5915","severity":1,"message":"5916","line":222,"column":54,"nodeType":"5917","messageId":"5918","endLine":222,"endColumn":56},{"ruleId":"5806","severity":1,"message":"5810","line":223,"column":35,"nodeType":"5808","messageId":"5809","endLine":223,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5810","line":231,"column":23,"nodeType":"5808","messageId":"5809","endLine":231,"endColumn":25},{"ruleId":"5915","severity":1,"message":"5916","line":267,"column":46,"nodeType":"5917","messageId":"5918","endLine":267,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":300,"column":137,"nodeType":"5808","messageId":"5809","endLine":300,"endColumn":139},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5991","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":17,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":104,"column":50,"nodeType":"5808","messageId":"5809","endLine":104,"endColumn":52},{"ruleId":"5797","severity":1,"message":"6144","line":173,"column":8,"nodeType":"5799","endLine":173,"endColumn":16,"suggestions":"6245"},{"ruleId":"5806","severity":1,"message":"5807","line":179,"column":74,"nodeType":"5808","messageId":"5809","endLine":179,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":180,"column":59,"nodeType":"5808","messageId":"5809","endLine":180,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":185,"column":72,"nodeType":"5808","messageId":"5809","endLine":185,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":227,"column":72,"nodeType":"5917","messageId":"5918","endLine":227,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":228,"column":55,"nodeType":"5808","messageId":"5809","endLine":228,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5810","line":236,"column":35,"nodeType":"5808","messageId":"5809","endLine":236,"endColumn":37},{"ruleId":"5915","severity":1,"message":"5916","line":272,"column":58,"nodeType":"5917","messageId":"5918","endLine":272,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":305,"column":145,"nodeType":"5808","messageId":"5809","endLine":305,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6140","line":1,"column":37,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6211","line":29,"column":21,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6246","line":37,"column":12,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6247","line":37,"column":23,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6057","line":38,"column":17,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6138","line":39,"column":20,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6121","line":41,"column":11,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":23},{"ruleId":"5797","severity":1,"message":"6103","line":77,"column":8,"nodeType":"5799","endLine":77,"endColumn":16,"suggestions":"6248"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6102","line":12,"column":9,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5991","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6060","line":33,"column":12,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6061","line":33,"column":24,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6064","line":35,"column":21,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6066","line":37,"column":23,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6068","line":38,"column":24,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6070","line":39,"column":23,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6071","line":41,"column":12,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6072","line":41,"column":21,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6073","line":42,"column":12,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6074","line":42,"column":24,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6075","line":43,"column":12,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":43,"column":23,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6077","line":45,"column":12,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6078","line":45,"column":18,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6079","line":46,"column":12,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6058","line":46,"column":23,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6081","line":47,"column":22,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6082","line":48,"column":12,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6083","line":48,"column":24,"nodeType":"5789","messageId":"5790","endLine":48,"endColumn":37},{"ruleId":"5787","severity":1,"message":"6084","line":49,"column":12,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6085","line":49,"column":20,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6057","line":50,"column":17,"nodeType":"5789","messageId":"5790","endLine":50,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":88,"column":45,"nodeType":"5808","messageId":"5809","endLine":88,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5810","line":145,"column":62,"nodeType":"5808","messageId":"5809","endLine":145,"endColumn":64},{"ruleId":"5797","severity":1,"message":"6103","line":162,"column":8,"nodeType":"5799","endLine":162,"endColumn":16,"suggestions":"6249"},{"ruleId":"5806","severity":1,"message":"5807","line":168,"column":74,"nodeType":"5808","messageId":"5809","endLine":168,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":169,"column":59,"nodeType":"5808","messageId":"5809","endLine":169,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":174,"column":72,"nodeType":"5808","messageId":"5809","endLine":174,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":197,"column":58,"nodeType":"5917","messageId":"5918","endLine":197,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":230,"column":145,"nodeType":"5808","messageId":"5809","endLine":230,"endColumn":147},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":17,"column":12,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":17,"column":21,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":18,"column":12,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":18,"column":21,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5884","line":19,"column":21,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6166","line":20,"column":12,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6167","line":20,"column":24,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":37},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5882","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":18},{"ruleId":"5787","severity":1,"message":"6030","line":27,"column":14,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":7,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":9},{"ruleId":"5806","severity":1,"message":"5807","line":46,"column":60,"nodeType":"5808","messageId":"5809","endLine":46,"endColumn":62},{"ruleId":"5801","severity":1,"message":"5802","line":69,"column":21,"nodeType":"5803","endLine":69,"endColumn":281},{"ruleId":"6168","severity":1,"message":"6169","line":74,"column":17,"nodeType":"5803","messageId":"6170","endLine":74,"endColumn":236,"fix":"6250"},{"ruleId":"5806","severity":1,"message":"5810","line":89,"column":18,"nodeType":"5808","messageId":"5809","endLine":89,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":93,"column":87,"nodeType":"5808","messageId":"5809","endLine":93,"endColumn":89},{"ruleId":"5806","severity":1,"message":"5810","line":118,"column":18,"nodeType":"5808","messageId":"5809","endLine":118,"endColumn":20},{"ruleId":"5801","severity":1,"message":"5802","line":127,"column":21,"nodeType":"5803","endLine":127,"endColumn":137},{"ruleId":"5801","severity":1,"message":"5802","line":130,"column":44,"nodeType":"5803","endLine":130,"endColumn":155},{"ruleId":"5787","severity":1,"message":"5857","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5858","line":6,"column":22,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5860","line":7,"column":87,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":100},{"ruleId":"5787","severity":1,"message":"5861","line":7,"column":117,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":130},{"ruleId":"5787","severity":1,"message":"5862","line":8,"column":7,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":12},{"ruleId":"5863","severity":1,"message":"5864","line":257,"column":3,"nodeType":"5865","messageId":"5866","endLine":267,"endColumn":5},{"ruleId":"5867","severity":1,"message":"5868","line":257,"column":3,"nodeType":"5789","messageId":"5869","endLine":257,"endColumn":7},{"ruleId":"5787","severity":1,"message":"5836","line":7,"column":8,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5824","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":20,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5818","line":8,"column":27,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5838","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":33},{"ruleId":"5797","severity":1,"message":"5825","line":32,"column":6,"nodeType":"5799","endLine":32,"endColumn":15,"suggestions":"6251"},{"ruleId":"5801","severity":1,"message":"5802","line":39,"column":11,"nodeType":"5803","endLine":41,"endColumn":15},{"ruleId":"5804","severity":1,"message":"5805","line":42,"column":13,"nodeType":"5803","endLine":42,"endColumn":126},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5927","line":18,"column":10,"nodeType":"5789","messageId":"5790","endLine":18,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5928","line":64,"column":10,"nodeType":"5789","messageId":"5790","endLine":64,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":66,"column":10,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5841","line":93,"column":9,"nodeType":"5789","messageId":"5790","endLine":93,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":95,"column":9,"nodeType":"5789","messageId":"5790","endLine":95,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":97,"column":9,"nodeType":"5789","messageId":"5790","endLine":97,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5810","line":147,"column":21,"nodeType":"5808","messageId":"5809","endLine":147,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":151,"column":12,"nodeType":"5808","endLine":151,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":154,"column":36,"nodeType":"5808","messageId":"5809","endLine":154,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":154,"column":65,"nodeType":"5808","messageId":"5934","endLine":154,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":154,"column":77,"nodeType":"5808","messageId":"5809","endLine":154,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":154,"column":155,"nodeType":"5808","messageId":"5934","endLine":154,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":154,"column":167,"nodeType":"5808","messageId":"5809","endLine":154,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":156,"column":27,"nodeType":"5808","messageId":"5934","endLine":156,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":156,"column":39,"nodeType":"5808","messageId":"5809","endLine":156,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":156,"column":117,"nodeType":"5808","messageId":"5934","endLine":156,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":156,"column":129,"nodeType":"5808","messageId":"5809","endLine":156,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":162,"column":20,"nodeType":"5936","endLine":162,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":163,"column":18,"nodeType":"5936","endLine":163,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":169,"column":15,"nodeType":"5936","endLine":169,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":172,"column":20,"nodeType":"5789","endLine":172,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":175,"column":21,"nodeType":"5789","endLine":175,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":179,"column":17,"nodeType":"5789","endLine":179,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":183,"column":17,"nodeType":"5789","endLine":183,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":187,"column":22,"nodeType":"5789","endLine":187,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":191,"column":30,"nodeType":"5789","endLine":191,"endColumn":50},{"ruleId":"5912","severity":1,"message":"5913","line":198,"column":6,"nodeType":"5799","messageId":"5914","endLine":198,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":200,"column":9,"nodeType":"5789","messageId":"5790","endLine":200,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5948","line":214,"column":9,"nodeType":"5789","messageId":"5790","endLine":214,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5906","line":224,"column":9,"nodeType":"5789","messageId":"5790","endLine":224,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5810","line":364,"column":22,"nodeType":"5808","messageId":"5809","endLine":364,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":377,"column":36,"nodeType":"5808","messageId":"5809","endLine":377,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":377,"column":48,"nodeType":"5808","messageId":"5809","endLine":377,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":377,"column":60,"nodeType":"5808","messageId":"5809","endLine":377,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5807","line":411,"column":74,"nodeType":"5808","messageId":"5809","endLine":411,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":411,"column":86,"nodeType":"5808","messageId":"5809","endLine":411,"endColumn":88},{"ruleId":"5806","severity":1,"message":"5807","line":411,"column":98,"nodeType":"5808","messageId":"5809","endLine":411,"endColumn":100},{"ruleId":"5949","severity":1,"message":"5950","line":445,"column":94,"nodeType":"5951","messageId":"5952","endLine":445,"endColumn":96},{"ruleId":"5949","severity":1,"message":"5950","line":445,"column":117,"nodeType":"5951","messageId":"5952","endLine":445,"endColumn":119},{"ruleId":"5949","severity":1,"message":"5950","line":445,"column":138,"nodeType":"5951","messageId":"5952","endLine":445,"endColumn":140},{"ruleId":"5949","severity":1,"message":"5950","line":445,"column":161,"nodeType":"5951","messageId":"5952","endLine":445,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":446,"column":34,"nodeType":"5808","messageId":"5809","endLine":446,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":446,"column":50,"nodeType":"5808","messageId":"5809","endLine":446,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":446,"column":62,"nodeType":"5808","messageId":"5809","endLine":446,"endColumn":64},{"ruleId":"5806","severity":1,"message":"5807","line":480,"column":113,"nodeType":"5808","messageId":"5809","endLine":480,"endColumn":115},{"ruleId":"5806","severity":1,"message":"5807","line":480,"column":129,"nodeType":"5808","messageId":"5809","endLine":480,"endColumn":131},{"ruleId":"5806","severity":1,"message":"5807","line":480,"column":141,"nodeType":"5808","messageId":"5809","endLine":480,"endColumn":143},{"ruleId":"5806","severity":1,"message":"5807","line":515,"column":68,"nodeType":"5808","messageId":"5809","endLine":515,"endColumn":70},{"ruleId":"5806","severity":1,"message":"5807","line":515,"column":84,"nodeType":"5808","messageId":"5809","endLine":515,"endColumn":86},{"ruleId":"5806","severity":1,"message":"5807","line":515,"column":96,"nodeType":"5808","messageId":"5809","endLine":515,"endColumn":98},{"ruleId":"5949","severity":1,"message":"5950","line":551,"column":94,"nodeType":"5951","messageId":"5952","endLine":551,"endColumn":96},{"ruleId":"5949","severity":1,"message":"5950","line":551,"column":117,"nodeType":"5951","messageId":"5952","endLine":551,"endColumn":119},{"ruleId":"5949","severity":1,"message":"5950","line":551,"column":138,"nodeType":"5951","messageId":"5952","endLine":551,"endColumn":140},{"ruleId":"5949","severity":1,"message":"5950","line":551,"column":161,"nodeType":"5951","messageId":"5952","endLine":551,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":552,"column":34,"nodeType":"5808","messageId":"5809","endLine":552,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":552,"column":50,"nodeType":"5808","messageId":"5809","endLine":552,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":552,"column":62,"nodeType":"5808","messageId":"5809","endLine":552,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":589,"column":94,"nodeType":"5951","messageId":"5952","endLine":589,"endColumn":96},{"ruleId":"5949","severity":1,"message":"5950","line":589,"column":117,"nodeType":"5951","messageId":"5952","endLine":589,"endColumn":119},{"ruleId":"5949","severity":1,"message":"5950","line":589,"column":138,"nodeType":"5951","messageId":"5952","endLine":589,"endColumn":140},{"ruleId":"5949","severity":1,"message":"5950","line":589,"column":161,"nodeType":"5951","messageId":"5952","endLine":589,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":590,"column":34,"nodeType":"5808","messageId":"5809","endLine":590,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":590,"column":50,"nodeType":"5808","messageId":"5809","endLine":590,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":590,"column":62,"nodeType":"5808","messageId":"5809","endLine":590,"endColumn":64},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":94,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":96},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":117,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":119},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":138,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":140},{"ruleId":"5949","severity":1,"message":"5950","line":625,"column":161,"nodeType":"5951","messageId":"5952","endLine":625,"endColumn":163},{"ruleId":"5806","severity":1,"message":"5807","line":626,"column":34,"nodeType":"5808","messageId":"5809","endLine":626,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":626,"column":50,"nodeType":"5808","messageId":"5809","endLine":626,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":626,"column":62,"nodeType":"5808","messageId":"5809","endLine":626,"endColumn":64},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":12,"column":10,"nodeType":"5789","messageId":"5790","endLine":12,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6050","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6051","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6052","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6053","line":35,"column":23,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":36,"column":25,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6056","line":37,"column":25,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6057","line":47,"column":17,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6058","line":49,"column":23,"nodeType":"5789","messageId":"5790","endLine":49,"endColumn":35},{"ruleId":"5806","severity":1,"message":"5810","line":60,"column":55,"nodeType":"5808","messageId":"5809","endLine":60,"endColumn":57},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5819","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5991","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5992","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5930","line":27,"column":11,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6057","line":41,"column":17,"nodeType":"5789","messageId":"5790","endLine":41,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5810","line":106,"column":41,"nodeType":"5808","messageId":"5809","endLine":106,"endColumn":43},{"ruleId":"5797","severity":1,"message":"6144","line":159,"column":8,"nodeType":"5799","endLine":159,"endColumn":16,"suggestions":"6252"},{"ruleId":"5806","severity":1,"message":"5807","line":165,"column":74,"nodeType":"5808","messageId":"5809","endLine":165,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":166,"column":59,"nodeType":"5808","messageId":"5809","endLine":166,"endColumn":61},{"ruleId":"5806","severity":1,"message":"5807","line":171,"column":72,"nodeType":"5808","messageId":"5809","endLine":171,"endColumn":74},{"ruleId":"5915","severity":1,"message":"5916","line":213,"column":72,"nodeType":"5917","messageId":"5918","endLine":213,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5810","line":214,"column":55,"nodeType":"5808","messageId":"5809","endLine":214,"endColumn":57},{"ruleId":"5915","severity":1,"message":"5916","line":258,"column":58,"nodeType":"5917","messageId":"5918","endLine":258,"endColumn":60},{"ruleId":"5806","severity":1,"message":"5807","line":291,"column":145,"nodeType":"5808","messageId":"5809","endLine":291,"endColumn":147},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":9,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":9,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6052","line":31,"column":10,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":10,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":23,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":38},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":15,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6076","line":42,"column":21,"nodeType":"5789","messageId":"5790","endLine":42,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6083","line":43,"column":22,"nodeType":"5789","messageId":"5790","endLine":43,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6078","line":44,"column":16,"nodeType":"5789","messageId":"5790","endLine":44,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":21,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":33},{"ruleId":"5787","severity":1,"message":"6081","line":46,"column":20,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":9,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":51,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":53},{"ruleId":"5797","severity":1,"message":"6103","line":93,"column":6,"nodeType":"5799","endLine":93,"endColumn":14,"suggestions":"6253"},{"ruleId":"5787","severity":1,"message":"6043","line":6,"column":5,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":7,"column":36,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":47},{"ruleId":"5787","severity":1,"message":"6045","line":8,"column":5,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":8,"column":18,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5991","line":21,"column":11,"nodeType":"5789","messageId":"5790","endLine":21,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5930","line":23,"column":11,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6141","line":28,"column":12,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6142","line":28,"column":21,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6053","line":31,"column":23,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6054","line":32,"column":12,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6055","line":32,"column":25,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6056","line":33,"column":25,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":40},{"ruleId":"5787","severity":1,"message":"6057","line":39,"column":17,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":24},{"ruleId":"5787","severity":1,"message":"6058","line":45,"column":23,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6121","line":51,"column":11,"nodeType":"5789","messageId":"5790","endLine":51,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":58,"column":28,"nodeType":"5808","messageId":"5809","endLine":58,"endColumn":30},{"ruleId":"5806","severity":1,"message":"5807","line":62,"column":48,"nodeType":"5808","messageId":"5809","endLine":62,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5810","line":66,"column":55,"nodeType":"5808","messageId":"5809","endLine":66,"endColumn":57},{"ruleId":"5797","severity":1,"message":"6103","line":107,"column":8,"nodeType":"5799","endLine":107,"endColumn":16,"suggestions":"6254"},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":24,"column":21,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5787","severity":1,"message":"6185","line":34,"column":11,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":29},{"ruleId":"6168","severity":1,"message":"6169","line":50,"column":17,"nodeType":"5803","messageId":"6170","endLine":50,"endColumn":235,"fix":"6255"},{"ruleId":"5806","severity":1,"message":"5810","line":60,"column":92,"nodeType":"5808","messageId":"5809","endLine":60,"endColumn":94},{"ruleId":"5806","severity":1,"message":"5810","line":61,"column":41,"nodeType":"5808","messageId":"5809","endLine":61,"endColumn":43},{"ruleId":"5806","severity":1,"message":"5810","line":78,"column":183,"nodeType":"5808","messageId":"5809","endLine":78,"endColumn":185},{"ruleId":"5806","severity":1,"message":"5810","line":100,"column":18,"nodeType":"5808","messageId":"5809","endLine":100,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6256","line":8,"column":8,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5795","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5796","line":13,"column":19,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":29},{"ruleId":"5787","severity":1,"message":"6257","line":22,"column":11,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":14},{"ruleId":"5797","severity":1,"message":"6258","line":22,"column":15,"nodeType":"6259","endLine":22,"endColumn":34},{"ruleId":"5801","severity":1,"message":"5802","line":32,"column":17,"nodeType":"5803","endLine":34,"endColumn":21},{"ruleId":"5804","severity":1,"message":"5805","line":35,"column":21,"nodeType":"5803","endLine":35,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5807","line":39,"column":47,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":49},{"ruleId":"5806","severity":1,"message":"5810","line":39,"column":105,"nodeType":"5808","messageId":"5809","endLine":39,"endColumn":107},{"ruleId":"5787","severity":1,"message":"5853","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5854","line":7,"column":20,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5855","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5856","line":8,"column":24,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"5879","line":9,"column":9,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5907","line":15,"column":9,"nodeType":"5789","messageId":"5790","endLine":15,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5889","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":28,"column":25,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5891","line":29,"column":10,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5893","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5896","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5908","line":36,"column":10,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5909","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":39},{"ruleId":"5806","severity":1,"message":"5810","line":65,"column":82,"nodeType":"5808","messageId":"5809","endLine":65,"endColumn":84},{"ruleId":"5806","severity":1,"message":"5810","line":101,"column":23,"nodeType":"5808","messageId":"5809","endLine":101,"endColumn":25},{"ruleId":"5797","severity":1,"message":"5910","line":105,"column":12,"nodeType":"5808","endLine":105,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5911","line":107,"column":19,"nodeType":"5789","endLine":107,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":115,"column":5,"nodeType":"5799","messageId":"5914","endLine":115,"endColumn":54},{"ruleId":"5806","severity":1,"message":"5807","line":126,"column":70,"nodeType":"5808","messageId":"5809","endLine":126,"endColumn":72},{"ruleId":"5915","severity":1,"message":"5916","line":260,"column":77,"nodeType":"5917","messageId":"5918","endLine":260,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":261,"column":38,"nodeType":"5808","messageId":"5809","endLine":261,"endColumn":40},{"ruleId":"5806","severity":1,"message":"5807","line":261,"column":50,"nodeType":"5808","messageId":"5809","endLine":261,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":274,"column":106,"nodeType":"5808","messageId":"5809","endLine":274,"endColumn":108},{"ruleId":"5806","severity":1,"message":"5807","line":274,"column":118,"nodeType":"5808","messageId":"5809","endLine":274,"endColumn":120},{"ruleId":"5806","severity":1,"message":"5807","line":287,"column":43,"nodeType":"5808","messageId":"5809","endLine":287,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":287,"column":55,"nodeType":"5808","messageId":"5809","endLine":287,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5807","line":328,"column":43,"nodeType":"5808","messageId":"5809","endLine":328,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":328,"column":55,"nodeType":"5808","messageId":"5809","endLine":328,"endColumn":57},{"ruleId":"5787","severity":1,"message":"5788","line":1,"column":8,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6229","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6230","line":23,"column":25,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6241","line":25,"column":19,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6231","line":26,"column":12,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6232","line":26,"column":17,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6260","line":27,"column":12,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6233","line":27,"column":17,"nodeType":"5789","messageId":"5790","endLine":27,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6239","line":28,"column":21,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6240","line":29,"column":18,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6234","line":30,"column":19,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6047","line":35,"column":18,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":27},{"ruleId":"5797","severity":1,"message":"5910","line":58,"column":16,"nodeType":"5936","endLine":58,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":60,"column":9,"nodeType":"5789","messageId":"5790","endLine":60,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6235","line":74,"column":20,"nodeType":"5789","messageId":"5790","endLine":74,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":91,"column":20,"nodeType":"5808","messageId":"5809","endLine":91,"endColumn":22},{"ruleId":"5787","severity":1,"message":"6236","line":105,"column":11,"nodeType":"5789","messageId":"5790","endLine":105,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5905","line":24,"column":11,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6189","line":31,"column":21,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6230","line":33,"column":25,"nodeType":"5789","messageId":"5790","endLine":33,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6232","line":34,"column":17,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6260","line":35,"column":12,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6233","line":35,"column":17,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6234","line":36,"column":19,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6239","line":37,"column":21,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6240","line":38,"column":18,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6241","line":39,"column":19,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6121","line":40,"column":11,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6047","line":47,"column":18,"nodeType":"5789","messageId":"5790","endLine":47,"endColumn":27},{"ruleId":"5797","severity":1,"message":"5910","line":70,"column":16,"nodeType":"5936","endLine":70,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":72,"column":9,"nodeType":"5789","messageId":"5790","endLine":72,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6235","line":86,"column":20,"nodeType":"5789","messageId":"5790","endLine":86,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":107,"column":20,"nodeType":"5808","messageId":"5809","endLine":107,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":133,"column":8,"nodeType":"5799","endLine":133,"endColumn":16,"suggestions":"6261"},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6043","line":9,"column":5,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":11},{"ruleId":"5787","severity":1,"message":"6044","line":9,"column":20,"nodeType":"5789","messageId":"5790","endLine":9,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6045","line":10,"column":5,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":16},{"ruleId":"5787","severity":1,"message":"6046","line":10,"column":18,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6049","line":13,"column":9,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5854","line":13,"column":16,"nodeType":"5789","messageId":"5790","endLine":13,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5905","line":25,"column":11,"nodeType":"5789","messageId":"5790","endLine":25,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5991","line":26,"column":11,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":26},{"ruleId":"5787","severity":1,"message":"6238","line":31,"column":23,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":35},{"ruleId":"5787","severity":1,"message":"6189","line":32,"column":21,"nodeType":"5789","messageId":"5790","endLine":32,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6230","line":34,"column":25,"nodeType":"5789","messageId":"5790","endLine":34,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6232","line":35,"column":17,"nodeType":"5789","messageId":"5790","endLine":35,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6260","line":36,"column":12,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6233","line":36,"column":17,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6234","line":37,"column":19,"nodeType":"5789","messageId":"5790","endLine":37,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6239","line":38,"column":21,"nodeType":"5789","messageId":"5790","endLine":38,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6240","line":39,"column":18,"nodeType":"5789","messageId":"5790","endLine":39,"endColumn":25},{"ruleId":"5787","severity":1,"message":"6241","line":40,"column":19,"nodeType":"5789","messageId":"5790","endLine":40,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6047","line":45,"column":18,"nodeType":"5789","messageId":"5790","endLine":45,"endColumn":27},{"ruleId":"5787","severity":1,"message":"6121","line":46,"column":11,"nodeType":"5789","messageId":"5790","endLine":46,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":71,"column":16,"nodeType":"5936","endLine":71,"endColumn":17},{"ruleId":"5787","severity":1,"message":"6048","line":73,"column":9,"nodeType":"5789","messageId":"5790","endLine":73,"endColumn":15},{"ruleId":"5787","severity":1,"message":"6235","line":87,"column":20,"nodeType":"5789","messageId":"5790","endLine":87,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":108,"column":20,"nodeType":"5808","messageId":"5809","endLine":108,"endColumn":22},{"ruleId":"5797","severity":1,"message":"6103","line":133,"column":8,"nodeType":"5799","endLine":133,"endColumn":16,"suggestions":"6262"},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5883","line":16,"column":12,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":16,"column":21,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":31},{"ruleId":"5806","severity":1,"message":"5807","line":24,"column":73,"nodeType":"5808","messageId":"5809","endLine":24,"endColumn":75},{"ruleId":"5806","severity":1,"message":"5807","line":30,"column":60,"nodeType":"5808","messageId":"5809","endLine":30,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5807","line":84,"column":117,"nodeType":"5808","messageId":"5809","endLine":84,"endColumn":119},{"ruleId":"5806","severity":1,"message":"5807","line":86,"column":36,"nodeType":"5808","messageId":"5809","endLine":86,"endColumn":38},{"ruleId":"5806","severity":1,"message":"5807","line":86,"column":93,"nodeType":"5808","messageId":"5809","endLine":86,"endColumn":95},{"ruleId":"5806","severity":1,"message":"5807","line":92,"column":56,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":58},{"ruleId":"5806","severity":1,"message":"5807","line":99,"column":51,"nodeType":"5808","messageId":"5809","endLine":99,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":123,"column":42,"nodeType":"5808","messageId":"5809","endLine":123,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":125,"column":42,"nodeType":"5808","messageId":"5809","endLine":125,"endColumn":44},{"ruleId":"5787","severity":1,"message":"5921","line":1,"column":9,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5922","line":1,"column":26,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":43},{"ruleId":"5787","severity":1,"message":"5923","line":1,"column":45,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":54},{"ruleId":"5787","severity":1,"message":"5854","line":2,"column":15,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5924","line":3,"column":9,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5925","line":3,"column":18,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5926","line":5,"column":16,"nodeType":"5789","messageId":"5790","endLine":5,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5978","line":8,"column":8,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5827","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":14},{"ruleId":"5787","severity":1,"message":"5824","line":14,"column":9,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5818","line":14,"column":27,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":32},{"ruleId":"5787","severity":1,"message":"5979","line":14,"column":34,"nodeType":"5789","messageId":"5790","endLine":14,"endColumn":39},{"ruleId":"5787","severity":1,"message":"5927","line":19,"column":10,"nodeType":"5789","messageId":"5790","endLine":19,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5980","line":20,"column":8,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5981","line":53,"column":19,"nodeType":"5789","messageId":"5790","endLine":53,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5982","line":54,"column":17,"nodeType":"5789","messageId":"5790","endLine":54,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5953","line":59,"column":10,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5954","line":59,"column":19,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5928","line":66,"column":10,"nodeType":"5789","messageId":"5790","endLine":66,"endColumn":26},{"ruleId":"5787","severity":1,"message":"5929","line":68,"column":10,"nodeType":"5789","messageId":"5790","endLine":68,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5955","line":72,"column":10,"nodeType":"5789","messageId":"5790","endLine":72,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5956","line":72,"column":21,"nodeType":"5789","messageId":"5790","endLine":72,"endColumn":33},{"ruleId":"5787","severity":1,"message":"5983","line":85,"column":7,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5984","line":85,"column":16,"nodeType":"5789","messageId":"5790","endLine":85,"endColumn":27},{"ruleId":"5787","severity":1,"message":"5985","line":90,"column":8,"nodeType":"5789","messageId":"5790","endLine":90,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5841","line":96,"column":9,"nodeType":"5789","messageId":"5790","endLine":96,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5930","line":98,"column":9,"nodeType":"5789","messageId":"5790","endLine":98,"endColumn":24},{"ruleId":"5787","severity":1,"message":"5931","line":100,"column":9,"nodeType":"5789","messageId":"5790","endLine":100,"endColumn":28},{"ruleId":"5787","severity":1,"message":"5986","line":106,"column":8,"nodeType":"5789","messageId":"5790","endLine":106,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5987","line":106,"column":20,"nodeType":"5789","messageId":"5790","endLine":106,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5810","line":135,"column":21,"nodeType":"5808","messageId":"5809","endLine":135,"endColumn":23},{"ruleId":"5797","severity":1,"message":"5910","line":139,"column":12,"nodeType":"5808","endLine":139,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5807","line":142,"column":36,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":38},{"ruleId":"5932","severity":1,"message":"5933","line":142,"column":65,"nodeType":"5808","messageId":"5934","endLine":142,"endColumn":82},{"ruleId":"5806","severity":1,"message":"5810","line":142,"column":77,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":79},{"ruleId":"5932","severity":1,"message":"5933","line":142,"column":155,"nodeType":"5808","messageId":"5934","endLine":142,"endColumn":172},{"ruleId":"5806","severity":1,"message":"5810","line":142,"column":167,"nodeType":"5808","messageId":"5809","endLine":142,"endColumn":169},{"ruleId":"5932","severity":1,"message":"5933","line":144,"column":27,"nodeType":"5808","messageId":"5934","endLine":144,"endColumn":44},{"ruleId":"5806","severity":1,"message":"5810","line":144,"column":39,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":41},{"ruleId":"5932","severity":1,"message":"5933","line":144,"column":117,"nodeType":"5808","messageId":"5934","endLine":144,"endColumn":134},{"ruleId":"5806","severity":1,"message":"5810","line":144,"column":129,"nodeType":"5808","messageId":"5809","endLine":144,"endColumn":131},{"ruleId":"5797","severity":1,"message":"5935","line":150,"column":20,"nodeType":"5936","endLine":150,"endColumn":21},{"ruleId":"5797","severity":1,"message":"5937","line":151,"column":18,"nodeType":"5936","endLine":151,"endColumn":19},{"ruleId":"5797","severity":1,"message":"5938","line":157,"column":15,"nodeType":"5936","endLine":157,"endColumn":16},{"ruleId":"5797","severity":1,"message":"5939","line":160,"column":20,"nodeType":"5789","endLine":160,"endColumn":30},{"ruleId":"5797","severity":1,"message":"5940","line":163,"column":21,"nodeType":"5789","endLine":163,"endColumn":32},{"ruleId":"5797","severity":1,"message":"5941","line":167,"column":17,"nodeType":"5789","endLine":167,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5942","line":171,"column":17,"nodeType":"5789","endLine":171,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5944","line":175,"column":22,"nodeType":"5789","endLine":175,"endColumn":34},{"ruleId":"5797","severity":1,"message":"5946","line":179,"column":30,"nodeType":"5789","endLine":179,"endColumn":50},{"ruleId":"5797","severity":1,"message":"5988","line":185,"column":10,"nodeType":"5936","endLine":185,"endColumn":12},{"ruleId":"5912","severity":1,"message":"5913","line":188,"column":6,"nodeType":"5799","messageId":"5914","endLine":188,"endColumn":105},{"ruleId":"5787","severity":1,"message":"5947","line":190,"column":9,"nodeType":"5789","messageId":"5790","endLine":190,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6263","line":218,"column":9,"nodeType":"5789","messageId":"5790","endLine":218,"endColumn":28},{"ruleId":"5806","severity":1,"message":"5807","line":228,"column":73,"nodeType":"5808","messageId":"5809","endLine":228,"endColumn":75},{"ruleId":"5787","severity":1,"message":"5989","line":237,"column":11,"nodeType":"5789","messageId":"5790","endLine":237,"endColumn":23},{"ruleId":"5806","severity":1,"message":"5807","line":258,"column":88,"nodeType":"5808","messageId":"5809","endLine":258,"endColumn":90},{"ruleId":"5806","severity":1,"message":"5807","line":291,"column":107,"nodeType":"5808","messageId":"5809","endLine":291,"endColumn":109},{"ruleId":"5806","severity":1,"message":"5810","line":415,"column":22,"nodeType":"5808","messageId":"5809","endLine":415,"endColumn":24},{"ruleId":"5806","severity":1,"message":"5807","line":428,"column":34,"nodeType":"5808","messageId":"5809","endLine":428,"endColumn":36},{"ruleId":"5806","severity":1,"message":"5807","line":428,"column":46,"nodeType":"5808","messageId":"5809","endLine":428,"endColumn":48},{"ruleId":"5806","severity":1,"message":"5807","line":465,"column":72,"nodeType":"5808","messageId":"5809","endLine":465,"endColumn":74},{"ruleId":"5806","severity":1,"message":"5807","line":465,"column":84,"nodeType":"5808","messageId":"5809","endLine":465,"endColumn":86},{"ruleId":"5949","severity":1,"message":"5950","line":502,"column":92,"nodeType":"5951","messageId":"5952","endLine":502,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":502,"column":115,"nodeType":"5951","messageId":"5952","endLine":502,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":502,"column":136,"nodeType":"5951","messageId":"5952","endLine":502,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":502,"column":159,"nodeType":"5951","messageId":"5952","endLine":502,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":503,"column":32,"nodeType":"5808","messageId":"5809","endLine":503,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":503,"column":48,"nodeType":"5808","messageId":"5809","endLine":503,"endColumn":50},{"ruleId":"5806","severity":1,"message":"5807","line":540,"column":35,"nodeType":"5808","messageId":"5809","endLine":540,"endColumn":37},{"ruleId":"5806","severity":1,"message":"5807","line":540,"column":51,"nodeType":"5808","messageId":"5809","endLine":540,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":578,"column":66,"nodeType":"5808","messageId":"5809","endLine":578,"endColumn":68},{"ruleId":"5806","severity":1,"message":"5807","line":578,"column":82,"nodeType":"5808","messageId":"5809","endLine":578,"endColumn":84},{"ruleId":"5949","severity":1,"message":"5950","line":616,"column":92,"nodeType":"5951","messageId":"5952","endLine":616,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":616,"column":115,"nodeType":"5951","messageId":"5952","endLine":616,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":616,"column":136,"nodeType":"5951","messageId":"5952","endLine":616,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":616,"column":159,"nodeType":"5951","messageId":"5952","endLine":616,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":617,"column":32,"nodeType":"5808","messageId":"5809","endLine":617,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":617,"column":48,"nodeType":"5808","messageId":"5809","endLine":617,"endColumn":50},{"ruleId":"5949","severity":1,"message":"5950","line":656,"column":92,"nodeType":"5951","messageId":"5952","endLine":656,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":656,"column":115,"nodeType":"5951","messageId":"5952","endLine":656,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":656,"column":136,"nodeType":"5951","messageId":"5952","endLine":656,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":656,"column":159,"nodeType":"5951","messageId":"5952","endLine":656,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":657,"column":32,"nodeType":"5808","messageId":"5809","endLine":657,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":657,"column":48,"nodeType":"5808","messageId":"5809","endLine":657,"endColumn":50},{"ruleId":"5949","severity":1,"message":"5950","line":695,"column":92,"nodeType":"5951","messageId":"5952","endLine":695,"endColumn":94},{"ruleId":"5949","severity":1,"message":"5950","line":695,"column":115,"nodeType":"5951","messageId":"5952","endLine":695,"endColumn":117},{"ruleId":"5949","severity":1,"message":"5950","line":695,"column":136,"nodeType":"5951","messageId":"5952","endLine":695,"endColumn":138},{"ruleId":"5949","severity":1,"message":"5950","line":695,"column":159,"nodeType":"5951","messageId":"5952","endLine":695,"endColumn":161},{"ruleId":"5806","severity":1,"message":"5807","line":696,"column":32,"nodeType":"5808","messageId":"5809","endLine":696,"endColumn":34},{"ruleId":"5806","severity":1,"message":"5807","line":696,"column":48,"nodeType":"5808","messageId":"5809","endLine":696,"endColumn":50},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":27,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":36},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6123","line":6,"column":10,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":21},{"ruleId":"5787","severity":1,"message":"5880","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6124","line":22,"column":12,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6125","line":22,"column":21,"nodeType":"5789","messageId":"5790","endLine":22,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6126","line":23,"column":12,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6127","line":23,"column":21,"nodeType":"5789","messageId":"5790","endLine":23,"endColumn":31},{"ruleId":"5787","severity":1,"message":"5883","line":24,"column":12,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":24,"column":21,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6030","line":26,"column":14,"nodeType":"5789","messageId":"5790","endLine":26,"endColumn":21},{"ruleId":"5806","severity":1,"message":"5807","line":37,"column":11,"nodeType":"5808","messageId":"5809","endLine":37,"endColumn":13},{"ruleId":"5806","severity":1,"message":"5807","line":45,"column":60,"nodeType":"5808","messageId":"5809","endLine":45,"endColumn":62},{"ruleId":"6168","severity":1,"message":"6169","line":74,"column":17,"nodeType":"5803","messageId":"6170","endLine":74,"endColumn":235,"fix":"6264"},{"ruleId":"5806","severity":1,"message":"5810","line":84,"column":92,"nodeType":"5808","messageId":"5809","endLine":84,"endColumn":94},{"ruleId":"5806","severity":1,"message":"5810","line":85,"column":41,"nodeType":"5808","messageId":"5809","endLine":85,"endColumn":43},{"ruleId":"6168","severity":1,"message":"6169","line":88,"column":23,"nodeType":"5803","messageId":"6170","endLine":88,"endColumn":275,"fix":"6265"},{"ruleId":"5806","severity":1,"message":"5810","line":116,"column":183,"nodeType":"5808","messageId":"5809","endLine":116,"endColumn":185},{"ruleId":"5806","severity":1,"message":"5810","line":120,"column":234,"nodeType":"5808","messageId":"5809","endLine":120,"endColumn":236},{"ruleId":"5806","severity":1,"message":"5810","line":158,"column":18,"nodeType":"5808","messageId":"5809","endLine":158,"endColumn":20},{"ruleId":"5806","severity":1,"message":"5810","line":170,"column":50,"nodeType":"5808","messageId":"5809","endLine":170,"endColumn":52},{"ruleId":"5801","severity":1,"message":"6181","line":171,"column":21,"nodeType":"5803","endLine":171,"endColumn":242},{"ruleId":"5787","severity":1,"message":"5836","line":7,"column":8,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":17},{"ruleId":"5787","severity":1,"message":"5795","line":8,"column":9,"nodeType":"5789","messageId":"5790","endLine":8,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6266","line":17,"column":11,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":37},{"ruleId":"5797","severity":1,"message":"6267","line":24,"column":7,"nodeType":"5799","endLine":24,"endColumn":16,"suggestions":"6268"},{"ruleId":"5787","severity":1,"message":"5827","line":3,"column":10,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":3,"column":17,"nodeType":"5789","messageId":"5790","endLine":3,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6269","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5879","line":10,"column":9,"nodeType":"5789","messageId":"5790","endLine":10,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5907","line":16,"column":9,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":18},{"ruleId":"5787","severity":1,"message":"5882","line":24,"column":9,"nodeType":"5789","messageId":"5790","endLine":24,"endColumn":16},{"ruleId":"5787","severity":1,"message":"5889","line":28,"column":10,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":23},{"ruleId":"5787","severity":1,"message":"5890","line":28,"column":25,"nodeType":"5789","messageId":"5790","endLine":28,"endColumn":41},{"ruleId":"5787","severity":1,"message":"5891","line":29,"column":10,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":20},{"ruleId":"5787","severity":1,"message":"5892","line":29,"column":22,"nodeType":"5789","messageId":"5790","endLine":29,"endColumn":35},{"ruleId":"5787","severity":1,"message":"5893","line":30,"column":10,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5894","line":30,"column":31,"nodeType":"5789","messageId":"5790","endLine":30,"endColumn":53},{"ruleId":"5787","severity":1,"message":"5896","line":31,"column":19,"nodeType":"5789","messageId":"5790","endLine":31,"endColumn":29},{"ruleId":"5787","severity":1,"message":"5908","line":36,"column":10,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":22},{"ruleId":"5787","severity":1,"message":"5909","line":36,"column":24,"nodeType":"5789","messageId":"5790","endLine":36,"endColumn":39},{"ruleId":"5787","severity":1,"message":"6270","line":58,"column":7,"nodeType":"5789","messageId":"5790","endLine":58,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6271","line":59,"column":7,"nodeType":"5789","messageId":"5790","endLine":59,"endColumn":19},{"ruleId":"5787","severity":1,"message":"6272","line":60,"column":7,"nodeType":"5789","messageId":"5790","endLine":60,"endColumn":20},{"ruleId":"5787","severity":1,"message":"6273","line":61,"column":7,"nodeType":"5789","messageId":"5790","endLine":61,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6274","line":62,"column":7,"nodeType":"5789","messageId":"5790","endLine":62,"endColumn":25},{"ruleId":"5806","severity":1,"message":"5810","line":71,"column":22,"nodeType":"5808","messageId":"5809","endLine":71,"endColumn":24},{"ruleId":"5797","severity":1,"message":"5910","line":75,"column":12,"nodeType":"5808","endLine":75,"endColumn":20},{"ruleId":"5797","severity":1,"message":"5911","line":77,"column":19,"nodeType":"5789","endLine":77,"endColumn":27},{"ruleId":"5912","severity":1,"message":"5913","line":81,"column":5,"nodeType":"5799","messageId":"5914","endLine":81,"endColumn":53},{"ruleId":"5806","severity":1,"message":"5807","line":92,"column":70,"nodeType":"5808","messageId":"5809","endLine":92,"endColumn":72},{"ruleId":"5915","severity":1,"message":"5916","line":221,"column":74,"nodeType":"5917","messageId":"5918","endLine":221,"endColumn":76},{"ruleId":"5806","severity":1,"message":"5807","line":222,"column":38,"nodeType":"5808","messageId":"5809","endLine":222,"endColumn":40},{"ruleId":"5806","severity":1,"message":"5807","line":222,"column":50,"nodeType":"5808","messageId":"5809","endLine":222,"endColumn":52},{"ruleId":"5806","severity":1,"message":"5807","line":235,"column":77,"nodeType":"5808","messageId":"5809","endLine":235,"endColumn":79},{"ruleId":"5806","severity":1,"message":"5807","line":235,"column":89,"nodeType":"5808","messageId":"5809","endLine":235,"endColumn":91},{"ruleId":"5806","severity":1,"message":"5807","line":248,"column":43,"nodeType":"5808","messageId":"5809","endLine":248,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":248,"column":55,"nodeType":"5808","messageId":"5809","endLine":248,"endColumn":57},{"ruleId":"5806","severity":1,"message":"5807","line":289,"column":43,"nodeType":"5808","messageId":"5809","endLine":289,"endColumn":45},{"ruleId":"5806","severity":1,"message":"5807","line":289,"column":55,"nodeType":"5808","messageId":"5809","endLine":289,"endColumn":57},{"ruleId":"5787","severity":1,"message":"6039","line":1,"column":16,"nodeType":"5789","messageId":"5790","endLine":1,"endColumn":25},{"ruleId":"5787","severity":1,"message":"5827","line":2,"column":10,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":15},{"ruleId":"5787","severity":1,"message":"5828","line":2,"column":17,"nodeType":"5789","messageId":"5790","endLine":2,"endColumn":30},{"ruleId":"5787","severity":1,"message":"6087","line":6,"column":8,"nodeType":"5789","messageId":"5790","endLine":6,"endColumn":14},{"ruleId":"5787","severity":1,"message":"6112","line":7,"column":9,"nodeType":"5789","messageId":"5790","endLine":7,"endColumn":13},{"ruleId":"5787","severity":1,"message":"5883","line":16,"column":12,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":19},{"ruleId":"5787","severity":1,"message":"5884","line":16,"column":21,"nodeType":"5789","messageId":"5790","endLine":16,"endColumn":31},{"ruleId":"5787","severity":1,"message":"6275","line":17,"column":11,"nodeType":"5789","messageId":"5790","endLine":17,"endColumn":23},{"ruleId":"5787","severity":1,"message":"6113","line":20,"column":11,"nodeType":"5789","messageId":"5790","endLine":20,"endColumn":29},{"ruleId":"5806","severity":1,"message":"5807","line":21,"column":73,"nodeType":"5808","messageId":"5809","endLine":21,"endColumn":75},{"ruleId":"5806","severity":1,"message":"5807","line":26,"column":60,"nodeType":"5808","messageId":"5809","endLine":26,"endColumn":62},{"ruleId":"5806","severity":1,"message":"5807","line":72,"column":45,"nodeType":"5808","messageId":"5809","endLine":72,"endColumn":47},{"ruleId":"5806","severity":1,"message":"5807","line":102,"column":46,"nodeType":"5808","messageId":"5809","endLine":102,"endColumn":48},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["6276"],"no-negated-in-lhs",["6277"],"'Input' is defined but never used.","'setvpstype' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["6278"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'vpstype' is assigned a value but never used.",["6279"],["6280"],"'option' is assigned a value but never used.","'setOption' is assigned a value but never used.",["6281"],"'ComputerItem' is defined but never used.","'Label' is defined but never used.","'randomString' is defined but never used.","'setAddTrue' is assigned a value but never used.",["6282"],"'addcron' is defined but never used.","'sum_total' is assigned a value but never used.","'FormGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'role', and 'user'. Either include them or remove the dependency array.",["6283"],"'KTSVG' is defined but never used.","'toAbsoluteUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'getnow' and 'role'. Either include them or remove the dependency array.",["6284"],["6285"],"React Hook useEffect has missing dependencies: 'get5M' and 'role'. Either include them or remove the dependency array.",["6286"],["6287"],"'PropTypes' is defined but never used.","'EditModal' is defined but never used.","'EditModalCmt' is defined but never used.","'currentOrder' is assigned a value but never used.","'currentOrderCmt' is assigned a value but never used.","'currentOrderFollowerTikTok' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'key', 'keycheck', 'orders', 'orderscmt', and 'ordersfollowertiktok'. Either include them or remove the dependency array.",["6288"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","'YoutubeEmbed' is assigned a value but never used.",["6289"],["6290"],["6291"],["6292"],["6293"],"'Header' is defined but never used.","'intl' is assigned a value but never used.","'OrderForm' is defined but never used.","'OrderModel' is defined but never used.","'deleteChannel' is defined but never used.","'updateOrder' is defined but never used.","'App' is defined but never used.","'OrderPost' is defined but never used.","'OrderUpdateForm' is defined but never used.","'updateSetting' is defined but never used.","'addOrderMulti' is defined but never used.","'sleep' is assigned a value but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'http:' is defined but never used.","unused","'AccountLimitForm' is defined but never used.","'ProxySettingForm' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'result' is assigned a value but never used.","'channelPrior' is assigned a value but never used.",["6294"],"'actions' is defined but never used.","'ComputerModel' is defined but never used.","'round' is defined but never used.","'dispatch' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'showEditMulti' is assigned a value but never used.","'setShowEditMulti' is assigned a value but never used.","'showRestartMulti' is assigned a value but never used.","'setShowRestartMulti' is assigned a value but never used.","'showAddManual' is assigned a value but never used.","'setShowAddManual' is assigned a value but never used.","'total_user' is assigned a value but never used.","'settotal_user' is assigned a value but never used.","'total_user_endtrial' is assigned a value but never used.","'settotal_user_endtrial' is assigned a value but never used.","'vpstpye' is assigned a value but never used.","'setvpstpye' is assigned a value but never used.","'keytrue' is assigned a value but never used.","'setKeyTrue' is assigned a value but never used.","'keystatus' is assigned a value but never used.","'setKeyStatus' is assigned a value but never used.","'keystatustrue' is assigned a value but never used.","'setKeyStatusTrue' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'role' is assigned a value but never used.","'isShowFixMulti' is assigned a value but never used.","'randomInt' is defined but never used.","'statusVNTrue' is assigned a value but never used.","'setstatusVNTrue' is assigned a value but never used.","Assignments to the 'useEff' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldvpsshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'statusTrue' is assigned a value but never used.","'getcountsbyendtrial' is defined but never used.","'ChevronDownIcon' is defined but never used.","'SortAscendingIcon' is defined but never used.","'UsersIcon' is defined but never used.","'Popover' is defined but never used.","'Transition' is defined but never used.","'Fragment' is defined but never used.","'DateRangePicker' is defined but never used.","'keydatestarttrue' is assigned a value but never used.","'keydateendtrue' is assigned a value but never used.","'groups' is assigned a value but never used.","'currentGroup' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","Assignments to the 'keydatestart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'keydateend' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'keydate' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalmoneyshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldordershow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalVnshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalUsshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalKrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalmoneyUSshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalmoneyKRshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedordershow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'selectGroup' is assigned a value but never used.","'addGroup' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'showAdd' is assigned a value but never used.","'setShowAdd' is assigned a value but never used.","'groupName' is assigned a value but never used.","'setGroupName' is assigned a value but never used.","'totaltimebuffedorder' is assigned a value but never used.","'totaltimebuffedordershow' is assigned a value but never used.","'setTotalTimeBuffedOrderShow' is assigned a value but never used.","'setTotalOrderVN' is assigned a value but never used.","'setTotalOrderKR' is assigned a value but never used.","'setTotalAdd' is assigned a value but never used.","'setTotalSub' is assigned a value but never used.","Assignments to the 'totaladdvnshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaladdkrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalsubvnshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalsubkrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldorder' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldorderVnshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldordervn' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldorderKrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldorderkr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaladdshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaladd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalsubshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalsub' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'setList_OrderHistory' is assigned a value but never used.","'AddModal' is defined but never used.","'Modal' is defined but never used.","'DatePicker' is defined but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'copyShow' is assigned a value but never used.","'setCopyShow' is assigned a value but never used.","'copy_check' is assigned a value but never used.","'list_refund' is assigned a value but never used.","'setRefund' is assigned a value but never used.","Assignments to the 'copy' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'arr' is assigned a value but never used.","'Spinner' is defined but never used.","'balance' is assigned a value but never used.","'discount' is assigned a value but never used.","'price' is assigned a value but never used.","'bonus' is assigned a value but never used.","'vip' is assigned a value but never used.","'videos' is assigned a value but never used.","Assignments to the 'totaltimeordershow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeorder' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeorderusshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeorderus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeorderkrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeorderkr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalthreadsetshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalthreadsetusshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalthreadsetkrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalthreadshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalthreadusshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalthreadkrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedorder' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedorderusshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedorderus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedorderkrshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedorderkr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","'updateOrderCheck' is defined but never used.","'setNameExport' is assigned a value but never used.","@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","Assignments to the 'totalServiceShow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'clsx' is defined but never used.","'HeaderNotificationsMenu' is defined but never used.","'QuickLinks' is defined but never used.","'Search' is defined but never used.","'toolbarButtonMarginClass' is assigned a value but never used.","'toolbarButtonHeightClass' is assigned a value but never used.","'toolbarUserAvatarHeightClass' is assigned a value but never used.","'toolbarButtonIconSizeClass' is assigned a value but never used.","'format1' is defined but never used.","React Hook useEffect has missing dependencies: 'getnow' and 'user.role'. Either include them or remove the dependency array.",["6295"],"React Hook useEffect has a missing dependency: 'user.role'. Either include it or remove the dependency array.",["6296"],"'animate_string' is defined but never used.","'config' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'setuseEff' is assigned a value but never used.","'useEff' is assigned a value but never used.","'Group' is defined but never used.","'updateAccount' is defined but never used.","'adding' is assigned a value but never used.","'view_need' is assigned a value but never used.","'setView_need' is assigned a value but never used.","'premium_rate' is assigned a value but never used.","'setPremium_rate' is assigned a value but never used.","'setView_percent' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setViewstart' is assigned a value but never used.","'Form' is defined but never used.","'maxthreads' is assigned a value but never used.","'setMaxthreads' is assigned a value but never used.","'view_percent' is assigned a value but never used.","'homerate' is assigned a value but never used.","'setHome_rate' is assigned a value but never used.","'searchrate' is assigned a value but never used.","'setSearch_rate' is assigned a value but never used.","'suggestrate' is assigned a value but never used.","'setSuggest_rate' is assigned a value but never used.","'directrate' is assigned a value but never used.","'setDirect_rate' is assigned a value but never used.","'likerate' is assigned a value but never used.","'setLike_rate' is assigned a value but never used.","'commentrate' is assigned a value but never used.","'setComment_rate' is assigned a value but never used.","'mobilerate' is assigned a value but never used.","'setMobile_rate' is assigned a value but never used.","'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'viewstart' is assigned a value but never used.","'timebuff' is assigned a value but never used.","'setTimebuff' is assigned a value but never used.","'optionbuff' is assigned a value but never used.","'setOptionbuff' is assigned a value but never used.","'enabled' is assigned a value but never used.","'setEnabled' is assigned a value but never used.","'resetComputer' is defined but never used.","'moment' is defined but never used.","'timebuff_old' is assigned a value but never used.","'setTimebuff_Old' is assigned a value but never used.","'username' is assigned a value but never used.","'setpricerate' is assigned a value but never used.","'AsideMenuItemWithSub' is defined but never used.","'ChannelStaticModel' is defined but never used.","'ChannelStaticItem' is defined but never used.","'totaltimeorder' is assigned a value but never used.","'setTotalTimeOrder' is assigned a value but never used.","'totaltimeordershow' is assigned a value but never used.","'setTotalTimeOrderShow' is assigned a value but never used.","'setTotalTimeBuffedOrder' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'addorderv2' is defined but never used.","React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["6297"],"'getUserByToken' is defined but never used.","'sumprice' is assigned a value but never used.","'sumtime' is assigned a value but never used.","'video' is assigned a value but never used.",["6298"],["6299"],["6300"],"'date' is defined but never used.","'clickDeleteHandler' is assigned a value but never used.","'mobile_rate' is assigned a value but never used.","'keyword' is assigned a value but never used.","'setKeyword' is assigned a value but never used.","'comment_list' is assigned a value but never used.","'setComment_list' is assigned a value but never used.","'group_id' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'dismissModal' is assigned a value but never used.",["6301"],"'getFunciton' is defined but never used.","'running' is assigned a value but never used.","'setRunning' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.",["6302"],"'OrderItem' is defined but never used.","'string' is defined but never used.","'register' is defined but never used.","'auth' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'adding'. Either include it or remove the dependency array.",["6303"],"'setvieworder' is assigned a value but never used.","'setservice' is assigned a value but never used.",["6304"],"'ReactChild' is defined but never used.","'videoid' is assigned a value but never used.","'setVideoid' is assigned a value but never used.",["6305"],"React Hook useEffect has missing dependencies: 'close', 'getcounttimeorder', and 'list_service'. Either include them or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["6306"],"'getkey' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'countvideo'.","unsafeRefs",["6307"],["6308"],["6309"],"'bh_video_ver2' is defined but never used.",["6310"],["6311"],["6312"],["6313"],"'setCommentstart' is assigned a value but never used.",["6314"],["6315"],"'setcommentorder' is assigned a value but never used.",["6316"],["6317"],["6318"],["6319"],"'isHovering' is assigned a value but never used.","'setIsHovering' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"6320","text":"6321"},{"range":"6322","text":"6321"},{"range":"6323","text":"6321"},{"range":"6324","text":"6321"},{"range":"6325","text":"6321"},{"range":"6326","text":"6321"},{"range":"6327","text":"6321"},{"range":"6328","text":"6321"},{"range":"6329","text":"6321"},{"range":"6330","text":"6321"},"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'close' and 'getcounttimeorder'. Either include them or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["6331"],"'setorderid' is assigned a value but never used.","'clickUpdateHandler' is assigned a value but never used.",{"range":"6332","text":"6321"},["6333"],["6334"],"'setthreads' is assigned a value but never used.",["6335"],["6336"],["6337"],{"range":"6338","text":"6321"},"'Languages' is defined but never used.","'useParams' is defined but never used.",["6339"],["6340"],["6341"],["6342"],["6343"],["6344"],{"range":"6345","text":"6321"},{"range":"6346","text":"6321"},["6276"],["6277"],{"range":"6347","text":"6321"},"'AccountModel' is defined but never used.",["6348"],"'strings' is assigned a value but never used.",["6349"],"'setOrderid' is assigned a value but never used.","'setLink' is assigned a value but never used.",["6350"],["6351"],{"range":"6352","text":"6321"},["6353"],["6354"],["6355"],["6356"],["6357"],{"range":"6358","text":"6321"},"'sum_die' is assigned a value but never used.",["6359"],["6360"],"'AccountLimitModel' is defined but never used.",["6361"],"'changer_vn' is defined but never used.","'changer_us' is defined but never used.","'get_account' is assigned a value but never used.","'setget_account' is assigned a value but never used.","'ext' is assigned a value but never used.","'setext' is assigned a value but never used.","'setcmt' is assigned a value but never used.","'setproxy' is assigned a value but never used.","'resetrunningacccmt' is defined but never used.","'handleChange' is assigned a value but never used.",["6362"],"'setvpsoption' is assigned a value but never used.","'setrunning' is assigned a value but never used.","'setlive' is assigned a value but never used.","'setstate' is assigned a value but never used.",["6363"],["6364"],["6365"],["6366"],"'tiktok_id' is assigned a value but never used.","'setTiktok_id' is assigned a value but never used.",["6367"],["6368"],{"range":"6369","text":"6321"},["6370"],["6371"],["6372"],["6373"],{"range":"6374","text":"6321"},"'DeviceModal' is defined but never used.","'vps' is assigned a value but never used.","Assignments to the 'vps' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ChainExpression","'cmt' is assigned a value but never used.",["6375"],["6376"],"'clickRefund100Check' is assigned a value but never used.",{"range":"6377","text":"6321"},{"range":"6378","text":"6321"},"'currentDevice' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'vps'. Either include them or remove the dependency array.",["6379"],"'UserItem' is defined but never used.","'total_waring' is assigned a value but never used.","'total_thread' is assigned a value but never used.","'total_view24h' is assigned a value but never used.","'total_thread_set' is assigned a value but never used.","'total_tool_warning' is assigned a value but never used.","'clickHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"6380","fix":"6381"},{"desc":"6380","fix":"6382"},{"desc":"6383","fix":"6384"},{"desc":"6380","fix":"6385"},{"desc":"6386","fix":"6387"},{"desc":"6388","fix":"6389"},{"desc":"6390","fix":"6391"},{"desc":"6388","fix":"6392"},{"desc":"6393","fix":"6394"},{"desc":"6388","fix":"6395"},{"desc":"6396","fix":"6397"},{"desc":"6388","fix":"6398"},{"desc":"6386","fix":"6399"},{"desc":"6388","fix":"6400"},{"desc":"6388","fix":"6401"},{"desc":"6388","fix":"6402"},{"desc":"6403","fix":"6404"},{"desc":"6405","fix":"6406"},{"desc":"6407","fix":"6408"},{"desc":"6409","fix":"6410"},{"desc":"6409","fix":"6411"},{"desc":"6409","fix":"6412"},{"desc":"6409","fix":"6413"},{"desc":"6409","fix":"6414"},{"desc":"6409","fix":"6415"},{"desc":"6416","fix":"6417"},{"desc":"6409","fix":"6418"},{"desc":"6409","fix":"6419"},{"desc":"6420","fix":"6421"},{"desc":"6420","fix":"6422"},{"desc":"6409","fix":"6423"},{"desc":"6420","fix":"6424"},{"desc":"6409","fix":"6425"},{"desc":"6409","fix":"6426"},{"desc":"6409","fix":"6427"},{"desc":"6409","fix":"6428"},{"desc":"6409","fix":"6429"},{"desc":"6420","fix":"6430"},{"desc":"6409","fix":"6431"},{"desc":"6420","fix":"6432"},{"desc":"6409","fix":"6433"},{"desc":"6420","fix":"6434"},[3258,3258]," rel=\"noreferrer\"",[3599,3599],[3258,3258],[3597,3597],[3258,3258],[3599,3599],[3206,3206],[3591,3591],[3778,3778],[6009,6009],{"desc":"6435","fix":"6436"},[2378,2378],{"desc":"6409","fix":"6437"},{"desc":"6420","fix":"6438"},{"desc":"6409","fix":"6439"},{"desc":"6409","fix":"6440"},{"desc":"6409","fix":"6441"},[2451,2451],{"desc":"6386","fix":"6442"},{"desc":"6388","fix":"6443"},{"desc":"6420","fix":"6444"},{"desc":"6409","fix":"6445"},{"desc":"6409","fix":"6446"},{"desc":"6420","fix":"6447"},[3206,3206],[3547,3547],[3068,3068],{"desc":"6388","fix":"6448"},{"desc":"6420","fix":"6449"},{"desc":"6409","fix":"6450"},{"desc":"6409","fix":"6451"},[3186,3186],{"desc":"6420","fix":"6452"},{"desc":"6388","fix":"6453"},{"desc":"6420","fix":"6454"},{"desc":"6409","fix":"6455"},{"desc":"6409","fix":"6456"},[2307,2307],{"desc":"6386","fix":"6457"},{"desc":"6386","fix":"6458"},{"desc":"6380","fix":"6459"},{"desc":"6409","fix":"6460"},{"desc":"6409","fix":"6461"},{"desc":"6388","fix":"6462"},{"desc":"6420","fix":"6463"},{"desc":"6420","fix":"6464"},{"desc":"6409","fix":"6465"},{"desc":"6409","fix":"6466"},[3576,3576],{"desc":"6388","fix":"6467"},{"desc":"6420","fix":"6468"},{"desc":"6409","fix":"6469"},{"desc":"6409","fix":"6470"},[2127,2127],{"desc":"6409","fix":"6471"},{"desc":"6409","fix":"6472"},[3468,3468],[5865,5865],{"desc":"6473","fix":"6474"},"Update the dependencies array to be: [dispatch, refresh]",{"range":"6475","text":"6476"},{"range":"6477","text":"6476"},"Update the dependencies array to be: [dispatch, refresh, refresh1, refresh2]",{"range":"6478","text":"6479"},{"range":"6480","text":"6476"},"Update the dependencies array to be: [dispatch, status]",{"range":"6481","text":"6482"},"Update the dependencies array to be: [dispatch, refresh, role, user]",{"range":"6483","text":"6484"},"Update the dependencies array to be: [getnow, role, toggle]",{"range":"6485","text":"6486"},{"range":"6487","text":"6484"},"Update the dependencies array to be: [get5M, role, toggle1]",{"range":"6488","text":"6489"},{"range":"6490","text":"6484"},"Update the dependencies array to be: [dispatch, key, keycheck, option, orders, orderscmt, ordersfollowertiktok]",{"range":"6491","text":"6492"},{"range":"6493","text":"6484"},{"range":"6494","text":"6482"},{"range":"6495","text":"6484"},{"range":"6496","text":"6484"},{"range":"6497","text":"6484"},"Update the dependencies array to be: [dispatch]",{"range":"6498","text":"6499"},"Update the dependencies array to be: [getnow, toggle, user.role]",{"range":"6500","text":"6501"},"Update the dependencies array to be: [toggle5m, user.role]",{"range":"6502","text":"6503"},"Update the dependencies array to be: [adding, close]",{"range":"6504","text":"6505"},{"range":"6506","text":"6505"},{"range":"6507","text":"6505"},{"range":"6508","text":"6505"},{"range":"6509","text":"6505"},{"range":"6510","text":"6505"},"Update the dependencies array to be: [adding, show]",{"range":"6511","text":"6512"},{"range":"6513","text":"6505"},{"range":"6514","text":"6505"},"Update the dependencies array to be: [adding, close, getcounttimeorder, list_service]",{"range":"6515","text":"6516"},{"range":"6517","text":"6516"},{"range":"6518","text":"6505"},{"range":"6519","text":"6516"},{"range":"6520","text":"6505"},{"range":"6521","text":"6505"},{"range":"6522","text":"6505"},{"range":"6523","text":"6505"},{"range":"6524","text":"6505"},{"range":"6525","text":"6516"},{"range":"6526","text":"6505"},{"range":"6527","text":"6516"},{"range":"6528","text":"6505"},{"range":"6529","text":"6516"},"Update the dependencies array to be: [adding, close, getcounttimeorder]",{"range":"6530","text":"6531"},{"range":"6532","text":"6505"},{"range":"6533","text":"6516"},{"range":"6534","text":"6505"},{"range":"6535","text":"6505"},{"range":"6536","text":"6505"},{"range":"6537","text":"6482"},{"range":"6538","text":"6484"},{"range":"6539","text":"6516"},{"range":"6540","text":"6505"},{"range":"6541","text":"6505"},{"range":"6542","text":"6516"},{"range":"6543","text":"6484"},{"range":"6544","text":"6516"},{"range":"6545","text":"6505"},{"range":"6546","text":"6505"},{"range":"6547","text":"6516"},{"range":"6548","text":"6484"},{"range":"6549","text":"6516"},{"range":"6550","text":"6505"},{"range":"6551","text":"6505"},{"range":"6552","text":"6482"},{"range":"6553","text":"6482"},{"range":"6554","text":"6476"},{"range":"6555","text":"6505"},{"range":"6556","text":"6505"},{"range":"6557","text":"6484"},{"range":"6558","text":"6516"},{"range":"6559","text":"6516"},{"range":"6560","text":"6505"},{"range":"6561","text":"6505"},{"range":"6562","text":"6484"},{"range":"6563","text":"6516"},{"range":"6564","text":"6505"},{"range":"6565","text":"6505"},{"range":"6566","text":"6505"},{"range":"6567","text":"6505"},"Update the dependencies array to be: [dispatch, refresh, vps]",{"range":"6568","text":"6569"},[957,966],"[dispatch, refresh]",[932,941],[2122,2149],"[dispatch, refresh, refresh1, refresh2]",[950,959],[1296,1304],"[dispatch, status]",[1337,1346],"[dispatch, refresh, role, user]",[2999,3007],"[getnow, role, toggle]",[3338,3347],[3780,3789],"[get5M, role, toggle1]",[1321,1330],[2977,2996],"[dispatch, key, keycheck, option, orders, orderscmt, ordersfollowertiktok]",[1321,1330],[1291,1299],[1351,1360],[1063,1072],[1323,1332],[1006,1008],"[dispatch]",[3796,3804],"[getnow, toggle, user.role]",[4246,4256],"[toggle5m, user.role]",[6179,6187],"[adding, close]",[11086,11094],[6179,6187],[6207,6215],[3447,3455],[2957,2965],[4904,4910],"[adding, show]",[2874,2882],[4177,4185],[6686,6694],"[adding, close, getcounttimeorder, list_service]",[8841,8849],[4128,4136],[6667,6675],[12215,12223],[6540,6548],[4149,4157],[2858,2866],[4165,4173],[6670,6678],[2851,2859],[6658,6666],[2980,2988],[5720,5728],[5685,5693],"[adding, close, getcounttimeorder]",[3871,3879],[5720,5728],[4939,4947],[2980,2988],[4864,4872],[1230,1238],[1321,1330],[8830,8838],[6179,6187],[4315,4323],[6658,6666],[1321,1330],[6725,6733],[4102,4110],[6179,6187],[4920,4928],[1351,1360],[5720,5728],[2980,2988],[3871,3879],[1136,1144],[1161,1169],[947,956],[4744,4752],[4939,4947],[1349,1358],[4785,4793],[6498,6506],[2740,2748],[6013,6021],[1379,1388],[5720,5728],[2980,2988],[3871,3879],[4749,4757],[4797,4805],[1051,1060],"[dispatch, refresh, vps]"]